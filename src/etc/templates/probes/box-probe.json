{"templateName":"box-probe","componentsTree":{"key":"node3","type":"PAGE_COMPONENT_TYPE","props":{"componentName":"usr.in-page-components.layouts.BoxResponsive","componentInstance":"boxResponsive","errors":{},"isSelected":true},"index":0,"children":[{"key":"node4","type":"COMPONENT_PROPERTY_ARRAY_OF_TYPE","props":{"propertyName":"content","propertyComment":"A list of the components that will be placed inside the Box component. Increase the array to have more items.","defaultChildren":[{"type":"COMPONENT_PROPERTY_ELEMENT_TYPE","props":{"componentName":"__PlaceHolder"}}]},"index":0,"children":[{"key":"node5","type":"COMPONENT_PROPERTY_ELEMENT_TYPE","props":{"componentName":"__PlaceHolder"},"index":0}]},{"key":"node6","type":"COMPONENT_PROPERTY_BOOL_TYPE","props":{"propertyName":"doNotUseInFlows","propertyComment":"\n If true then the component's instance will not be allowed to use in flows,\n and you will not see the instance name in the pages instances list\n","propertyValue":true},"index":1},{"key":"node7","type":"COMPONENT_PROPERTY_ARRAY_OF_TYPE","props":{"propertyName":"stylesByScreenSize","propertyComment":"\n A list of the styles groups applied to different screen sizes accordingly.\n Reload the entire page to see the changes.\n The changes are not applied immediately due to the JSS nature of the Box component.\n","defaultChildren":[{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{},"children":[{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"breakpoint","propertyComment":"\n A screen size breakpoint id.\n Find the real size value in the application settings in LivePreview.\n","propertyValueVariants":[{"value":"xs"},{"value":"sm"},{"value":"md"},{"value":"lg"},{"value":"xl"}],"propertyValue":"xs"}},{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"styling","propertyComment":"\n A groups of styles that are applied for the selected breakpoint.\n Reload the entire page to see the changes.\n The changes are not applied immediately due to the JSS nature of the Box component.\n"},"children":[{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"borders","propertyComment":"Sets style to element's border","externalProperties":"usr.common-props.borders.BordersTypes"},"children":[{"type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"border","propertyComment":"\n The border-width CSS property sets the width of an element's border.\n When the value is specified, it applies the same width to all four sides.\n","propertyValue":1}},{"type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"borderBottom","propertyComment":"The border-bottom-width CSS property sets the width of the bottom border of an element."}},{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"borderColor","propertyComment":"The border-color CSS property sets the color of an element's border.","externalProperties":"usr.common-props.color.ColorTypes"},"children":[{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorHue","propertyComment":"A value from the collection of colors, i.e. hues","propertyValueVariants":[{"value":"primary.main"},{"value":"secondary.main"},{"value":"error.main"},{"value":"text.primary"},{"value":"text.secondary"},{"value":"text.disabled"},{"value":"text.hint"},{"value":"red"},{"value":"pink"},{"value":"purple"},{"value":"deepPurple"},{"value":"indigo"},{"value":"blue"},{"value":"lightBlue"},{"value":"cyan"},{"value":"teal"},{"value":"green"},{"value":"lightGreen"},{"value":"lime"},{"value":"yellow"},{"value":"amber"},{"value":"orange"},{"value":"deepOrange"},{"value":"brown"},{"value":"grey"},{"value":"blueGrey"}]}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorShade","propertyComment":"A value from the collection of colors shades","propertyValueVariants":[{"value":"50"},{"value":"100"},{"value":"200"},{"value":"300"},{"value":"400"},{"value":"500"},{"value":"600"},{"value":"700"},{"value":"800"},{"value":"900"},{"value":"A100"},{"value":"A200"},{"value":"A400"},{"value":"A700"}]}}]},{"type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"borderLeft","propertyComment":"The border-left-width CSS property sets the width of the left border of an element."}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"borderRadius","propertyComment":"\n The border-radius CSS property rounds the corners of an element's outer border edge.\n You can set a single radius to make circular corners, or two radii to make elliptical corners.\n Use a string value of the border radius to set units: 10% 30% 50% 70%\n"}},{"type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"borderRight","propertyComment":"The border-right-width CSS property sets the width of the right border of an element."}},{"type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"borderTop","propertyComment":"The border-top-width CSS property sets the width of the top border of an element"}}]},{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"display","propertyComment":"Toggle the display value of components","externalProperties":"usr.common-props.display.DisplayTypes"},"children":[{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"display","propertyComment":"\n The display CSS property sets whether an element is treated as\n a block or inline element and the layout used for its children,\n such as flow layout, grid or flex.\n","propertyValueVariants":[{"value":"block"},{"value":"flex"},{"value":"flow"},{"value":"inline"}]}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"overflow","propertyComment":"\n The overflow shorthand CSS property sets what to do when\n an element's content is too big to fit in its block formatting context.\n","propertyValueVariants":[{"value":"auto"},{"value":"hidden"},{"value":"scroll"},{"value":"visible"}]}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"textOverflow","propertyComment":"\n The text-overflow CSS property sets how hidden overflow content is signaled to users.\n","propertyValueVariants":[{"value":"clip"},{"value":"ellipsis"}]}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"visibility","propertyComment":"\n The visibility CSS property shows or hides an element without changing the layout of a document.\n","propertyValueVariants":[{"value":"hidden"},{"value":"visible"},{"value":"collapse"}]}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"whiteSpace","propertyComment":"\n The white-space CSS property sets how white space inside an element is handled.\n","propertyValueVariants":[{"value":"normal"},{"value":"nowrap"},{"value":"pre"},{"value":"pre-wrap"},{"value":"pre-line"},{"value":"break-spaces"}]}}]},{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"palette","propertyComment":"Sets the color of the component"},"children":[{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"backgroundColor","externalProperties":"usr.common-props.color.ColorTypes"},"children":[{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorHue","propertyComment":"A value from the collection of colors, i.e. hues","propertyValueVariants":[{"value":"primary.main"},{"value":"secondary.main"},{"value":"error.main"},{"value":"text.primary"},{"value":"text.secondary"},{"value":"text.disabled"},{"value":"text.hint"},{"value":"red"},{"value":"pink"},{"value":"purple"},{"value":"deepPurple"},{"value":"indigo"},{"value":"blue"},{"value":"lightBlue"},{"value":"cyan"},{"value":"teal"},{"value":"green"},{"value":"lightGreen"},{"value":"lime"},{"value":"yellow"},{"value":"amber"},{"value":"orange"},{"value":"deepOrange"},{"value":"brown"},{"value":"grey"},{"value":"blueGrey"}]}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorShade","propertyComment":"A value from the collection of colors shades","propertyValueVariants":[{"value":"50"},{"value":"100"},{"value":"200"},{"value":"300"},{"value":"400"},{"value":"500"},{"value":"600"},{"value":"700"},{"value":"800"},{"value":"900"},{"value":"A100"},{"value":"A200"},{"value":"A400"},{"value":"A700"}]}}]},{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"color","externalProperties":"usr.common-props.color.ColorTypes"},"children":[{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorHue","propertyComment":"A value from the collection of colors, i.e. hues","propertyValueVariants":[{"value":"primary.main"},{"value":"secondary.main"},{"value":"error.main"},{"value":"text.primary"},{"value":"text.secondary"},{"value":"text.disabled"},{"value":"text.hint"},{"value":"red"},{"value":"pink"},{"value":"purple"},{"value":"deepPurple"},{"value":"indigo"},{"value":"blue"},{"value":"lightBlue"},{"value":"cyan"},{"value":"teal"},{"value":"green"},{"value":"lightGreen"},{"value":"lime"},{"value":"yellow"},{"value":"amber"},{"value":"orange"},{"value":"deepOrange"},{"value":"brown"},{"value":"grey"},{"value":"blueGrey"}]}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorShade","propertyComment":"A value from the collection of colors shades","propertyValueVariants":[{"value":"50"},{"value":"100"},{"value":"200"},{"value":"300"},{"value":"400"},{"value":"500"},{"value":"600"},{"value":"700"},{"value":"800"},{"value":"900"},{"value":"A100"},{"value":"A200"},{"value":"A400"},{"value":"A700"}]}}]}]},{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"sizing","propertyComment":"\n Easily make an element as wide or as tall (relative to its parent) with the width and height utilities.\n","externalProperties":"usr.common-props.sizing.SizingTypes"},"children":[{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"height","propertyComment":"\n The height CSS property specifies the height of an element.\n By default, the property defines the height of the content area.\n Use a string value to specify units: 50%\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"maxHeight","propertyComment":"\n The max-height CSS property sets the maximum height of an element.\n It prevents the used value of the height property from becoming larger than the value specified for max-height.\n Use a string value to specify units: 50%\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"maxWidth","propertyComment":"\n The max-width CSS property sets the maximum width of an element.\n It prevents the used value of the width property from becoming larger than the value specified by max-width.\n Use a string value to specify units: 50%\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"minHeight","propertyComment":"\n The min-height CSS property sets the minimum height of an element.\n It prevents the used value of the height property from becoming smaller than the value specified for min-height.\n Use a string value to specify units: 50%\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"minWidth","propertyComment":"\n The min-width CSS property sets the minimum width of an element.\n It prevents the used value of the width property from becoming smaller than the value specified for min-width.\n Use a string value to specify units: 50%\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"width","propertyComment":"\n The width CSS property sets an element's width. By default, it sets the width of the content area.\n Use a string value to specify units: 50%\n"}}]},{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"spacing","propertyComment":"\n A range of shorthand responsive margin and padding utility classes to modify an element’s appearance.\n","externalProperties":"usr.common-props.spacing.SpacingTypes"},"children":[{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"marginSpacing","propertyComment":"\n A group of the margin properties\n Depending on the input and the theme configuration, the following transformation is applied:\n (1) number - the property is multiplied by the theme spacing value,\n (2) number - the property is used as the array index in theme spacing array,\n (3) string - the property is passed as raw CSS value\n"},"children":[{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"margin","propertyComment":"\n The property sets the margin area.\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginBottom","propertyComment":"\n The property sets the margin area on the bottom of an element.\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginLeft","propertyComment":"\n The property sets the margin area on the left side of an element.\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginRight","propertyComment":"\n The property sets the margin area on the right side of an element.\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginTop","propertyComment":"\n The property sets the margin area on the top of an element.\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginX","propertyComment":"\n The property sets the margin area on the left and right sides of an element.\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginY","propertyComment":"\n The property sets the margin area on the top and bottom sides of an element.\n"}}]},{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"paddingSpacing","propertyComment":"\n A group of the padding properties.\n Depending on the input and the theme configuration, the following transformation is applied:\n (1) number - the property is multiplied by the theme spacing value,\n (2) number - the property is used as the array index in theme spacing array,\n (3) string - the property is passed as raw CSS value\n"},"children":[{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"padding","propertyComment":"\n The property sets the padding area on all four sides of an element.\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingBottom","propertyComment":"\n The property sets the padding area on the bottom of an element.\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingLeft","propertyComment":"\n The property sets the padding area on the left side of an element.\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingRight","propertyComment":"\n The property sets the padding area on the right side of an element.\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingTop","propertyComment":"\n The property sets the padding area on the top of an element.\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingX","propertyComment":"\n The property sets the padding area on the left and right sides of an element.\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingY","propertyComment":"\n The property sets the padding area on the top and bottom sides of an element.\n"}}]}]}]}]}]},"index":2,"children":[{"key":"node8","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{},"index":0,"children":[{"key":"node9","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"breakpoint","propertyComment":"\n A screen size breakpoint id.\n Find the real size value in the application settings in LivePreview.\n","propertyValueVariants":[{"value":"xs"},{"value":"sm"},{"value":"md"},{"value":"lg"},{"value":"xl"}],"propertyValue":"xs"},"index":0},{"key":"node10","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"styling","propertyComment":"\n A groups of styles that are applied for the selected breakpoint.\n Reload the entire page to see the changes.\n The changes are not applied immediately due to the JSS nature of the Box component.\n"},"index":1,"children":[{"key":"node11","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"borders","propertyComment":"Sets style to element's border","externalProperties":"usr.common-props.borders.BordersTypes"},"index":0,"children":[{"key":"node12","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"border","propertyComment":"\n The border-width CSS property sets the width of an element's border.\n When the value is specified, it applies the same width to all four sides.\n","propertyValue":1},"index":0},{"key":"node13","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"borderBottom","propertyComment":"The border-bottom-width CSS property sets the width of the bottom border of an element."},"index":1},{"key":"node14","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"borderColor","propertyComment":"The border-color CSS property sets the color of an element's border.","externalProperties":"usr.common-props.color.ColorTypes"},"index":2,"children":[{"key":"node15","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorHue","propertyComment":"A value from the collection of colors, i.e. hues","propertyValueVariants":[{"value":"primary.main"},{"value":"secondary.main"},{"value":"error.main"},{"value":"text.primary"},{"value":"text.secondary"},{"value":"text.disabled"},{"value":"text.hint"},{"value":"red"},{"value":"pink"},{"value":"purple"},{"value":"deepPurple"},{"value":"indigo"},{"value":"blue"},{"value":"lightBlue"},{"value":"cyan"},{"value":"teal"},{"value":"green"},{"value":"lightGreen"},{"value":"lime"},{"value":"yellow"},{"value":"amber"},{"value":"orange"},{"value":"deepOrange"},{"value":"brown"},{"value":"grey"},{"value":"blueGrey"}]},"index":0},{"key":"node16","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorShade","propertyComment":"A value from the collection of colors shades","propertyValueVariants":[{"value":"50"},{"value":"100"},{"value":"200"},{"value":"300"},{"value":"400"},{"value":"500"},{"value":"600"},{"value":"700"},{"value":"800"},{"value":"900"},{"value":"A100"},{"value":"A200"},{"value":"A400"},{"value":"A700"}]},"index":1}]},{"key":"node17","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"borderLeft","propertyComment":"The border-left-width CSS property sets the width of the left border of an element."},"index":3},{"key":"node18","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"borderRadius","propertyComment":"\n The border-radius CSS property rounds the corners of an element's outer border edge.\n You can set a single radius to make circular corners, or two radii to make elliptical corners.\n Use a string value of the border radius to set units: 10% 30% 50% 70%\n"},"index":4},{"key":"node19","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"borderRight","propertyComment":"The border-right-width CSS property sets the width of the right border of an element."},"index":5},{"key":"node20","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"borderTop","propertyComment":"The border-top-width CSS property sets the width of the top border of an element"},"index":6}]},{"key":"node21","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"display","externalProperties":"usr.common-props.display.DisplayTypes","propertyComment":"Toggle the display value of components"},"index":1,"children":[{"key":"node24","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"display","propertyComment":"\n The display CSS property sets whether an element is treated as\n a block or inline element and the layout used for its children,\n such as flow layout, grid or flex.\n","propertyValueVariants":[{"value":"block"},{"value":"flex"},{"value":"flow"},{"value":"inline"}],"propertyValue":"flex"},"index":0},{"key":"node25","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"overflow","propertyComment":"\n The overflow shorthand CSS property sets what to do when\n an element's content is too big to fit in its block formatting context.\n","propertyValueVariants":[{"value":"auto"},{"value":"hidden"},{"value":"scroll"},{"value":"visible"}]},"index":1},{"key":"node26","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"textOverflow","propertyComment":"\n The text-overflow CSS property sets how hidden overflow content is signaled to users.\n","propertyValueVariants":[{"value":"clip"},{"value":"ellipsis"}]},"index":2},{"key":"node27","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"visibility","propertyComment":"\n The visibility CSS property shows or hides an element without changing the layout of a document.\n","propertyValueVariants":[{"value":"hidden"},{"value":"visible"},{"value":"collapse"}]},"index":3},{"key":"node28","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"whiteSpace","propertyComment":"\n The white-space CSS property sets how white space inside an element is handled.\n","propertyValueVariants":[{"value":"normal"},{"value":"nowrap"},{"value":"pre"},{"value":"pre-wrap"},{"value":"pre-line"},{"value":"break-spaces"}]},"index":4}]},{"key":"node29","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"palette","propertyComment":"Sets the color of the component"},"index":2,"children":[{"key":"node30","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"backgroundColor","externalProperties":"usr.common-props.color.ColorTypes"},"index":0,"children":[{"key":"node31","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorHue","propertyComment":"A value from the collection of colors, i.e. hues","propertyValueVariants":[{"value":"primary.main"},{"value":"secondary.main"},{"value":"error.main"},{"value":"text.primary"},{"value":"text.secondary"},{"value":"text.disabled"},{"value":"text.hint"},{"value":"red"},{"value":"pink"},{"value":"purple"},{"value":"deepPurple"},{"value":"indigo"},{"value":"blue"},{"value":"lightBlue"},{"value":"cyan"},{"value":"teal"},{"value":"green"},{"value":"lightGreen"},{"value":"lime"},{"value":"yellow"},{"value":"amber"},{"value":"orange"},{"value":"deepOrange"},{"value":"brown"},{"value":"grey"},{"value":"blueGrey"}]},"index":0},{"key":"node32","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorShade","propertyComment":"A value from the collection of colors shades","propertyValueVariants":[{"value":"50"},{"value":"100"},{"value":"200"},{"value":"300"},{"value":"400"},{"value":"500"},{"value":"600"},{"value":"700"},{"value":"800"},{"value":"900"},{"value":"A100"},{"value":"A200"},{"value":"A400"},{"value":"A700"}]},"index":1}]},{"key":"node33","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"color","externalProperties":"usr.common-props.color.ColorTypes"},"index":1,"children":[{"key":"node34","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorHue","propertyComment":"A value from the collection of colors, i.e. hues","propertyValueVariants":[{"value":"primary.main"},{"value":"secondary.main"},{"value":"error.main"},{"value":"text.primary"},{"value":"text.secondary"},{"value":"text.disabled"},{"value":"text.hint"},{"value":"red"},{"value":"pink"},{"value":"purple"},{"value":"deepPurple"},{"value":"indigo"},{"value":"blue"},{"value":"lightBlue"},{"value":"cyan"},{"value":"teal"},{"value":"green"},{"value":"lightGreen"},{"value":"lime"},{"value":"yellow"},{"value":"amber"},{"value":"orange"},{"value":"deepOrange"},{"value":"brown"},{"value":"grey"},{"value":"blueGrey"}]},"index":0},{"key":"node35","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorShade","propertyComment":"A value from the collection of colors shades","propertyValueVariants":[{"value":"50"},{"value":"100"},{"value":"200"},{"value":"300"},{"value":"400"},{"value":"500"},{"value":"600"},{"value":"700"},{"value":"800"},{"value":"900"},{"value":"A100"},{"value":"A200"},{"value":"A400"},{"value":"A700"}]},"index":1}]}]},{"key":"node36","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"sizing","propertyComment":"\n Easily make an element as wide or as tall (relative to its parent) with the width and height utilities.\n","externalProperties":"usr.common-props.sizing.SizingTypes"},"index":3,"children":[{"key":"node37","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"height","propertyComment":"\n The height CSS property specifies the height of an element.\n By default, the property defines the height of the content area.\n Use a string value to specify units: 50%\n"},"index":0},{"key":"node38","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"maxHeight","propertyComment":"\n The max-height CSS property sets the maximum height of an element.\n It prevents the used value of the height property from becoming larger than the value specified for max-height.\n Use a string value to specify units: 50%\n"},"index":1},{"key":"node39","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"maxWidth","propertyComment":"\n The max-width CSS property sets the maximum width of an element.\n It prevents the used value of the width property from becoming larger than the value specified by max-width.\n Use a string value to specify units: 50%\n"},"index":2},{"key":"node40","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"minHeight","propertyComment":"\n The min-height CSS property sets the minimum height of an element.\n It prevents the used value of the height property from becoming smaller than the value specified for min-height.\n Use a string value to specify units: 50%\n"},"index":3},{"key":"node41","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"minWidth","propertyComment":"\n The min-width CSS property sets the minimum width of an element.\n It prevents the used value of the width property from becoming smaller than the value specified for min-width.\n Use a string value to specify units: 50%\n"},"index":4},{"key":"node42","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"width","propertyComment":"\n The width CSS property sets an element's width. By default, it sets the width of the content area.\n Use a string value to specify units: 50%\n"},"index":5}]},{"key":"node43","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"spacing","propertyComment":"\n A range of shorthand responsive margin and padding utility classes to modify an element’s appearance.\n","externalProperties":"usr.common-props.spacing.SpacingTypes"},"index":4,"children":[{"key":"node44","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"marginSpacing","propertyComment":"\n A group of the margin properties\n Depending on the input and the theme configuration, the following transformation is applied:\n (1) number - the property is multiplied by the theme spacing value,\n (2) number - the property is used as the array index in theme spacing array,\n (3) string - the property is passed as raw CSS value\n"},"index":0,"children":[{"key":"node45","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"margin","propertyComment":"\n The property sets the margin area.\n"},"index":0},{"key":"node46","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginBottom","propertyComment":"\n The property sets the margin area on the bottom of an element.\n"},"index":1},{"key":"node47","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginLeft","propertyComment":"\n The property sets the margin area on the left side of an element.\n"},"index":2},{"key":"node48","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginRight","propertyComment":"\n The property sets the margin area on the right side of an element.\n"},"index":3},{"key":"node49","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginTop","propertyComment":"\n The property sets the margin area on the top of an element.\n"},"index":4},{"key":"node50","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginX","propertyComment":"\n The property sets the margin area on the left and right sides of an element.\n"},"index":5},{"key":"node51","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginY","propertyComment":"\n The property sets the margin area on the top and bottom sides of an element.\n"},"index":6}]},{"key":"node52","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"paddingSpacing","propertyComment":"\n A group of the padding properties.\n Depending on the input and the theme configuration, the following transformation is applied:\n (1) number - the property is multiplied by the theme spacing value,\n (2) number - the property is used as the array index in theme spacing array,\n (3) string - the property is passed as raw CSS value\n"},"index":1,"children":[{"key":"node53","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"padding","propertyComment":"\n The property sets the padding area on all four sides of an element.\n"},"index":0},{"key":"node54","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingBottom","propertyComment":"\n The property sets the padding area on the bottom of an element.\n"},"index":1},{"key":"node55","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingLeft","propertyComment":"\n The property sets the padding area on the left side of an element.\n"},"index":2},{"key":"node56","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingRight","propertyComment":"\n The property sets the padding area on the right side of an element.\n"},"index":3},{"key":"node57","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingTop","propertyComment":"\n The property sets the padding area on the top of an element.\n"},"index":4},{"key":"node58","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingX","propertyComment":"\n The property sets the padding area on the left and right sides of an element.\n"},"index":5},{"key":"node59","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingY","propertyComment":"\n The property sets the padding area on the top and bottom sides of an element.\n"},"index":6}]}]}]}]}]}]}}