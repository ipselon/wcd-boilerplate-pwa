{"templateName":"box-responsive-probe","componentsTree":{"key":"node3","type":"PAGE_COMPONENT_TYPE","props":{"componentName":"usr.in-page-components.layouts.BoxResponsive","componentInstance":"boxResponsive","errors":{}},"index":0,"children":[{"key":"node4","type":"COMPONENT_PROPERTY_ARRAY_OF_TYPE","props":{"propertyName":"content","propertyComment":"A list of the components that will be placed inside the Box component. Increase the array to have more items.","defaultChildren":[{"type":"COMPONENT_PROPERTY_ELEMENT_TYPE","props":{"componentName":"__PlaceHolder"}}]},"index":0,"children":[{"key":"node71","type":"PAGE_COMPONENT_TYPE","props":{"componentName":"usr.in-page-components.layouts.BoxResponsive","componentInstance":"boxResponsive"},"index":0,"children":[{"key":"node72","type":"COMPONENT_PROPERTY_ARRAY_OF_TYPE","props":{"propertyName":"content","propertyComment":"A list of the components that will be placed inside the Box component. Increase the array to have more items.","defaultChildren":[{"type":"COMPONENT_PROPERTY_ELEMENT_TYPE","props":{"componentName":"__PlaceHolder"}}]},"index":0,"children":[{"key":"node1297","type":"PAGE_COMPONENT_TYPE","props":{"componentName":"usr.in-page-components.typography.Typography","componentInstance":"typography"},"index":0,"children":[{"key":"node1298","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"align","propertyComment":"Set the text-align on the component.","propertyValue":"left","propertyValueVariants":[{"value":"inherit"},{"value":"left"},{"value":"center"},{"value":"right"},{"value":"justify"}]},"index":0},{"key":"node1299","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"color","propertyComment":"\n The color of the component. It supports those theme colors that make sense for this component.\n","propertyValue":"initial","propertyValueVariants":[{"value":"initial"},{"value":"inherit"},{"value":"primary"},{"value":"secondary"},{"value":"textPrimary"},{"value":"textSecondary"},{"value":"error"}]},"index":1},{"key":"node1300","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"display","propertyComment":"Controls the display type","propertyValue":"initial","propertyValueVariants":[{"value":"initial"},{"value":"block"},{"value":"inline"}]},"index":2},{"key":"node1301","type":"COMPONENT_PROPERTY_BOOL_TYPE","props":{"propertyName":"doNotUseInFlows","propertyComment":"and you will not see the instance name in the pages instances list","propertyValue":true},"index":3},{"key":"node1302","type":"COMPONENT_PROPERTY_BOOL_TYPE","props":{"propertyName":"gutterBottom","propertyComment":"If true, the text will have a bottom margin.","propertyValue":false},"index":4},{"key":"node1303","type":"COMPONENT_PROPERTY_BOOL_TYPE","props":{"propertyName":"noWrap","propertyComment":"\n If true, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n Note that text overflow can only happen with block or inline-block level elements\n (the element needs to have a width in order to overflow).\n","propertyValue":false},"index":5},{"key":"node1304","type":"COMPONENT_PROPERTY_BOOL_TYPE","props":{"propertyName":"paragraph","propertyComment":"If true, the text will have a bottom margin.","propertyValue":false},"index":6},{"key":"node1305","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"text","propertyComment":"The content of the component.","propertyValue":"Text here"},"index":7},{"key":"node1306","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"variant","propertyComment":"Applies the theme typography styles.","propertyValue":"h4","propertyValueVariants":[{"value":"h1"},{"value":"h2"},{"value":"h3"},{"value":"h4"},{"value":"h5"},{"value":"h6"},{"value":"subtitle1"},{"value":"subtitle2"},{"value":"body1"},{"value":"body2"},{"value":"caption"},{"value":"button"},{"value":"overline"},{"value":"srOnly"},{"value":"inherit"}]},"index":8}]}]},{"key":"node1307","type":"COMPONENT_PROPERTY_BOOL_TYPE","props":{"propertyName":"doNotUseInFlows","propertyComment":"\n If true then the component's instance will not be allowed to use in flows,\n and you will not see the instance name in the pages instances list\n","propertyValue":true},"index":1},{"key":"node1308","type":"COMPONENT_PROPERTY_ARRAY_OF_TYPE","props":{"propertyName":"stylesByScreenSize","propertyComment":"\n A list of the styles groups applied to different screen sizes accordingly.\n Reload the entire page to see the changes.\n The changes are not applied immediately due to the JSS nature of the Box component.\n","defaultChildren":[{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{},"children":[{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"breakpoint","propertyComment":"\n A screen size breakpoint id.\n Find the real size value in the application settings in LivePreview.\n","propertyValueVariants":[{"value":"xs"},{"value":"sm"},{"value":"md"},{"value":"lg"},{"value":"xl"}],"propertyValue":"xs"}},{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"styling","propertyComment":"\n A groups of styles that are applied for the selected breakpoint.\n Reload the entire page to see the changes.\n The changes are not applied immediately due to the JSS nature of the Box component.\n"},"children":[{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"borders","propertyComment":"Sets style to element's border","externalProperties":"usr.common-props.borders.BordersTypes"},"children":[{"type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"border","propertyComment":"\n The border-width CSS property sets the width of an element's border.\n When the value is specified, it applies the same width to all four sides.\n","propertyValue":1}},{"type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"borderBottom","propertyComment":"The border-bottom-width CSS property sets the width of the bottom border of an element."}},{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"borderColor","propertyComment":"The border-color CSS property sets the color of an element's border.","externalProperties":"usr.common-props.color.ColorTypes"},"children":[{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorHue","propertyComment":"A value from the collection of colors, i.e. hues","propertyValueVariants":[{"value":"primary.main"},{"value":"secondary.main"},{"value":"error.main"},{"value":"text.primary"},{"value":"text.secondary"},{"value":"text.disabled"},{"value":"text.hint"},{"value":"red"},{"value":"pink"},{"value":"purple"},{"value":"deepPurple"},{"value":"indigo"},{"value":"blue"},{"value":"lightBlue"},{"value":"cyan"},{"value":"teal"},{"value":"green"},{"value":"lightGreen"},{"value":"lime"},{"value":"yellow"},{"value":"amber"},{"value":"orange"},{"value":"deepOrange"},{"value":"brown"},{"value":"grey"},{"value":"blueGrey"}]}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorShade","propertyComment":"A value from the collection of colors shades","propertyValueVariants":[{"value":"50"},{"value":"100"},{"value":"200"},{"value":"300"},{"value":"400"},{"value":"500"},{"value":"600"},{"value":"700"},{"value":"800"},{"value":"900"},{"value":"A100"},{"value":"A200"},{"value":"A400"},{"value":"A700"}]}}]},{"type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"borderLeft","propertyComment":"The border-left-width CSS property sets the width of the left border of an element."}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"borderRadius","propertyComment":"\n The border-radius CSS property rounds the corners of an element's outer border edge.\n You can set a single radius to make circular corners, or two radii to make elliptical corners.\n Use a string value of the border radius to set units: 10% 30% 50% 70%\n"}},{"type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"borderRight","propertyComment":"The border-right-width CSS property sets the width of the right border of an element."}},{"type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"borderTop","propertyComment":"The border-top-width CSS property sets the width of the top border of an element"}}]},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"boxShadow","propertyComment":"\n Shadow depth. It accepts values between 0 and 24 inclusive.\n","propertyValueVariants":[{"value":"0"},{"value":"1"},{"value":"2"},{"value":"3"},{"value":"4"},{"value":"5"},{"value":"6"},{"value":"7"},{"value":"8"},{"value":"9"},{"value":"10"},{"value":"11"},{"value":"12"},{"value":"13"},{"value":"14"},{"value":"15"},{"value":"16"},{"value":"17"},{"value":"18"},{"value":"19"},{"value":"20"},{"value":"21"},{"value":"22"},{"value":"23"},{"value":"24"}]}},{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"display","propertyComment":"Toggle the display value of components","externalProperties":"usr.common-props.display.DisplayTypes"},"children":[{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"display","propertyComment":"\n The display CSS property sets whether an element is treated as\n a block or inline element and the layout used for its children,\n such as flow layout, grid or flex.\n","propertyValueVariants":[{"value":"block"},{"value":"flex"},{"value":"flow"},{"value":"inline"}]}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"overflow","propertyComment":"\n The overflow shorthand CSS property sets what to do when\n an element's content is too big to fit in its block formatting context.\n","propertyValueVariants":[{"value":"auto"},{"value":"hidden"},{"value":"scroll"},{"value":"visible"}]}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"textOverflow","propertyComment":"\n The text-overflow CSS property sets how hidden overflow content is signaled to users.\n","propertyValueVariants":[{"value":"clip"},{"value":"ellipsis"}]}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"visibility","propertyComment":"\n The visibility CSS property shows or hides an element without changing the layout of a document.\n","propertyValueVariants":[{"value":"hidden"},{"value":"visible"},{"value":"collapse"}]}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"whiteSpace","propertyComment":"\n The white-space CSS property sets how white space inside an element is handled.\n","propertyValueVariants":[{"value":"normal"},{"value":"nowrap"},{"value":"pre"},{"value":"pre-wrap"},{"value":"pre-line"},{"value":"break-spaces"}]}}]},{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"flexbox","propertyComment":"\n Manages the layout, alignment, and sizing of grid columns, navigation, components,\n and more with a full suite of responsive Flexbox utilities.\n","externalProperties":"usr.common-props.flexbox.FlexboxTypes"},"children":[{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"alignContent","propertyComment":"\n The CSS align-content property sets the distribution of space between\n and around content items along a flexbox's cross-axis.\n","propertyValueVariants":[{"value":"center"},{"value":"start"},{"value":"end"},{"value":"flex-start"},{"value":"flex-end"},{"value":"baseline"},{"value":"space-between"},{"value":"space-around"},{"value":"space-evenly"},{"value":"normal"},{"value":"stretch"}]}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"alignItems","propertyComment":"\n The CSS align-items property sets the align-self value on all direct children as a group.\n","propertyValueVariants":[{"value":"center"},{"value":"start"},{"value":"end"},{"value":"flex-start"},{"value":"flex-end"},{"value":"baseline"},{"value":"normal"},{"value":"stretch"}]}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"alignSelf","propertyComment":"\n The align-self CSS property overrides a grid or flex item's align-items value.\n In Flexbox, it aligns the item on the cross axis.\n","propertyValueVariants":[{"value":"auto"},{"value":"center"},{"value":"start"},{"value":"end"},{"value":"flex-start"},{"value":"flex-end"},{"value":"baseline"},{"value":"normal"},{"value":"stretch"}]}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"flex","propertyComment":"\n The flex CSS property sets how a flex item will grow or shrink to fit the space available in its flex container.\n It is a shorthand for flex-grow, flex-shrink, and flex-basis.\n"}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"flexDirection","propertyComment":"\n The flex-direction CSS property sets how flex items are placed\n in the flex container defining the main axis and the direction (normal or reversed).\n","propertyValueVariants":[{"value":"row"},{"value":"row-reverse"},{"value":"column"},{"value":"column-reverse"}]}},{"type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"flexGrow","propertyComment":"\n The flex-grow CSS property sets the flex grow factor of a flex item main size.\n It specifies how much of the remaining space in the flex container should be assigned to the item\n (the flex grow factor).\n"}},{"type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"flexShrink","propertyComment":"\n The flex-shrink CSS property sets the flex shrink factor of a flex item.\n If the size of all flex items is larger than the flex container,\n items shrink to fit according to flex-shrink.\n"}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"flexWrap","propertyComment":"\n The flex-wrap CSS property sets whether flex items are forced onto one line or can wrap onto multiple lines.\n","propertyValueVariants":[{"value":"nowrap"},{"value":"wrap"},{"value":"wrap-reverse"}]}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"justifyContent","propertyComment":"\n The CSS justify-content property defines how the browser distributes space between and around content\n items along the main-axis of a flex container, and the inline axis of a container.\n","propertyValueVariants":[{"value":"center"},{"value":"start"},{"value":"end"},{"value":"flex-start"},{"value":"flex-end"},{"value":"left"},{"value":"right"},{"value":"normal"},{"value":"space-between"},{"value":"space-around"},{"value":"space-evenly"},{"value":"stretch"}]}},{"type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"order","propertyComment":"\n The order CSS property sets the order to lay out an item in a flex or grid container.\n Items in a container are sorted by ascending order value and then by their source code order.\n"}}]},{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"palette","propertyComment":"Sets the color of the component"},"children":[{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"backgroundColor","externalProperties":"usr.common-props.color.ColorTypes"},"children":[{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorHue","propertyComment":"A value from the collection of colors, i.e. hues","propertyValueVariants":[{"value":"primary.main"},{"value":"secondary.main"},{"value":"error.main"},{"value":"text.primary"},{"value":"text.secondary"},{"value":"text.disabled"},{"value":"text.hint"},{"value":"red"},{"value":"pink"},{"value":"purple"},{"value":"deepPurple"},{"value":"indigo"},{"value":"blue"},{"value":"lightBlue"},{"value":"cyan"},{"value":"teal"},{"value":"green"},{"value":"lightGreen"},{"value":"lime"},{"value":"yellow"},{"value":"amber"},{"value":"orange"},{"value":"deepOrange"},{"value":"brown"},{"value":"grey"},{"value":"blueGrey"}]}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorShade","propertyComment":"A value from the collection of colors shades","propertyValueVariants":[{"value":"50"},{"value":"100"},{"value":"200"},{"value":"300"},{"value":"400"},{"value":"500"},{"value":"600"},{"value":"700"},{"value":"800"},{"value":"900"},{"value":"A100"},{"value":"A200"},{"value":"A400"},{"value":"A700"}]}}]},{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"color","externalProperties":"usr.common-props.color.ColorTypes"},"children":[{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorHue","propertyComment":"A value from the collection of colors, i.e. hues","propertyValueVariants":[{"value":"primary.main"},{"value":"secondary.main"},{"value":"error.main"},{"value":"text.primary"},{"value":"text.secondary"},{"value":"text.disabled"},{"value":"text.hint"},{"value":"red"},{"value":"pink"},{"value":"purple"},{"value":"deepPurple"},{"value":"indigo"},{"value":"blue"},{"value":"lightBlue"},{"value":"cyan"},{"value":"teal"},{"value":"green"},{"value":"lightGreen"},{"value":"lime"},{"value":"yellow"},{"value":"amber"},{"value":"orange"},{"value":"deepOrange"},{"value":"brown"},{"value":"grey"},{"value":"blueGrey"}]}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorShade","propertyComment":"A value from the collection of colors shades","propertyValueVariants":[{"value":"50"},{"value":"100"},{"value":"200"},{"value":"300"},{"value":"400"},{"value":"500"},{"value":"600"},{"value":"700"},{"value":"800"},{"value":"900"},{"value":"A100"},{"value":"A200"},{"value":"A400"},{"value":"A700"}]}}]}]},{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"positions","propertyComment":"\n Shorthand utilities for quickly configuring the position of an element.\n","externalProperties":"usr.common-props.positions.PositionsTypes"},"children":[{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"bottom","propertyComment":"\n The bottom CSS property participates in setting the vertical position of a positioned element.\n It has no effect on non-positioned elements.\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"left","propertyComment":"\n The left CSS property participates in specifying the horizontal position of a positioned element.\n It has no effect on non-positioned elements.\n"}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"position","propertyComment":"\n The position CSS property sets how an element is positioned in a document.\n The top, right, bottom, and left properties determine the final location of positioned elements.\n","propertyValueVariants":[{"value":"static"},{"value":"relative"},{"value":"absolute"},{"value":"sticky"},{"value":"fixed"}]}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"right","propertyComment":"\n The right CSS property participates in specifying the horizontal position of a positioned element.\n It has no effect on non-positioned elements.\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"top","propertyComment":"\n The top CSS property participates in specifying the vertical position of a positioned element.\n It has no effect on non-positioned elements.\n"}},{"type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"zIndex","propertyComment":"\n The z-index CSS property sets the z-order of a positioned element and its descendants or flex items.\n Overlapping elements with a larger z-index cover those with a smaller one.\n"}}]},{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"sizing","propertyComment":"\n Easily make an element as wide or as tall (relative to its parent) with the width and height utilities.\n","externalProperties":"usr.common-props.sizing.SizingTypes"},"children":[{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"height","propertyComment":"\n The height CSS property specifies the height of an element.\n By default, the property defines the height of the content area.\n Use a string value to specify units: 50%\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"maxHeight","propertyComment":"\n The max-height CSS property sets the maximum height of an element.\n It prevents the used value of the height property from becoming larger than the value specified for max-height.\n Use a string value to specify units: 50%\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"maxWidth","propertyComment":"\n The max-width CSS property sets the maximum width of an element.\n It prevents the used value of the width property from becoming larger than the value specified by max-width.\n Use a string value to specify units: 50%\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"minHeight","propertyComment":"\n The min-height CSS property sets the minimum height of an element.\n It prevents the used value of the height property from becoming smaller than the value specified for min-height.\n Use a string value to specify units: 50%\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"minWidth","propertyComment":"\n The min-width CSS property sets the minimum width of an element.\n It prevents the used value of the width property from becoming smaller than the value specified for min-width.\n Use a string value to specify units: 50%\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"width","propertyComment":"\n The width CSS property sets an element's width. By default, it sets the width of the content area.\n Use a string value to specify units: 50%\n"}}]},{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"spacing","propertyComment":"\n A range of shorthand responsive margin and padding utility classes to modify an element’s appearance.\n","externalProperties":"usr.common-props.spacing.SpacingTypes"},"children":[{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"marginSpacing","propertyComment":"\n A group of the margin properties\n Depending on the input and the theme configuration, the following transformation is applied:\n (1) number - the property is multiplied by the theme spacing value,\n (2) number - the property is used as the array index in theme spacing array,\n (3) string - the property is passed as raw CSS value\n"},"children":[{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"margin","propertyComment":"\n The property sets the margin area.\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginBottom","propertyComment":"\n The property sets the margin area on the bottom of an element.\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginLeft","propertyComment":"\n The property sets the margin area on the left side of an element.\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginRight","propertyComment":"\n The property sets the margin area on the right side of an element.\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginTop","propertyComment":"\n The property sets the margin area on the top of an element.\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginX","propertyComment":"\n The property sets the margin area on the left and right sides of an element.\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginY","propertyComment":"\n The property sets the margin area on the top and bottom sides of an element.\n"}}]},{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"paddingSpacing","propertyComment":"\n A group of the padding properties.\n Depending on the input and the theme configuration, the following transformation is applied:\n (1) number - the property is multiplied by the theme spacing value,\n (2) number - the property is used as the array index in theme spacing array,\n (3) string - the property is passed as raw CSS value\n"},"children":[{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"padding","propertyComment":"\n The property sets the padding area on all four sides of an element.\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingBottom","propertyComment":"\n The property sets the padding area on the bottom of an element.\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingLeft","propertyComment":"\n The property sets the padding area on the left side of an element.\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingRight","propertyComment":"\n The property sets the padding area on the right side of an element.\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingTop","propertyComment":"\n The property sets the padding area on the top of an element.\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingX","propertyComment":"\n The property sets the padding area on the left and right sides of an element.\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingY","propertyComment":"\n The property sets the padding area on the top and bottom sides of an element.\n"}}]}]},{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"typography","propertyComment":"Text utilities to control alignment, wrapping, weight, and more.","externalProperties":"usr.common-props.typography.TypographyTypes"},"children":[{"type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"fontSize","propertyComment":"\n The font-size CSS property sets the size of the font.\n"}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"fontStyle","propertyComment":"\n The font-style CSS property sets whether a font should be styled with a normal, italic.\n","propertyValueVariants":[{"value":"normal"},{"value":"italic"}]}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"fontWeight","propertyComment":"\n Sets the weight (or boldness) of the font according to the application settings.\n","propertyValueVariants":[{"value":"fontWeightLight"},{"value":"fontWeightRegular"},{"value":"fontWeightMedium"},{"value":"fontWeightBold"}]}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"letterSpacing","propertyComment":"\n The letter-spacing CSS property sets the spacing behavior between text characters.\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"lineHeight","propertyComment":"\n The line-height CSS property sets the height of a line box.\n It's commonly used to set the distance between lines of text.\n On block-level elements, it specifies the minimum height of line boxes within the element.\n"}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"textAlign","propertyComment":"\n The text-align CSS property sets the horizontal alignment of a block element or table-cell box.\n","propertyValueVariants":[{"value":"start"},{"value":"end"},{"value":"left"},{"value":"right"},{"value":"center"},{"value":"justify"},{"value":"match-parent"}]}}]}]}]}]},"index":2,"children":[{"key":"node1309","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{},"index":0,"children":[{"key":"node1310","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"breakpoint","propertyComment":"\n A screen size breakpoint id.\n Find the real size value in the application settings in LivePreview.\n","propertyValueVariants":[{"value":"xs"},{"value":"sm"},{"value":"md"},{"value":"lg"},{"value":"xl"}],"propertyValue":"xs"},"index":0},{"key":"node1311","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"styling","propertyComment":"\n A groups of styles that are applied for the selected breakpoint.\n Reload the entire page to see the changes.\n The changes are not applied immediately due to the JSS nature of the Box component.\n"},"index":1,"children":[{"key":"node1312","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"borders","propertyComment":"Sets style to element's border","externalProperties":"usr.common-props.borders.BordersTypes"},"index":0,"children":[{"key":"node1313","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"border","propertyComment":"\n The border-width CSS property sets the width of an element's border.\n When the value is specified, it applies the same width to all four sides.\n","propertyValue":1},"index":0},{"key":"node1314","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"borderBottom","propertyComment":"The border-bottom-width CSS property sets the width of the bottom border of an element."},"index":1},{"key":"node1315","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"borderColor","propertyComment":"The border-color CSS property sets the color of an element's border.","externalProperties":"usr.common-props.color.ColorTypes"},"index":2,"children":[{"key":"node1316","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorHue","propertyComment":"A value from the collection of colors, i.e. hues","propertyValueVariants":[{"value":"primary.main"},{"value":"secondary.main"},{"value":"error.main"},{"value":"text.primary"},{"value":"text.secondary"},{"value":"text.disabled"},{"value":"text.hint"},{"value":"red"},{"value":"pink"},{"value":"purple"},{"value":"deepPurple"},{"value":"indigo"},{"value":"blue"},{"value":"lightBlue"},{"value":"cyan"},{"value":"teal"},{"value":"green"},{"value":"lightGreen"},{"value":"lime"},{"value":"yellow"},{"value":"amber"},{"value":"orange"},{"value":"deepOrange"},{"value":"brown"},{"value":"grey"},{"value":"blueGrey"}]},"index":0},{"key":"node1317","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorShade","propertyComment":"A value from the collection of colors shades","propertyValueVariants":[{"value":"50"},{"value":"100"},{"value":"200"},{"value":"300"},{"value":"400"},{"value":"500"},{"value":"600"},{"value":"700"},{"value":"800"},{"value":"900"},{"value":"A100"},{"value":"A200"},{"value":"A400"},{"value":"A700"}]},"index":1}]},{"key":"node1318","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"borderLeft","propertyComment":"The border-left-width CSS property sets the width of the left border of an element."},"index":3},{"key":"node1319","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"borderRadius","propertyComment":"\n The border-radius CSS property rounds the corners of an element's outer border edge.\n You can set a single radius to make circular corners, or two radii to make elliptical corners.\n Use a string value of the border radius to set units: 10% 30% 50% 70%\n"},"index":4},{"key":"node1320","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"borderRight","propertyComment":"The border-right-width CSS property sets the width of the right border of an element."},"index":5},{"key":"node1321","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"borderTop","propertyComment":"The border-top-width CSS property sets the width of the top border of an element"},"index":6}]},{"key":"node1322","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"boxShadow","propertyComment":"\n Shadow depth. It accepts values between 0 and 24 inclusive.\n","propertyValueVariants":[{"value":"0"},{"value":"1"},{"value":"2"},{"value":"3"},{"value":"4"},{"value":"5"},{"value":"6"},{"value":"7"},{"value":"8"},{"value":"9"},{"value":"10"},{"value":"11"},{"value":"12"},{"value":"13"},{"value":"14"},{"value":"15"},{"value":"16"},{"value":"17"},{"value":"18"},{"value":"19"},{"value":"20"},{"value":"21"},{"value":"22"},{"value":"23"},{"value":"24"}]},"index":1},{"key":"node1323","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"display","propertyComment":"Toggle the display value of components","externalProperties":"usr.common-props.display.DisplayTypes"},"index":2,"children":[{"key":"node1324","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"display","propertyComment":"\n The display CSS property sets whether an element is treated as\n a block or inline element and the layout used for its children,\n such as flow layout, grid or flex.\n","propertyValueVariants":[{"value":"block"},{"value":"flex"},{"value":"flow"},{"value":"inline"}]},"index":0},{"key":"node1325","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"overflow","propertyComment":"\n The overflow shorthand CSS property sets what to do when\n an element's content is too big to fit in its block formatting context.\n","propertyValueVariants":[{"value":"auto"},{"value":"hidden"},{"value":"scroll"},{"value":"visible"}]},"index":1},{"key":"node1326","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"textOverflow","propertyComment":"\n The text-overflow CSS property sets how hidden overflow content is signaled to users.\n","propertyValueVariants":[{"value":"clip"},{"value":"ellipsis"}]},"index":2},{"key":"node1327","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"visibility","propertyComment":"\n The visibility CSS property shows or hides an element without changing the layout of a document.\n","propertyValueVariants":[{"value":"hidden"},{"value":"visible"},{"value":"collapse"}]},"index":3},{"key":"node1328","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"whiteSpace","propertyComment":"\n The white-space CSS property sets how white space inside an element is handled.\n","propertyValueVariants":[{"value":"normal"},{"value":"nowrap"},{"value":"pre"},{"value":"pre-wrap"},{"value":"pre-line"},{"value":"break-spaces"}]},"index":4}]},{"key":"node1329","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"flexbox","propertyComment":"\n Manages the layout, alignment, and sizing of grid columns, navigation, components,\n and more with a full suite of responsive Flexbox utilities.\n","externalProperties":"usr.common-props.flexbox.FlexboxTypes"},"index":3,"children":[{"key":"node1330","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"alignContent","propertyComment":"\n The CSS align-content property sets the distribution of space between\n and around content items along a flexbox's cross-axis.\n","propertyValueVariants":[{"value":"center"},{"value":"start"},{"value":"end"},{"value":"flex-start"},{"value":"flex-end"},{"value":"baseline"},{"value":"space-between"},{"value":"space-around"},{"value":"space-evenly"},{"value":"normal"},{"value":"stretch"}]},"index":0},{"key":"node1331","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"alignItems","propertyComment":"\n The CSS align-items property sets the align-self value on all direct children as a group.\n","propertyValueVariants":[{"value":"center"},{"value":"start"},{"value":"end"},{"value":"flex-start"},{"value":"flex-end"},{"value":"baseline"},{"value":"normal"},{"value":"stretch"}]},"index":1},{"key":"node1332","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"alignSelf","propertyComment":"\n The align-self CSS property overrides a grid or flex item's align-items value.\n In Flexbox, it aligns the item on the cross axis.\n","propertyValueVariants":[{"value":"auto"},{"value":"center"},{"value":"start"},{"value":"end"},{"value":"flex-start"},{"value":"flex-end"},{"value":"baseline"},{"value":"normal"},{"value":"stretch"}]},"index":2},{"key":"node1333","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"flex","propertyComment":"\n The flex CSS property sets how a flex item will grow or shrink to fit the space available in its flex container.\n It is a shorthand for flex-grow, flex-shrink, and flex-basis.\n"},"index":3},{"key":"node1334","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"flexDirection","propertyComment":"\n The flex-direction CSS property sets how flex items are placed\n in the flex container defining the main axis and the direction (normal or reversed).\n","propertyValueVariants":[{"value":"row"},{"value":"row-reverse"},{"value":"column"},{"value":"column-reverse"}]},"index":4},{"key":"node1335","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"flexGrow","propertyComment":"\n The flex-grow CSS property sets the flex grow factor of a flex item main size.\n It specifies how much of the remaining space in the flex container should be assigned to the item\n (the flex grow factor).\n"},"index":5},{"key":"node1336","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"flexShrink","propertyComment":"\n The flex-shrink CSS property sets the flex shrink factor of a flex item.\n If the size of all flex items is larger than the flex container,\n items shrink to fit according to flex-shrink.\n"},"index":6},{"key":"node1337","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"flexWrap","propertyComment":"\n The flex-wrap CSS property sets whether flex items are forced onto one line or can wrap onto multiple lines.\n","propertyValueVariants":[{"value":"nowrap"},{"value":"wrap"},{"value":"wrap-reverse"}]},"index":7},{"key":"node1338","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"justifyContent","propertyComment":"\n The CSS justify-content property defines how the browser distributes space between and around content\n items along the main-axis of a flex container, and the inline axis of a container.\n","propertyValueVariants":[{"value":"center"},{"value":"start"},{"value":"end"},{"value":"flex-start"},{"value":"flex-end"},{"value":"left"},{"value":"right"},{"value":"normal"},{"value":"space-between"},{"value":"space-around"},{"value":"space-evenly"},{"value":"stretch"}]},"index":8},{"key":"node1339","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"order","propertyComment":"\n The order CSS property sets the order to lay out an item in a flex or grid container.\n Items in a container are sorted by ascending order value and then by their source code order.\n"},"index":9}]},{"key":"node1340","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"palette","propertyComment":"Sets the color of the component"},"index":4,"children":[{"key":"node1341","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"backgroundColor","externalProperties":"usr.common-props.color.ColorTypes"},"index":0,"children":[{"key":"node1342","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorHue","propertyComment":"A value from the collection of colors, i.e. hues","propertyValueVariants":[{"value":"primary.main"},{"value":"secondary.main"},{"value":"error.main"},{"value":"text.primary"},{"value":"text.secondary"},{"value":"text.disabled"},{"value":"text.hint"},{"value":"red"},{"value":"pink"},{"value":"purple"},{"value":"deepPurple"},{"value":"indigo"},{"value":"blue"},{"value":"lightBlue"},{"value":"cyan"},{"value":"teal"},{"value":"green"},{"value":"lightGreen"},{"value":"lime"},{"value":"yellow"},{"value":"amber"},{"value":"orange"},{"value":"deepOrange"},{"value":"brown"},{"value":"grey"},{"value":"blueGrey"}]},"index":0},{"key":"node1343","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorShade","propertyComment":"A value from the collection of colors shades","propertyValueVariants":[{"value":"50"},{"value":"100"},{"value":"200"},{"value":"300"},{"value":"400"},{"value":"500"},{"value":"600"},{"value":"700"},{"value":"800"},{"value":"900"},{"value":"A100"},{"value":"A200"},{"value":"A400"},{"value":"A700"}]},"index":1}]},{"key":"node1344","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"color","externalProperties":"usr.common-props.color.ColorTypes"},"index":1,"children":[{"key":"node1345","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorHue","propertyComment":"A value from the collection of colors, i.e. hues","propertyValueVariants":[{"value":"primary.main"},{"value":"secondary.main"},{"value":"error.main"},{"value":"text.primary"},{"value":"text.secondary"},{"value":"text.disabled"},{"value":"text.hint"},{"value":"red"},{"value":"pink"},{"value":"purple"},{"value":"deepPurple"},{"value":"indigo"},{"value":"blue"},{"value":"lightBlue"},{"value":"cyan"},{"value":"teal"},{"value":"green"},{"value":"lightGreen"},{"value":"lime"},{"value":"yellow"},{"value":"amber"},{"value":"orange"},{"value":"deepOrange"},{"value":"brown"},{"value":"grey"},{"value":"blueGrey"}]},"index":0},{"key":"node1346","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorShade","propertyComment":"A value from the collection of colors shades","propertyValueVariants":[{"value":"50"},{"value":"100"},{"value":"200"},{"value":"300"},{"value":"400"},{"value":"500"},{"value":"600"},{"value":"700"},{"value":"800"},{"value":"900"},{"value":"A100"},{"value":"A200"},{"value":"A400"},{"value":"A700"}]},"index":1}]}]},{"key":"node1347","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"positions","propertyComment":"\n Shorthand utilities for quickly configuring the position of an element.\n","externalProperties":"usr.common-props.positions.PositionsTypes"},"index":5,"children":[{"key":"node1348","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"bottom","propertyComment":"\n The bottom CSS property participates in setting the vertical position of a positioned element.\n It has no effect on non-positioned elements.\n"},"index":0},{"key":"node1349","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"left","propertyComment":"\n The left CSS property participates in specifying the horizontal position of a positioned element.\n It has no effect on non-positioned elements.\n"},"index":1},{"key":"node1350","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"position","propertyComment":"\n The position CSS property sets how an element is positioned in a document.\n The top, right, bottom, and left properties determine the final location of positioned elements.\n","propertyValueVariants":[{"value":"static"},{"value":"relative"},{"value":"absolute"},{"value":"sticky"},{"value":"fixed"}]},"index":2},{"key":"node1351","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"right","propertyComment":"\n The right CSS property participates in specifying the horizontal position of a positioned element.\n It has no effect on non-positioned elements.\n"},"index":3},{"key":"node1352","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"top","propertyComment":"\n The top CSS property participates in specifying the vertical position of a positioned element.\n It has no effect on non-positioned elements.\n"},"index":4},{"key":"node1353","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"zIndex","propertyComment":"\n The z-index CSS property sets the z-order of a positioned element and its descendants or flex items.\n Overlapping elements with a larger z-index cover those with a smaller one.\n"},"index":5}]},{"key":"node1354","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"sizing","propertyComment":"\n Easily make an element as wide or as tall (relative to its parent) with the width and height utilities.\n","externalProperties":"usr.common-props.sizing.SizingTypes"},"index":6,"children":[{"key":"node1355","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"height","propertyComment":"\n The height CSS property specifies the height of an element.\n By default, the property defines the height of the content area.\n Use a string value to specify units: 50%\n"},"index":0},{"key":"node1356","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"maxHeight","propertyComment":"\n The max-height CSS property sets the maximum height of an element.\n It prevents the used value of the height property from becoming larger than the value specified for max-height.\n Use a string value to specify units: 50%\n"},"index":1},{"key":"node1357","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"maxWidth","propertyComment":"\n The max-width CSS property sets the maximum width of an element.\n It prevents the used value of the width property from becoming larger than the value specified by max-width.\n Use a string value to specify units: 50%\n"},"index":2},{"key":"node1358","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"minHeight","propertyComment":"\n The min-height CSS property sets the minimum height of an element.\n It prevents the used value of the height property from becoming smaller than the value specified for min-height.\n Use a string value to specify units: 50%\n"},"index":3},{"key":"node1359","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"minWidth","propertyComment":"\n The min-width CSS property sets the minimum width of an element.\n It prevents the used value of the width property from becoming smaller than the value specified for min-width.\n Use a string value to specify units: 50%\n"},"index":4},{"key":"node1360","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"width","propertyComment":"\n The width CSS property sets an element's width. By default, it sets the width of the content area.\n Use a string value to specify units: 50%\n"},"index":5}]},{"key":"node1361","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"spacing","propertyComment":"\n A range of shorthand responsive margin and padding utility classes to modify an element’s appearance.\n","externalProperties":"usr.common-props.spacing.SpacingTypes"},"index":7,"children":[{"key":"node1362","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"marginSpacing","propertyComment":"\n A group of the margin properties\n Depending on the input and the theme configuration, the following transformation is applied:\n (1) number - the property is multiplied by the theme spacing value,\n (2) number - the property is used as the array index in theme spacing array,\n (3) string - the property is passed as raw CSS value\n"},"index":0,"children":[{"key":"node1363","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"margin","propertyComment":"\n The property sets the margin area.\n"},"index":0},{"key":"node1364","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginBottom","propertyComment":"\n The property sets the margin area on the bottom of an element.\n"},"index":1},{"key":"node1365","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginLeft","propertyComment":"\n The property sets the margin area on the left side of an element.\n"},"index":2},{"key":"node1366","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginRight","propertyComment":"\n The property sets the margin area on the right side of an element.\n"},"index":3},{"key":"node1367","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginTop","propertyComment":"\n The property sets the margin area on the top of an element.\n"},"index":4},{"key":"node1368","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginX","propertyComment":"\n The property sets the margin area on the left and right sides of an element.\n"},"index":5},{"key":"node1369","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginY","propertyComment":"\n The property sets the margin area on the top and bottom sides of an element.\n"},"index":6}]},{"key":"node1370","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"paddingSpacing","propertyComment":"\n A group of the padding properties.\n Depending on the input and the theme configuration, the following transformation is applied:\n (1) number - the property is multiplied by the theme spacing value,\n (2) number - the property is used as the array index in theme spacing array,\n (3) string - the property is passed as raw CSS value\n"},"index":1,"children":[{"key":"node1371","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"padding","propertyComment":"\n The property sets the padding area on all four sides of an element.\n"},"index":0},{"key":"node1372","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingBottom","propertyComment":"\n The property sets the padding area on the bottom of an element.\n"},"index":1},{"key":"node1373","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingLeft","propertyComment":"\n The property sets the padding area on the left side of an element.\n"},"index":2},{"key":"node1374","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingRight","propertyComment":"\n The property sets the padding area on the right side of an element.\n"},"index":3},{"key":"node1375","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingTop","propertyComment":"\n The property sets the padding area on the top of an element.\n"},"index":4},{"key":"node1376","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingX","propertyComment":"\n The property sets the padding area on the left and right sides of an element.\n"},"index":5},{"key":"node1377","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingY","propertyComment":"\n The property sets the padding area on the top and bottom sides of an element.\n"},"index":6}]}]},{"key":"node1378","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"typography","propertyComment":"Text utilities to control alignment, wrapping, weight, and more.","externalProperties":"usr.common-props.typography.TypographyTypes"},"index":8,"children":[{"key":"node1379","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"fontSize","propertyComment":"\n The font-size CSS property sets the size of the font.\n"},"index":0},{"key":"node1380","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"fontStyle","propertyComment":"\n The font-style CSS property sets whether a font should be styled with a normal, italic.\n","propertyValue":"","propertyValueVariants":[{"value":"normal"},{"value":"italic"}]},"index":1},{"key":"node1381","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"fontWeight","propertyComment":"\n Sets the weight (or boldness) of the font according to the application settings.\n","propertyValue":"fontWeightMedium","propertyValueVariants":[{"value":"fontWeightLight"},{"value":"fontWeightRegular"},{"value":"fontWeightMedium"},{"value":"fontWeightBold"}]},"index":2},{"key":"node1382","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"letterSpacing","propertyComment":"\n The letter-spacing CSS property sets the spacing behavior between text characters.\n"},"index":3},{"key":"node1383","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"lineHeight","propertyComment":"\n The line-height CSS property sets the height of a line box.\n It's commonly used to set the distance between lines of text.\n On block-level elements, it specifies the minimum height of line boxes within the element.\n"},"index":4},{"key":"node1384","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"textAlign","propertyComment":"\n The text-align CSS property sets the horizontal alignment of a block element or table-cell box.\n","propertyValue":"","propertyValueVariants":[{"value":"start"},{"value":"end"},{"value":"left"},{"value":"right"},{"value":"center"},{"value":"justify"},{"value":"match-parent"}]},"index":5}]}]}]}]}]},{"key":"node1385","type":"PAGE_COMPONENT_TYPE","props":{"componentName":"usr.in-page-components.layouts.BoxResponsive","componentInstance":"boxResponsive"},"index":1,"children":[{"key":"node1386","type":"COMPONENT_PROPERTY_ARRAY_OF_TYPE","props":{"propertyName":"content","propertyComment":"A list of the components that will be placed inside the Box component. Increase the array to have more items.","defaultChildren":[{"type":"COMPONENT_PROPERTY_ELEMENT_TYPE","props":{"componentName":"__PlaceHolder"}}]},"index":0,"children":[{"key":"node1387","type":"COMPONENT_PROPERTY_ELEMENT_TYPE","props":{"componentName":"__PlaceHolder"},"index":0},{"key":"node1681","type":"COMPONENT_PROPERTY_ELEMENT_TYPE","props":{"componentName":"__PlaceHolder"},"index":1}]},{"key":"node1444","type":"COMPONENT_PROPERTY_BOOL_TYPE","props":{"propertyName":"doNotUseInFlows","propertyComment":"\n If true then the component's instance will not be allowed to use in flows,\n and you will not see the instance name in the pages instances list\n","propertyValue":true},"index":1},{"key":"node1445","type":"COMPONENT_PROPERTY_ARRAY_OF_TYPE","props":{"propertyName":"stylesByScreenSize","propertyComment":"\n A list of the styles groups applied to different screen sizes accordingly.\n Reload the entire page to see the changes.\n The changes are not applied immediately due to the JSS nature of the Box component.\n","defaultChildren":[{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{},"children":[{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"breakpoint","propertyComment":"\n A screen size breakpoint id.\n Find the real size value in the application settings in LivePreview.\n","propertyValueVariants":[{"value":"xs"},{"value":"sm"},{"value":"md"},{"value":"lg"},{"value":"xl"}],"propertyValue":"xs"}},{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"styling","propertyComment":"\n A groups of styles that are applied for the selected breakpoint.\n Reload the entire page to see the changes.\n The changes are not applied immediately due to the JSS nature of the Box component.\n"},"children":[{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"borders","propertyComment":"Sets style to element's border","externalProperties":"usr.common-props.borders.BordersTypes"},"children":[{"type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"border","propertyComment":"\n The border-width CSS property sets the width of an element's border.\n When the value is specified, it applies the same width to all four sides.\n","propertyValue":1}},{"type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"borderBottom","propertyComment":"The border-bottom-width CSS property sets the width of the bottom border of an element."}},{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"borderColor","propertyComment":"The border-color CSS property sets the color of an element's border.","externalProperties":"usr.common-props.color.ColorTypes"},"children":[{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorHue","propertyComment":"A value from the collection of colors, i.e. hues","propertyValueVariants":[{"value":"primary.main"},{"value":"secondary.main"},{"value":"error.main"},{"value":"text.primary"},{"value":"text.secondary"},{"value":"text.disabled"},{"value":"text.hint"},{"value":"red"},{"value":"pink"},{"value":"purple"},{"value":"deepPurple"},{"value":"indigo"},{"value":"blue"},{"value":"lightBlue"},{"value":"cyan"},{"value":"teal"},{"value":"green"},{"value":"lightGreen"},{"value":"lime"},{"value":"yellow"},{"value":"amber"},{"value":"orange"},{"value":"deepOrange"},{"value":"brown"},{"value":"grey"},{"value":"blueGrey"}]}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorShade","propertyComment":"A value from the collection of colors shades","propertyValueVariants":[{"value":"50"},{"value":"100"},{"value":"200"},{"value":"300"},{"value":"400"},{"value":"500"},{"value":"600"},{"value":"700"},{"value":"800"},{"value":"900"},{"value":"A100"},{"value":"A200"},{"value":"A400"},{"value":"A700"}]}}]},{"type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"borderLeft","propertyComment":"The border-left-width CSS property sets the width of the left border of an element."}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"borderRadius","propertyComment":"\n The border-radius CSS property rounds the corners of an element's outer border edge.\n You can set a single radius to make circular corners, or two radii to make elliptical corners.\n Use a string value of the border radius to set units: 10% 30% 50% 70%\n"}},{"type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"borderRight","propertyComment":"The border-right-width CSS property sets the width of the right border of an element."}},{"type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"borderTop","propertyComment":"The border-top-width CSS property sets the width of the top border of an element"}}]},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"boxShadow","propertyComment":"\n Shadow depth. It accepts values between 0 and 24 inclusive.\n","propertyValueVariants":[{"value":"0"},{"value":"1"},{"value":"2"},{"value":"3"},{"value":"4"},{"value":"5"},{"value":"6"},{"value":"7"},{"value":"8"},{"value":"9"},{"value":"10"},{"value":"11"},{"value":"12"},{"value":"13"},{"value":"14"},{"value":"15"},{"value":"16"},{"value":"17"},{"value":"18"},{"value":"19"},{"value":"20"},{"value":"21"},{"value":"22"},{"value":"23"},{"value":"24"}]}},{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"display","propertyComment":"Toggle the display value of components","externalProperties":"usr.common-props.display.DisplayTypes"},"children":[{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"display","propertyComment":"\n The display CSS property sets whether an element is treated as\n a block or inline element and the layout used for its children,\n such as flow layout, grid or flex.\n","propertyValueVariants":[{"value":"block"},{"value":"flex"},{"value":"flow"},{"value":"inline"}]}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"overflow","propertyComment":"\n The overflow shorthand CSS property sets what to do when\n an element's content is too big to fit in its block formatting context.\n","propertyValueVariants":[{"value":"auto"},{"value":"hidden"},{"value":"scroll"},{"value":"visible"}]}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"textOverflow","propertyComment":"\n The text-overflow CSS property sets how hidden overflow content is signaled to users.\n","propertyValueVariants":[{"value":"clip"},{"value":"ellipsis"}]}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"visibility","propertyComment":"\n The visibility CSS property shows or hides an element without changing the layout of a document.\n","propertyValueVariants":[{"value":"hidden"},{"value":"visible"},{"value":"collapse"}]}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"whiteSpace","propertyComment":"\n The white-space CSS property sets how white space inside an element is handled.\n","propertyValueVariants":[{"value":"normal"},{"value":"nowrap"},{"value":"pre"},{"value":"pre-wrap"},{"value":"pre-line"},{"value":"break-spaces"}]}}]},{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"flexbox","propertyComment":"\n Manages the layout, alignment, and sizing of grid columns, navigation, components,\n and more with a full suite of responsive Flexbox utilities.\n","externalProperties":"usr.common-props.flexbox.FlexboxTypes"},"children":[{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"alignContent","propertyComment":"\n The CSS align-content property sets the distribution of space between\n and around content items along a flexbox's cross-axis.\n","propertyValueVariants":[{"value":"center"},{"value":"start"},{"value":"end"},{"value":"flex-start"},{"value":"flex-end"},{"value":"baseline"},{"value":"space-between"},{"value":"space-around"},{"value":"space-evenly"},{"value":"normal"},{"value":"stretch"}]}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"alignItems","propertyComment":"\n The CSS align-items property sets the align-self value on all direct children as a group.\n","propertyValueVariants":[{"value":"center"},{"value":"start"},{"value":"end"},{"value":"flex-start"},{"value":"flex-end"},{"value":"baseline"},{"value":"normal"},{"value":"stretch"}]}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"alignSelf","propertyComment":"\n The align-self CSS property overrides a grid or flex item's align-items value.\n In Flexbox, it aligns the item on the cross axis.\n","propertyValueVariants":[{"value":"auto"},{"value":"center"},{"value":"start"},{"value":"end"},{"value":"flex-start"},{"value":"flex-end"},{"value":"baseline"},{"value":"normal"},{"value":"stretch"}]}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"flex","propertyComment":"\n The flex CSS property sets how a flex item will grow or shrink to fit the space available in its flex container.\n It is a shorthand for flex-grow, flex-shrink, and flex-basis.\n"}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"flexDirection","propertyComment":"\n The flex-direction CSS property sets how flex items are placed\n in the flex container defining the main axis and the direction (normal or reversed).\n","propertyValueVariants":[{"value":"row"},{"value":"row-reverse"},{"value":"column"},{"value":"column-reverse"}]}},{"type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"flexGrow","propertyComment":"\n The flex-grow CSS property sets the flex grow factor of a flex item main size.\n It specifies how much of the remaining space in the flex container should be assigned to the item\n (the flex grow factor).\n"}},{"type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"flexShrink","propertyComment":"\n The flex-shrink CSS property sets the flex shrink factor of a flex item.\n If the size of all flex items is larger than the flex container,\n items shrink to fit according to flex-shrink.\n"}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"flexWrap","propertyComment":"\n The flex-wrap CSS property sets whether flex items are forced onto one line or can wrap onto multiple lines.\n","propertyValueVariants":[{"value":"nowrap"},{"value":"wrap"},{"value":"wrap-reverse"}]}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"justifyContent","propertyComment":"\n The CSS justify-content property defines how the browser distributes space between and around content\n items along the main-axis of a flex container, and the inline axis of a container.\n","propertyValueVariants":[{"value":"center"},{"value":"start"},{"value":"end"},{"value":"flex-start"},{"value":"flex-end"},{"value":"left"},{"value":"right"},{"value":"normal"},{"value":"space-between"},{"value":"space-around"},{"value":"space-evenly"},{"value":"stretch"}]}},{"type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"order","propertyComment":"\n The order CSS property sets the order to lay out an item in a flex or grid container.\n Items in a container are sorted by ascending order value and then by their source code order.\n"}}]},{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"palette","propertyComment":"Sets the color of the component"},"children":[{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"backgroundColor","externalProperties":"usr.common-props.color.ColorTypes"},"children":[{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorHue","propertyComment":"A value from the collection of colors, i.e. hues","propertyValueVariants":[{"value":"primary.main"},{"value":"secondary.main"},{"value":"error.main"},{"value":"text.primary"},{"value":"text.secondary"},{"value":"text.disabled"},{"value":"text.hint"},{"value":"red"},{"value":"pink"},{"value":"purple"},{"value":"deepPurple"},{"value":"indigo"},{"value":"blue"},{"value":"lightBlue"},{"value":"cyan"},{"value":"teal"},{"value":"green"},{"value":"lightGreen"},{"value":"lime"},{"value":"yellow"},{"value":"amber"},{"value":"orange"},{"value":"deepOrange"},{"value":"brown"},{"value":"grey"},{"value":"blueGrey"}]}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorShade","propertyComment":"A value from the collection of colors shades","propertyValueVariants":[{"value":"50"},{"value":"100"},{"value":"200"},{"value":"300"},{"value":"400"},{"value":"500"},{"value":"600"},{"value":"700"},{"value":"800"},{"value":"900"},{"value":"A100"},{"value":"A200"},{"value":"A400"},{"value":"A700"}]}}]},{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"color","externalProperties":"usr.common-props.color.ColorTypes"},"children":[{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorHue","propertyComment":"A value from the collection of colors, i.e. hues","propertyValueVariants":[{"value":"primary.main"},{"value":"secondary.main"},{"value":"error.main"},{"value":"text.primary"},{"value":"text.secondary"},{"value":"text.disabled"},{"value":"text.hint"},{"value":"red"},{"value":"pink"},{"value":"purple"},{"value":"deepPurple"},{"value":"indigo"},{"value":"blue"},{"value":"lightBlue"},{"value":"cyan"},{"value":"teal"},{"value":"green"},{"value":"lightGreen"},{"value":"lime"},{"value":"yellow"},{"value":"amber"},{"value":"orange"},{"value":"deepOrange"},{"value":"brown"},{"value":"grey"},{"value":"blueGrey"}]}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorShade","propertyComment":"A value from the collection of colors shades","propertyValueVariants":[{"value":"50"},{"value":"100"},{"value":"200"},{"value":"300"},{"value":"400"},{"value":"500"},{"value":"600"},{"value":"700"},{"value":"800"},{"value":"900"},{"value":"A100"},{"value":"A200"},{"value":"A400"},{"value":"A700"}]}}]}]},{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"positions","propertyComment":"\n Shorthand utilities for quickly configuring the position of an element.\n","externalProperties":"usr.common-props.positions.PositionsTypes"},"children":[{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"bottom","propertyComment":"\n The bottom CSS property participates in setting the vertical position of a positioned element.\n It has no effect on non-positioned elements.\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"left","propertyComment":"\n The left CSS property participates in specifying the horizontal position of a positioned element.\n It has no effect on non-positioned elements.\n"}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"position","propertyComment":"\n The position CSS property sets how an element is positioned in a document.\n The top, right, bottom, and left properties determine the final location of positioned elements.\n","propertyValueVariants":[{"value":"static"},{"value":"relative"},{"value":"absolute"},{"value":"sticky"},{"value":"fixed"}]}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"right","propertyComment":"\n The right CSS property participates in specifying the horizontal position of a positioned element.\n It has no effect on non-positioned elements.\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"top","propertyComment":"\n The top CSS property participates in specifying the vertical position of a positioned element.\n It has no effect on non-positioned elements.\n"}},{"type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"zIndex","propertyComment":"\n The z-index CSS property sets the z-order of a positioned element and its descendants or flex items.\n Overlapping elements with a larger z-index cover those with a smaller one.\n"}}]},{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"sizing","propertyComment":"\n Easily make an element as wide or as tall (relative to its parent) with the width and height utilities.\n","externalProperties":"usr.common-props.sizing.SizingTypes"},"children":[{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"height","propertyComment":"\n The height CSS property specifies the height of an element.\n By default, the property defines the height of the content area.\n Use a string value to specify units: 50%\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"maxHeight","propertyComment":"\n The max-height CSS property sets the maximum height of an element.\n It prevents the used value of the height property from becoming larger than the value specified for max-height.\n Use a string value to specify units: 50%\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"maxWidth","propertyComment":"\n The max-width CSS property sets the maximum width of an element.\n It prevents the used value of the width property from becoming larger than the value specified by max-width.\n Use a string value to specify units: 50%\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"minHeight","propertyComment":"\n The min-height CSS property sets the minimum height of an element.\n It prevents the used value of the height property from becoming smaller than the value specified for min-height.\n Use a string value to specify units: 50%\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"minWidth","propertyComment":"\n The min-width CSS property sets the minimum width of an element.\n It prevents the used value of the width property from becoming smaller than the value specified for min-width.\n Use a string value to specify units: 50%\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"width","propertyComment":"\n The width CSS property sets an element's width. By default, it sets the width of the content area.\n Use a string value to specify units: 50%\n"}}]},{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"spacing","propertyComment":"\n A range of shorthand responsive margin and padding utility classes to modify an element’s appearance.\n","externalProperties":"usr.common-props.spacing.SpacingTypes"},"children":[{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"marginSpacing","propertyComment":"\n A group of the margin properties\n Depending on the input and the theme configuration, the following transformation is applied:\n (1) number - the property is multiplied by the theme spacing value,\n (2) number - the property is used as the array index in theme spacing array,\n (3) string - the property is passed as raw CSS value\n"},"children":[{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"margin","propertyComment":"\n The property sets the margin area.\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginBottom","propertyComment":"\n The property sets the margin area on the bottom of an element.\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginLeft","propertyComment":"\n The property sets the margin area on the left side of an element.\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginRight","propertyComment":"\n The property sets the margin area on the right side of an element.\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginTop","propertyComment":"\n The property sets the margin area on the top of an element.\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginX","propertyComment":"\n The property sets the margin area on the left and right sides of an element.\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginY","propertyComment":"\n The property sets the margin area on the top and bottom sides of an element.\n"}}]},{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"paddingSpacing","propertyComment":"\n A group of the padding properties.\n Depending on the input and the theme configuration, the following transformation is applied:\n (1) number - the property is multiplied by the theme spacing value,\n (2) number - the property is used as the array index in theme spacing array,\n (3) string - the property is passed as raw CSS value\n"},"children":[{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"padding","propertyComment":"\n The property sets the padding area on all four sides of an element.\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingBottom","propertyComment":"\n The property sets the padding area on the bottom of an element.\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingLeft","propertyComment":"\n The property sets the padding area on the left side of an element.\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingRight","propertyComment":"\n The property sets the padding area on the right side of an element.\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingTop","propertyComment":"\n The property sets the padding area on the top of an element.\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingX","propertyComment":"\n The property sets the padding area on the left and right sides of an element.\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingY","propertyComment":"\n The property sets the padding area on the top and bottom sides of an element.\n"}}]}]},{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"typography","propertyComment":"Text utilities to control alignment, wrapping, weight, and more.","externalProperties":"usr.common-props.typography.TypographyTypes"},"children":[{"type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"fontSize","propertyComment":"\n The font-size CSS property sets the size of the font.\n"}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"fontStyle","propertyComment":"\n The font-style CSS property sets whether a font should be styled with a normal, italic.\n","propertyValueVariants":[{"value":"normal"},{"value":"italic"}]}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"fontWeight","propertyComment":"\n Sets the weight (or boldness) of the font according to the application settings.\n","propertyValueVariants":[{"value":"fontWeightLight"},{"value":"fontWeightRegular"},{"value":"fontWeightMedium"},{"value":"fontWeightBold"}]}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"letterSpacing","propertyComment":"\n The letter-spacing CSS property sets the spacing behavior between text characters.\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"lineHeight","propertyComment":"\n The line-height CSS property sets the height of a line box.\n It's commonly used to set the distance between lines of text.\n On block-level elements, it specifies the minimum height of line boxes within the element.\n"}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"textAlign","propertyComment":"\n The text-align CSS property sets the horizontal alignment of a block element or table-cell box.\n","propertyValueVariants":[{"value":"start"},{"value":"end"},{"value":"left"},{"value":"right"},{"value":"center"},{"value":"justify"},{"value":"match-parent"}]}}]}]}]}]},"index":2,"children":[{"key":"node1446","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{},"index":0,"children":[{"key":"node1447","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"breakpoint","propertyComment":"\n A screen size breakpoint id.\n Find the real size value in the application settings in LivePreview.\n","propertyValueVariants":[{"value":"xs"},{"value":"sm"},{"value":"md"},{"value":"lg"},{"value":"xl"}],"propertyValue":"xs"},"index":0},{"key":"node1448","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"styling","propertyComment":"\n A groups of styles that are applied for the selected breakpoint.\n Reload the entire page to see the changes.\n The changes are not applied immediately due to the JSS nature of the Box component.\n"},"index":1,"children":[{"key":"node1449","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"borders","propertyComment":"Sets style to element's border","externalProperties":"usr.common-props.borders.BordersTypes"},"index":0,"children":[{"key":"node1450","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"border","propertyComment":"\n The border-width CSS property sets the width of an element's border.\n When the value is specified, it applies the same width to all four sides.\n","propertyValue":1},"index":0},{"key":"node1451","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"borderBottom","propertyComment":"The border-bottom-width CSS property sets the width of the bottom border of an element."},"index":1},{"key":"node1452","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"borderColor","propertyComment":"The border-color CSS property sets the color of an element's border.","externalProperties":"usr.common-props.color.ColorTypes"},"index":2,"children":[{"key":"node1453","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorHue","propertyComment":"A value from the collection of colors, i.e. hues","propertyValueVariants":[{"value":"primary.main"},{"value":"secondary.main"},{"value":"error.main"},{"value":"text.primary"},{"value":"text.secondary"},{"value":"text.disabled"},{"value":"text.hint"},{"value":"red"},{"value":"pink"},{"value":"purple"},{"value":"deepPurple"},{"value":"indigo"},{"value":"blue"},{"value":"lightBlue"},{"value":"cyan"},{"value":"teal"},{"value":"green"},{"value":"lightGreen"},{"value":"lime"},{"value":"yellow"},{"value":"amber"},{"value":"orange"},{"value":"deepOrange"},{"value":"brown"},{"value":"grey"},{"value":"blueGrey"}]},"index":0},{"key":"node1454","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorShade","propertyComment":"A value from the collection of colors shades","propertyValueVariants":[{"value":"50"},{"value":"100"},{"value":"200"},{"value":"300"},{"value":"400"},{"value":"500"},{"value":"600"},{"value":"700"},{"value":"800"},{"value":"900"},{"value":"A100"},{"value":"A200"},{"value":"A400"},{"value":"A700"}]},"index":1}]},{"key":"node1455","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"borderLeft","propertyComment":"The border-left-width CSS property sets the width of the left border of an element."},"index":3},{"key":"node1456","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"borderRadius","propertyComment":"\n The border-radius CSS property rounds the corners of an element's outer border edge.\n You can set a single radius to make circular corners, or two radii to make elliptical corners.\n Use a string value of the border radius to set units: 10% 30% 50% 70%\n"},"index":4},{"key":"node1457","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"borderRight","propertyComment":"The border-right-width CSS property sets the width of the right border of an element."},"index":5},{"key":"node1458","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"borderTop","propertyComment":"The border-top-width CSS property sets the width of the top border of an element"},"index":6}]},{"key":"node1459","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"boxShadow","propertyComment":"\n Shadow depth. It accepts values between 0 and 24 inclusive.\n","propertyValueVariants":[{"value":"0"},{"value":"1"},{"value":"2"},{"value":"3"},{"value":"4"},{"value":"5"},{"value":"6"},{"value":"7"},{"value":"8"},{"value":"9"},{"value":"10"},{"value":"11"},{"value":"12"},{"value":"13"},{"value":"14"},{"value":"15"},{"value":"16"},{"value":"17"},{"value":"18"},{"value":"19"},{"value":"20"},{"value":"21"},{"value":"22"},{"value":"23"},{"value":"24"}]},"index":1},{"key":"node1460","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"display","propertyComment":"Toggle the display value of components","externalProperties":"usr.common-props.display.DisplayTypes"},"index":2,"children":[{"key":"node1461","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"display","propertyComment":"\n The display CSS property sets whether an element is treated as\n a block or inline element and the layout used for its children,\n such as flow layout, grid or flex.\n","propertyValueVariants":[{"value":"block"},{"value":"flex"},{"value":"flow"},{"value":"inline"}]},"index":0},{"key":"node1462","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"overflow","propertyComment":"\n The overflow shorthand CSS property sets what to do when\n an element's content is too big to fit in its block formatting context.\n","propertyValueVariants":[{"value":"auto"},{"value":"hidden"},{"value":"scroll"},{"value":"visible"}]},"index":1},{"key":"node1463","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"textOverflow","propertyComment":"\n The text-overflow CSS property sets how hidden overflow content is signaled to users.\n","propertyValueVariants":[{"value":"clip"},{"value":"ellipsis"}]},"index":2},{"key":"node1464","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"visibility","propertyComment":"\n The visibility CSS property shows or hides an element without changing the layout of a document.\n","propertyValueVariants":[{"value":"hidden"},{"value":"visible"},{"value":"collapse"}]},"index":3},{"key":"node1465","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"whiteSpace","propertyComment":"\n The white-space CSS property sets how white space inside an element is handled.\n","propertyValueVariants":[{"value":"normal"},{"value":"nowrap"},{"value":"pre"},{"value":"pre-wrap"},{"value":"pre-line"},{"value":"break-spaces"}]},"index":4}]},{"key":"node1466","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"flexbox","propertyComment":"\n Manages the layout, alignment, and sizing of grid columns, navigation, components,\n and more with a full suite of responsive Flexbox utilities.\n","externalProperties":"usr.common-props.flexbox.FlexboxTypes"},"index":3,"children":[{"key":"node1467","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"alignContent","propertyComment":"\n The CSS align-content property sets the distribution of space between\n and around content items along a flexbox's cross-axis.\n","propertyValueVariants":[{"value":"center"},{"value":"start"},{"value":"end"},{"value":"flex-start"},{"value":"flex-end"},{"value":"baseline"},{"value":"space-between"},{"value":"space-around"},{"value":"space-evenly"},{"value":"normal"},{"value":"stretch"}]},"index":0},{"key":"node1468","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"alignItems","propertyComment":"\n The CSS align-items property sets the align-self value on all direct children as a group.\n","propertyValueVariants":[{"value":"center"},{"value":"start"},{"value":"end"},{"value":"flex-start"},{"value":"flex-end"},{"value":"baseline"},{"value":"normal"},{"value":"stretch"}]},"index":1},{"key":"node1469","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"alignSelf","propertyComment":"\n The align-self CSS property overrides a grid or flex item's align-items value.\n In Flexbox, it aligns the item on the cross axis.\n","propertyValueVariants":[{"value":"auto"},{"value":"center"},{"value":"start"},{"value":"end"},{"value":"flex-start"},{"value":"flex-end"},{"value":"baseline"},{"value":"normal"},{"value":"stretch"}]},"index":2},{"key":"node1470","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"flex","propertyComment":"\n The flex CSS property sets how a flex item will grow or shrink to fit the space available in its flex container.\n It is a shorthand for flex-grow, flex-shrink, and flex-basis.\n"},"index":3},{"key":"node1471","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"flexDirection","propertyComment":"\n The flex-direction CSS property sets how flex items are placed\n in the flex container defining the main axis and the direction (normal or reversed).\n","propertyValueVariants":[{"value":"row"},{"value":"row-reverse"},{"value":"column"},{"value":"column-reverse"}]},"index":4},{"key":"node1472","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"flexGrow","propertyComment":"\n The flex-grow CSS property sets the flex grow factor of a flex item main size.\n It specifies how much of the remaining space in the flex container should be assigned to the item\n (the flex grow factor).\n","propertyValue":2},"index":5},{"key":"node1473","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"flexShrink","propertyComment":"\n The flex-shrink CSS property sets the flex shrink factor of a flex item.\n If the size of all flex items is larger than the flex container,\n items shrink to fit according to flex-shrink.\n"},"index":6},{"key":"node1474","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"flexWrap","propertyComment":"\n The flex-wrap CSS property sets whether flex items are forced onto one line or can wrap onto multiple lines.\n","propertyValueVariants":[{"value":"nowrap"},{"value":"wrap"},{"value":"wrap-reverse"}]},"index":7},{"key":"node1475","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"justifyContent","propertyComment":"\n The CSS justify-content property defines how the browser distributes space between and around content\n items along the main-axis of a flex container, and the inline axis of a container.\n","propertyValueVariants":[{"value":"center"},{"value":"start"},{"value":"end"},{"value":"flex-start"},{"value":"flex-end"},{"value":"left"},{"value":"right"},{"value":"normal"},{"value":"space-between"},{"value":"space-around"},{"value":"space-evenly"},{"value":"stretch"}]},"index":8},{"key":"node1476","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"order","propertyComment":"\n The order CSS property sets the order to lay out an item in a flex or grid container.\n Items in a container are sorted by ascending order value and then by their source code order.\n"},"index":9}]},{"key":"node1477","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"palette","propertyComment":"Sets the color of the component"},"index":4,"children":[{"key":"node1478","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"backgroundColor","externalProperties":"usr.common-props.color.ColorTypes"},"index":0,"children":[{"key":"node1479","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorHue","propertyComment":"A value from the collection of colors, i.e. hues","propertyValueVariants":[{"value":"primary.main"},{"value":"secondary.main"},{"value":"error.main"},{"value":"text.primary"},{"value":"text.secondary"},{"value":"text.disabled"},{"value":"text.hint"},{"value":"red"},{"value":"pink"},{"value":"purple"},{"value":"deepPurple"},{"value":"indigo"},{"value":"blue"},{"value":"lightBlue"},{"value":"cyan"},{"value":"teal"},{"value":"green"},{"value":"lightGreen"},{"value":"lime"},{"value":"yellow"},{"value":"amber"},{"value":"orange"},{"value":"deepOrange"},{"value":"brown"},{"value":"grey"},{"value":"blueGrey"}]},"index":0},{"key":"node1480","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorShade","propertyComment":"A value from the collection of colors shades","propertyValueVariants":[{"value":"50"},{"value":"100"},{"value":"200"},{"value":"300"},{"value":"400"},{"value":"500"},{"value":"600"},{"value":"700"},{"value":"800"},{"value":"900"},{"value":"A100"},{"value":"A200"},{"value":"A400"},{"value":"A700"}]},"index":1}]},{"key":"node1481","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"color","externalProperties":"usr.common-props.color.ColorTypes"},"index":1,"children":[{"key":"node1482","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorHue","propertyComment":"A value from the collection of colors, i.e. hues","propertyValueVariants":[{"value":"primary.main"},{"value":"secondary.main"},{"value":"error.main"},{"value":"text.primary"},{"value":"text.secondary"},{"value":"text.disabled"},{"value":"text.hint"},{"value":"red"},{"value":"pink"},{"value":"purple"},{"value":"deepPurple"},{"value":"indigo"},{"value":"blue"},{"value":"lightBlue"},{"value":"cyan"},{"value":"teal"},{"value":"green"},{"value":"lightGreen"},{"value":"lime"},{"value":"yellow"},{"value":"amber"},{"value":"orange"},{"value":"deepOrange"},{"value":"brown"},{"value":"grey"},{"value":"blueGrey"}]},"index":0},{"key":"node1483","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorShade","propertyComment":"A value from the collection of colors shades","propertyValueVariants":[{"value":"50"},{"value":"100"},{"value":"200"},{"value":"300"},{"value":"400"},{"value":"500"},{"value":"600"},{"value":"700"},{"value":"800"},{"value":"900"},{"value":"A100"},{"value":"A200"},{"value":"A400"},{"value":"A700"}]},"index":1}]}]},{"key":"node1484","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"positions","propertyComment":"\n Shorthand utilities for quickly configuring the position of an element.\n","externalProperties":"usr.common-props.positions.PositionsTypes"},"index":5,"children":[{"key":"node1485","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"bottom","propertyComment":"\n The bottom CSS property participates in setting the vertical position of a positioned element.\n It has no effect on non-positioned elements.\n"},"index":0},{"key":"node1486","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"left","propertyComment":"\n The left CSS property participates in specifying the horizontal position of a positioned element.\n It has no effect on non-positioned elements.\n"},"index":1},{"key":"node1487","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"position","propertyComment":"\n The position CSS property sets how an element is positioned in a document.\n The top, right, bottom, and left properties determine the final location of positioned elements.\n","propertyValue":"relative","propertyValueVariants":[{"value":"static"},{"value":"relative"},{"value":"absolute"},{"value":"sticky"},{"value":"fixed"}]},"index":2},{"key":"node1488","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"right","propertyComment":"\n The right CSS property participates in specifying the horizontal position of a positioned element.\n It has no effect on non-positioned elements.\n"},"index":3},{"key":"node1489","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"top","propertyComment":"\n The top CSS property participates in specifying the vertical position of a positioned element.\n It has no effect on non-positioned elements.\n"},"index":4},{"key":"node1490","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"zIndex","propertyComment":"\n The z-index CSS property sets the z-order of a positioned element and its descendants or flex items.\n Overlapping elements with a larger z-index cover those with a smaller one.\n"},"index":5}]},{"key":"node1491","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"sizing","propertyComment":"\n Easily make an element as wide or as tall (relative to its parent) with the width and height utilities.\n","externalProperties":"usr.common-props.sizing.SizingTypes"},"index":6,"children":[{"key":"node1492","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"height","propertyComment":"\n The height CSS property specifies the height of an element.\n By default, the property defines the height of the content area.\n Use a string value to specify units: 50%\n"},"index":0},{"key":"node1493","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"maxHeight","propertyComment":"\n The max-height CSS property sets the maximum height of an element.\n It prevents the used value of the height property from becoming larger than the value specified for max-height.\n Use a string value to specify units: 50%\n"},"index":1},{"key":"node1494","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"maxWidth","propertyComment":"\n The max-width CSS property sets the maximum width of an element.\n It prevents the used value of the width property from becoming larger than the value specified by max-width.\n Use a string value to specify units: 50%\n"},"index":2},{"key":"node1495","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"minHeight","propertyComment":"\n The min-height CSS property sets the minimum height of an element.\n It prevents the used value of the height property from becoming smaller than the value specified for min-height.\n Use a string value to specify units: 50%\n"},"index":3},{"key":"node1496","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"minWidth","propertyComment":"\n The min-width CSS property sets the minimum width of an element.\n It prevents the used value of the width property from becoming smaller than the value specified for min-width.\n Use a string value to specify units: 50%\n"},"index":4},{"key":"node1497","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"width","propertyComment":"\n The width CSS property sets an element's width. By default, it sets the width of the content area.\n Use a string value to specify units: 50%\n"},"index":5}]},{"key":"node1498","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"spacing","propertyComment":"\n A range of shorthand responsive margin and padding utility classes to modify an element’s appearance.\n","externalProperties":"usr.common-props.spacing.SpacingTypes"},"index":7,"children":[{"key":"node1499","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"marginSpacing","propertyComment":"\n A group of the margin properties\n Depending on the input and the theme configuration, the following transformation is applied:\n (1) number - the property is multiplied by the theme spacing value,\n (2) number - the property is used as the array index in theme spacing array,\n (3) string - the property is passed as raw CSS value\n"},"index":0,"children":[{"key":"node1500","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"margin","propertyComment":"\n The property sets the margin area.\n"},"index":0},{"key":"node1501","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginBottom","propertyComment":"\n The property sets the margin area on the bottom of an element.\n"},"index":1},{"key":"node1502","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginLeft","propertyComment":"\n The property sets the margin area on the left side of an element.\n"},"index":2},{"key":"node1503","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginRight","propertyComment":"\n The property sets the margin area on the right side of an element.\n"},"index":3},{"key":"node1504","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginTop","propertyComment":"\n The property sets the margin area on the top of an element.\n"},"index":4},{"key":"node1505","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginX","propertyComment":"\n The property sets the margin area on the left and right sides of an element.\n"},"index":5},{"key":"node1506","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginY","propertyComment":"\n The property sets the margin area on the top and bottom sides of an element.\n"},"index":6}]},{"key":"node1507","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"paddingSpacing","propertyComment":"\n A group of the padding properties.\n Depending on the input and the theme configuration, the following transformation is applied:\n (1) number - the property is multiplied by the theme spacing value,\n (2) number - the property is used as the array index in theme spacing array,\n (3) string - the property is passed as raw CSS value\n"},"index":1,"children":[{"key":"node1508","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"padding","propertyComment":"\n The property sets the padding area on all four sides of an element.\n"},"index":0},{"key":"node1509","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingBottom","propertyComment":"\n The property sets the padding area on the bottom of an element.\n"},"index":1},{"key":"node1510","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingLeft","propertyComment":"\n The property sets the padding area on the left side of an element.\n"},"index":2},{"key":"node1511","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingRight","propertyComment":"\n The property sets the padding area on the right side of an element.\n"},"index":3},{"key":"node1512","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingTop","propertyComment":"\n The property sets the padding area on the top of an element.\n"},"index":4},{"key":"node1513","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingX","propertyComment":"\n The property sets the padding area on the left and right sides of an element.\n"},"index":5},{"key":"node1514","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingY","propertyComment":"\n The property sets the padding area on the top and bottom sides of an element.\n"},"index":6}]}]},{"key":"node1515","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"typography","propertyComment":"Text utilities to control alignment, wrapping, weight, and more.","externalProperties":"usr.common-props.typography.TypographyTypes"},"index":8,"children":[{"key":"node1516","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"fontSize","propertyComment":"\n The font-size CSS property sets the size of the font.\n"},"index":0},{"key":"node1517","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"fontStyle","propertyComment":"\n The font-style CSS property sets whether a font should be styled with a normal, italic.\n","propertyValueVariants":[{"value":"normal"},{"value":"italic"}]},"index":1},{"key":"node1518","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"fontWeight","propertyComment":"\n Sets the weight (or boldness) of the font according to the application settings.\n","propertyValueVariants":[{"value":"fontWeightLight"},{"value":"fontWeightRegular"},{"value":"fontWeightMedium"},{"value":"fontWeightBold"}]},"index":2},{"key":"node1519","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"letterSpacing","propertyComment":"\n The letter-spacing CSS property sets the spacing behavior between text characters.\n"},"index":3},{"key":"node1520","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"lineHeight","propertyComment":"\n The line-height CSS property sets the height of a line box.\n It's commonly used to set the distance between lines of text.\n On block-level elements, it specifies the minimum height of line boxes within the element.\n"},"index":4},{"key":"node1521","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"textAlign","propertyComment":"\n The text-align CSS property sets the horizontal alignment of a block element or table-cell box.\n","propertyValueVariants":[{"value":"start"},{"value":"end"},{"value":"left"},{"value":"right"},{"value":"center"},{"value":"justify"},{"value":"match-parent"}]},"index":5}]}]}]}]}]},{"key":"node1522","type":"PAGE_COMPONENT_TYPE","props":{"componentName":"usr.in-page-components.layouts.BoxResponsive","componentInstance":"boxResponsive"},"index":2,"children":[{"key":"node1523","type":"COMPONENT_PROPERTY_ARRAY_OF_TYPE","props":{"propertyName":"content","propertyComment":"A list of the components that will be placed inside the Box component. Increase the array to have more items.","defaultChildren":[{"type":"COMPONENT_PROPERTY_ELEMENT_TYPE","props":{"componentName":"__PlaceHolder"}}]},"index":0,"children":[{"key":"node1524","type":"COMPONENT_PROPERTY_ELEMENT_TYPE","props":{"componentName":"__PlaceHolder","isSelected":true},"index":0}]},{"key":"node1525","type":"COMPONENT_PROPERTY_BOOL_TYPE","props":{"propertyName":"doNotUseInFlows","propertyComment":"\n If true then the component's instance will not be allowed to use in flows,\n and you will not see the instance name in the pages instances list\n","propertyValue":true},"index":1},{"key":"node1526","type":"COMPONENT_PROPERTY_ARRAY_OF_TYPE","props":{"propertyName":"stylesByScreenSize","propertyComment":"\n A list of the styles groups applied to different screen sizes accordingly.\n Reload the entire page to see the changes.\n The changes are not applied immediately due to the JSS nature of the Box component.\n","defaultChildren":[{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{},"children":[{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"breakpoint","propertyComment":"\n A screen size breakpoint id.\n Find the real size value in the application settings in LivePreview.\n","propertyValueVariants":[{"value":"xs"},{"value":"sm"},{"value":"md"},{"value":"lg"},{"value":"xl"}],"propertyValue":"xs"}},{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"styling","propertyComment":"\n A groups of styles that are applied for the selected breakpoint.\n Reload the entire page to see the changes.\n The changes are not applied immediately due to the JSS nature of the Box component.\n"},"children":[{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"borders","propertyComment":"Sets style to element's border","externalProperties":"usr.common-props.borders.BordersTypes"},"children":[{"type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"border","propertyComment":"\n The border-width CSS property sets the width of an element's border.\n When the value is specified, it applies the same width to all four sides.\n","propertyValue":1}},{"type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"borderBottom","propertyComment":"The border-bottom-width CSS property sets the width of the bottom border of an element."}},{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"borderColor","propertyComment":"The border-color CSS property sets the color of an element's border.","externalProperties":"usr.common-props.color.ColorTypes"},"children":[{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorHue","propertyComment":"A value from the collection of colors, i.e. hues","propertyValueVariants":[{"value":"primary.main"},{"value":"secondary.main"},{"value":"error.main"},{"value":"text.primary"},{"value":"text.secondary"},{"value":"text.disabled"},{"value":"text.hint"},{"value":"red"},{"value":"pink"},{"value":"purple"},{"value":"deepPurple"},{"value":"indigo"},{"value":"blue"},{"value":"lightBlue"},{"value":"cyan"},{"value":"teal"},{"value":"green"},{"value":"lightGreen"},{"value":"lime"},{"value":"yellow"},{"value":"amber"},{"value":"orange"},{"value":"deepOrange"},{"value":"brown"},{"value":"grey"},{"value":"blueGrey"}]}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorShade","propertyComment":"A value from the collection of colors shades","propertyValueVariants":[{"value":"50"},{"value":"100"},{"value":"200"},{"value":"300"},{"value":"400"},{"value":"500"},{"value":"600"},{"value":"700"},{"value":"800"},{"value":"900"},{"value":"A100"},{"value":"A200"},{"value":"A400"},{"value":"A700"}]}}]},{"type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"borderLeft","propertyComment":"The border-left-width CSS property sets the width of the left border of an element."}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"borderRadius","propertyComment":"\n The border-radius CSS property rounds the corners of an element's outer border edge.\n You can set a single radius to make circular corners, or two radii to make elliptical corners.\n Use a string value of the border radius to set units: 10% 30% 50% 70%\n"}},{"type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"borderRight","propertyComment":"The border-right-width CSS property sets the width of the right border of an element."}},{"type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"borderTop","propertyComment":"The border-top-width CSS property sets the width of the top border of an element"}}]},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"boxShadow","propertyComment":"\n Shadow depth. It accepts values between 0 and 24 inclusive.\n","propertyValueVariants":[{"value":"0"},{"value":"1"},{"value":"2"},{"value":"3"},{"value":"4"},{"value":"5"},{"value":"6"},{"value":"7"},{"value":"8"},{"value":"9"},{"value":"10"},{"value":"11"},{"value":"12"},{"value":"13"},{"value":"14"},{"value":"15"},{"value":"16"},{"value":"17"},{"value":"18"},{"value":"19"},{"value":"20"},{"value":"21"},{"value":"22"},{"value":"23"},{"value":"24"}]}},{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"display","propertyComment":"Toggle the display value of components","externalProperties":"usr.common-props.display.DisplayTypes"},"children":[{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"display","propertyComment":"\n The display CSS property sets whether an element is treated as\n a block or inline element and the layout used for its children,\n such as flow layout, grid or flex.\n","propertyValueVariants":[{"value":"block"},{"value":"flex"},{"value":"flow"},{"value":"inline"}]}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"overflow","propertyComment":"\n The overflow shorthand CSS property sets what to do when\n an element's content is too big to fit in its block formatting context.\n","propertyValueVariants":[{"value":"auto"},{"value":"hidden"},{"value":"scroll"},{"value":"visible"}]}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"textOverflow","propertyComment":"\n The text-overflow CSS property sets how hidden overflow content is signaled to users.\n","propertyValueVariants":[{"value":"clip"},{"value":"ellipsis"}]}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"visibility","propertyComment":"\n The visibility CSS property shows or hides an element without changing the layout of a document.\n","propertyValueVariants":[{"value":"hidden"},{"value":"visible"},{"value":"collapse"}]}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"whiteSpace","propertyComment":"\n The white-space CSS property sets how white space inside an element is handled.\n","propertyValueVariants":[{"value":"normal"},{"value":"nowrap"},{"value":"pre"},{"value":"pre-wrap"},{"value":"pre-line"},{"value":"break-spaces"}]}}]},{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"flexbox","propertyComment":"\n Manages the layout, alignment, and sizing of grid columns, navigation, components,\n and more with a full suite of responsive Flexbox utilities.\n","externalProperties":"usr.common-props.flexbox.FlexboxTypes"},"children":[{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"alignContent","propertyComment":"\n The CSS align-content property sets the distribution of space between\n and around content items along a flexbox's cross-axis.\n","propertyValueVariants":[{"value":"center"},{"value":"start"},{"value":"end"},{"value":"flex-start"},{"value":"flex-end"},{"value":"baseline"},{"value":"space-between"},{"value":"space-around"},{"value":"space-evenly"},{"value":"normal"},{"value":"stretch"}]}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"alignItems","propertyComment":"\n The CSS align-items property sets the align-self value on all direct children as a group.\n","propertyValueVariants":[{"value":"center"},{"value":"start"},{"value":"end"},{"value":"flex-start"},{"value":"flex-end"},{"value":"baseline"},{"value":"normal"},{"value":"stretch"}]}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"alignSelf","propertyComment":"\n The align-self CSS property overrides a grid or flex item's align-items value.\n In Flexbox, it aligns the item on the cross axis.\n","propertyValueVariants":[{"value":"auto"},{"value":"center"},{"value":"start"},{"value":"end"},{"value":"flex-start"},{"value":"flex-end"},{"value":"baseline"},{"value":"normal"},{"value":"stretch"}]}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"flex","propertyComment":"\n The flex CSS property sets how a flex item will grow or shrink to fit the space available in its flex container.\n It is a shorthand for flex-grow, flex-shrink, and flex-basis.\n"}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"flexDirection","propertyComment":"\n The flex-direction CSS property sets how flex items are placed\n in the flex container defining the main axis and the direction (normal or reversed).\n","propertyValueVariants":[{"value":"row"},{"value":"row-reverse"},{"value":"column"},{"value":"column-reverse"}]}},{"type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"flexGrow","propertyComment":"\n The flex-grow CSS property sets the flex grow factor of a flex item main size.\n It specifies how much of the remaining space in the flex container should be assigned to the item\n (the flex grow factor).\n"}},{"type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"flexShrink","propertyComment":"\n The flex-shrink CSS property sets the flex shrink factor of a flex item.\n If the size of all flex items is larger than the flex container,\n items shrink to fit according to flex-shrink.\n"}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"flexWrap","propertyComment":"\n The flex-wrap CSS property sets whether flex items are forced onto one line or can wrap onto multiple lines.\n","propertyValueVariants":[{"value":"nowrap"},{"value":"wrap"},{"value":"wrap-reverse"}]}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"justifyContent","propertyComment":"\n The CSS justify-content property defines how the browser distributes space between and around content\n items along the main-axis of a flex container, and the inline axis of a container.\n","propertyValueVariants":[{"value":"center"},{"value":"start"},{"value":"end"},{"value":"flex-start"},{"value":"flex-end"},{"value":"left"},{"value":"right"},{"value":"normal"},{"value":"space-between"},{"value":"space-around"},{"value":"space-evenly"},{"value":"stretch"}]}},{"type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"order","propertyComment":"\n The order CSS property sets the order to lay out an item in a flex or grid container.\n Items in a container are sorted by ascending order value and then by their source code order.\n"}}]},{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"palette","propertyComment":"Sets the color of the component"},"children":[{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"backgroundColor","externalProperties":"usr.common-props.color.ColorTypes"},"children":[{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorHue","propertyComment":"A value from the collection of colors, i.e. hues","propertyValueVariants":[{"value":"primary.main"},{"value":"secondary.main"},{"value":"error.main"},{"value":"text.primary"},{"value":"text.secondary"},{"value":"text.disabled"},{"value":"text.hint"},{"value":"red"},{"value":"pink"},{"value":"purple"},{"value":"deepPurple"},{"value":"indigo"},{"value":"blue"},{"value":"lightBlue"},{"value":"cyan"},{"value":"teal"},{"value":"green"},{"value":"lightGreen"},{"value":"lime"},{"value":"yellow"},{"value":"amber"},{"value":"orange"},{"value":"deepOrange"},{"value":"brown"},{"value":"grey"},{"value":"blueGrey"}]}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorShade","propertyComment":"A value from the collection of colors shades","propertyValueVariants":[{"value":"50"},{"value":"100"},{"value":"200"},{"value":"300"},{"value":"400"},{"value":"500"},{"value":"600"},{"value":"700"},{"value":"800"},{"value":"900"},{"value":"A100"},{"value":"A200"},{"value":"A400"},{"value":"A700"}]}}]},{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"color","externalProperties":"usr.common-props.color.ColorTypes"},"children":[{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorHue","propertyComment":"A value from the collection of colors, i.e. hues","propertyValueVariants":[{"value":"primary.main"},{"value":"secondary.main"},{"value":"error.main"},{"value":"text.primary"},{"value":"text.secondary"},{"value":"text.disabled"},{"value":"text.hint"},{"value":"red"},{"value":"pink"},{"value":"purple"},{"value":"deepPurple"},{"value":"indigo"},{"value":"blue"},{"value":"lightBlue"},{"value":"cyan"},{"value":"teal"},{"value":"green"},{"value":"lightGreen"},{"value":"lime"},{"value":"yellow"},{"value":"amber"},{"value":"orange"},{"value":"deepOrange"},{"value":"brown"},{"value":"grey"},{"value":"blueGrey"}]}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorShade","propertyComment":"A value from the collection of colors shades","propertyValueVariants":[{"value":"50"},{"value":"100"},{"value":"200"},{"value":"300"},{"value":"400"},{"value":"500"},{"value":"600"},{"value":"700"},{"value":"800"},{"value":"900"},{"value":"A100"},{"value":"A200"},{"value":"A400"},{"value":"A700"}]}}]}]},{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"positions","propertyComment":"\n Shorthand utilities for quickly configuring the position of an element.\n","externalProperties":"usr.common-props.positions.PositionsTypes"},"children":[{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"bottom","propertyComment":"\n The bottom CSS property participates in setting the vertical position of a positioned element.\n It has no effect on non-positioned elements.\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"left","propertyComment":"\n The left CSS property participates in specifying the horizontal position of a positioned element.\n It has no effect on non-positioned elements.\n"}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"position","propertyComment":"\n The position CSS property sets how an element is positioned in a document.\n The top, right, bottom, and left properties determine the final location of positioned elements.\n","propertyValueVariants":[{"value":"static"},{"value":"relative"},{"value":"absolute"},{"value":"sticky"},{"value":"fixed"}]}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"right","propertyComment":"\n The right CSS property participates in specifying the horizontal position of a positioned element.\n It has no effect on non-positioned elements.\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"top","propertyComment":"\n The top CSS property participates in specifying the vertical position of a positioned element.\n It has no effect on non-positioned elements.\n"}},{"type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"zIndex","propertyComment":"\n The z-index CSS property sets the z-order of a positioned element and its descendants or flex items.\n Overlapping elements with a larger z-index cover those with a smaller one.\n"}}]},{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"sizing","propertyComment":"\n Easily make an element as wide or as tall (relative to its parent) with the width and height utilities.\n","externalProperties":"usr.common-props.sizing.SizingTypes"},"children":[{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"height","propertyComment":"\n The height CSS property specifies the height of an element.\n By default, the property defines the height of the content area.\n Use a string value to specify units: 50%\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"maxHeight","propertyComment":"\n The max-height CSS property sets the maximum height of an element.\n It prevents the used value of the height property from becoming larger than the value specified for max-height.\n Use a string value to specify units: 50%\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"maxWidth","propertyComment":"\n The max-width CSS property sets the maximum width of an element.\n It prevents the used value of the width property from becoming larger than the value specified by max-width.\n Use a string value to specify units: 50%\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"minHeight","propertyComment":"\n The min-height CSS property sets the minimum height of an element.\n It prevents the used value of the height property from becoming smaller than the value specified for min-height.\n Use a string value to specify units: 50%\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"minWidth","propertyComment":"\n The min-width CSS property sets the minimum width of an element.\n It prevents the used value of the width property from becoming smaller than the value specified for min-width.\n Use a string value to specify units: 50%\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"width","propertyComment":"\n The width CSS property sets an element's width. By default, it sets the width of the content area.\n Use a string value to specify units: 50%\n"}}]},{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"spacing","propertyComment":"\n A range of shorthand responsive margin and padding utility classes to modify an element’s appearance.\n","externalProperties":"usr.common-props.spacing.SpacingTypes"},"children":[{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"marginSpacing","propertyComment":"\n A group of the margin properties\n Depending on the input and the theme configuration, the following transformation is applied:\n (1) number - the property is multiplied by the theme spacing value,\n (2) number - the property is used as the array index in theme spacing array,\n (3) string - the property is passed as raw CSS value\n"},"children":[{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"margin","propertyComment":"\n The property sets the margin area.\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginBottom","propertyComment":"\n The property sets the margin area on the bottom of an element.\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginLeft","propertyComment":"\n The property sets the margin area on the left side of an element.\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginRight","propertyComment":"\n The property sets the margin area on the right side of an element.\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginTop","propertyComment":"\n The property sets the margin area on the top of an element.\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginX","propertyComment":"\n The property sets the margin area on the left and right sides of an element.\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginY","propertyComment":"\n The property sets the margin area on the top and bottom sides of an element.\n"}}]},{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"paddingSpacing","propertyComment":"\n A group of the padding properties.\n Depending on the input and the theme configuration, the following transformation is applied:\n (1) number - the property is multiplied by the theme spacing value,\n (2) number - the property is used as the array index in theme spacing array,\n (3) string - the property is passed as raw CSS value\n"},"children":[{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"padding","propertyComment":"\n The property sets the padding area on all four sides of an element.\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingBottom","propertyComment":"\n The property sets the padding area on the bottom of an element.\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingLeft","propertyComment":"\n The property sets the padding area on the left side of an element.\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingRight","propertyComment":"\n The property sets the padding area on the right side of an element.\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingTop","propertyComment":"\n The property sets the padding area on the top of an element.\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingX","propertyComment":"\n The property sets the padding area on the left and right sides of an element.\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingY","propertyComment":"\n The property sets the padding area on the top and bottom sides of an element.\n"}}]}]},{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"typography","propertyComment":"Text utilities to control alignment, wrapping, weight, and more.","externalProperties":"usr.common-props.typography.TypographyTypes"},"children":[{"type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"fontSize","propertyComment":"\n The font-size CSS property sets the size of the font.\n"}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"fontStyle","propertyComment":"\n The font-style CSS property sets whether a font should be styled with a normal, italic.\n","propertyValueVariants":[{"value":"normal"},{"value":"italic"}]}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"fontWeight","propertyComment":"\n Sets the weight (or boldness) of the font according to the application settings.\n","propertyValueVariants":[{"value":"fontWeightLight"},{"value":"fontWeightRegular"},{"value":"fontWeightMedium"},{"value":"fontWeightBold"}]}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"letterSpacing","propertyComment":"\n The letter-spacing CSS property sets the spacing behavior between text characters.\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"lineHeight","propertyComment":"\n The line-height CSS property sets the height of a line box.\n It's commonly used to set the distance between lines of text.\n On block-level elements, it specifies the minimum height of line boxes within the element.\n"}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"textAlign","propertyComment":"\n The text-align CSS property sets the horizontal alignment of a block element or table-cell box.\n","propertyValueVariants":[{"value":"start"},{"value":"end"},{"value":"left"},{"value":"right"},{"value":"center"},{"value":"justify"},{"value":"match-parent"}]}}]}]}]}]},"index":2,"children":[{"key":"node1527","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{},"index":0,"children":[{"key":"node1528","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"breakpoint","propertyComment":"\n A screen size breakpoint id.\n Find the real size value in the application settings in LivePreview.\n","propertyValueVariants":[{"value":"xs"},{"value":"sm"},{"value":"md"},{"value":"lg"},{"value":"xl"}],"propertyValue":"xs"},"index":0},{"key":"node1529","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"styling","propertyComment":"\n A groups of styles that are applied for the selected breakpoint.\n Reload the entire page to see the changes.\n The changes are not applied immediately due to the JSS nature of the Box component.\n"},"index":1,"children":[{"key":"node1530","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"borders","propertyComment":"Sets style to element's border","externalProperties":"usr.common-props.borders.BordersTypes"},"index":0,"children":[{"key":"node1531","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"border","propertyComment":"\n The border-width CSS property sets the width of an element's border.\n When the value is specified, it applies the same width to all four sides.\n","propertyValue":1},"index":0},{"key":"node1532","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"borderBottom","propertyComment":"The border-bottom-width CSS property sets the width of the bottom border of an element."},"index":1},{"key":"node1533","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"borderColor","propertyComment":"The border-color CSS property sets the color of an element's border.","externalProperties":"usr.common-props.color.ColorTypes"},"index":2,"children":[{"key":"node1534","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorHue","propertyComment":"A value from the collection of colors, i.e. hues","propertyValueVariants":[{"value":"primary.main"},{"value":"secondary.main"},{"value":"error.main"},{"value":"text.primary"},{"value":"text.secondary"},{"value":"text.disabled"},{"value":"text.hint"},{"value":"red"},{"value":"pink"},{"value":"purple"},{"value":"deepPurple"},{"value":"indigo"},{"value":"blue"},{"value":"lightBlue"},{"value":"cyan"},{"value":"teal"},{"value":"green"},{"value":"lightGreen"},{"value":"lime"},{"value":"yellow"},{"value":"amber"},{"value":"orange"},{"value":"deepOrange"},{"value":"brown"},{"value":"grey"},{"value":"blueGrey"}]},"index":0},{"key":"node1535","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorShade","propertyComment":"A value from the collection of colors shades","propertyValueVariants":[{"value":"50"},{"value":"100"},{"value":"200"},{"value":"300"},{"value":"400"},{"value":"500"},{"value":"600"},{"value":"700"},{"value":"800"},{"value":"900"},{"value":"A100"},{"value":"A200"},{"value":"A400"},{"value":"A700"}]},"index":1}]},{"key":"node1536","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"borderLeft","propertyComment":"The border-left-width CSS property sets the width of the left border of an element."},"index":3},{"key":"node1537","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"borderRadius","propertyComment":"\n The border-radius CSS property rounds the corners of an element's outer border edge.\n You can set a single radius to make circular corners, or two radii to make elliptical corners.\n Use a string value of the border radius to set units: 10% 30% 50% 70%\n"},"index":4},{"key":"node1538","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"borderRight","propertyComment":"The border-right-width CSS property sets the width of the right border of an element."},"index":5},{"key":"node1539","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"borderTop","propertyComment":"The border-top-width CSS property sets the width of the top border of an element"},"index":6}]},{"key":"node1540","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"boxShadow","propertyComment":"\n Shadow depth. It accepts values between 0 and 24 inclusive.\n","propertyValueVariants":[{"value":"0"},{"value":"1"},{"value":"2"},{"value":"3"},{"value":"4"},{"value":"5"},{"value":"6"},{"value":"7"},{"value":"8"},{"value":"9"},{"value":"10"},{"value":"11"},{"value":"12"},{"value":"13"},{"value":"14"},{"value":"15"},{"value":"16"},{"value":"17"},{"value":"18"},{"value":"19"},{"value":"20"},{"value":"21"},{"value":"22"},{"value":"23"},{"value":"24"}]},"index":1},{"key":"node1541","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"display","propertyComment":"Toggle the display value of components","externalProperties":"usr.common-props.display.DisplayTypes"},"index":2,"children":[{"key":"node1542","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"display","propertyComment":"\n The display CSS property sets whether an element is treated as\n a block or inline element and the layout used for its children,\n such as flow layout, grid or flex.\n","propertyValueVariants":[{"value":"block"},{"value":"flex"},{"value":"flow"},{"value":"inline"}]},"index":0},{"key":"node1543","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"overflow","propertyComment":"\n The overflow shorthand CSS property sets what to do when\n an element's content is too big to fit in its block formatting context.\n","propertyValueVariants":[{"value":"auto"},{"value":"hidden"},{"value":"scroll"},{"value":"visible"}]},"index":1},{"key":"node1544","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"textOverflow","propertyComment":"\n The text-overflow CSS property sets how hidden overflow content is signaled to users.\n","propertyValueVariants":[{"value":"clip"},{"value":"ellipsis"}]},"index":2},{"key":"node1545","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"visibility","propertyComment":"\n The visibility CSS property shows or hides an element without changing the layout of a document.\n","propertyValueVariants":[{"value":"hidden"},{"value":"visible"},{"value":"collapse"}]},"index":3},{"key":"node1546","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"whiteSpace","propertyComment":"\n The white-space CSS property sets how white space inside an element is handled.\n","propertyValueVariants":[{"value":"normal"},{"value":"nowrap"},{"value":"pre"},{"value":"pre-wrap"},{"value":"pre-line"},{"value":"break-spaces"}]},"index":4}]},{"key":"node1547","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"flexbox","propertyComment":"\n Manages the layout, alignment, and sizing of grid columns, navigation, components,\n and more with a full suite of responsive Flexbox utilities.\n","externalProperties":"usr.common-props.flexbox.FlexboxTypes"},"index":3,"children":[{"key":"node1548","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"alignContent","propertyComment":"\n The CSS align-content property sets the distribution of space between\n and around content items along a flexbox's cross-axis.\n","propertyValueVariants":[{"value":"center"},{"value":"start"},{"value":"end"},{"value":"flex-start"},{"value":"flex-end"},{"value":"baseline"},{"value":"space-between"},{"value":"space-around"},{"value":"space-evenly"},{"value":"normal"},{"value":"stretch"}]},"index":0},{"key":"node1549","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"alignItems","propertyComment":"\n The CSS align-items property sets the align-self value on all direct children as a group.\n","propertyValueVariants":[{"value":"center"},{"value":"start"},{"value":"end"},{"value":"flex-start"},{"value":"flex-end"},{"value":"baseline"},{"value":"normal"},{"value":"stretch"}]},"index":1},{"key":"node1550","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"alignSelf","propertyComment":"\n The align-self CSS property overrides a grid or flex item's align-items value.\n In Flexbox, it aligns the item on the cross axis.\n","propertyValueVariants":[{"value":"auto"},{"value":"center"},{"value":"start"},{"value":"end"},{"value":"flex-start"},{"value":"flex-end"},{"value":"baseline"},{"value":"normal"},{"value":"stretch"}]},"index":2},{"key":"node1551","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"flex","propertyComment":"\n The flex CSS property sets how a flex item will grow or shrink to fit the space available in its flex container.\n It is a shorthand for flex-grow, flex-shrink, and flex-basis.\n"},"index":3},{"key":"node1552","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"flexDirection","propertyComment":"\n The flex-direction CSS property sets how flex items are placed\n in the flex container defining the main axis and the direction (normal or reversed).\n","propertyValueVariants":[{"value":"row"},{"value":"row-reverse"},{"value":"column"},{"value":"column-reverse"}]},"index":4},{"key":"node1553","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"flexGrow","propertyComment":"\n The flex-grow CSS property sets the flex grow factor of a flex item main size.\n It specifies how much of the remaining space in the flex container should be assigned to the item\n (the flex grow factor).\n"},"index":5},{"key":"node1554","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"flexShrink","propertyComment":"\n The flex-shrink CSS property sets the flex shrink factor of a flex item.\n If the size of all flex items is larger than the flex container,\n items shrink to fit according to flex-shrink.\n"},"index":6},{"key":"node1555","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"flexWrap","propertyComment":"\n The flex-wrap CSS property sets whether flex items are forced onto one line or can wrap onto multiple lines.\n","propertyValueVariants":[{"value":"nowrap"},{"value":"wrap"},{"value":"wrap-reverse"}]},"index":7},{"key":"node1556","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"justifyContent","propertyComment":"\n The CSS justify-content property defines how the browser distributes space between and around content\n items along the main-axis of a flex container, and the inline axis of a container.\n","propertyValueVariants":[{"value":"center"},{"value":"start"},{"value":"end"},{"value":"flex-start"},{"value":"flex-end"},{"value":"left"},{"value":"right"},{"value":"normal"},{"value":"space-between"},{"value":"space-around"},{"value":"space-evenly"},{"value":"stretch"}]},"index":8},{"key":"node1557","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"order","propertyComment":"\n The order CSS property sets the order to lay out an item in a flex or grid container.\n Items in a container are sorted by ascending order value and then by their source code order.\n"},"index":9}]},{"key":"node1558","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"palette","propertyComment":"Sets the color of the component"},"index":4,"children":[{"key":"node1559","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"backgroundColor","externalProperties":"usr.common-props.color.ColorTypes"},"index":0,"children":[{"key":"node1560","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorHue","propertyComment":"A value from the collection of colors, i.e. hues","propertyValueVariants":[{"value":"primary.main"},{"value":"secondary.main"},{"value":"error.main"},{"value":"text.primary"},{"value":"text.secondary"},{"value":"text.disabled"},{"value":"text.hint"},{"value":"red"},{"value":"pink"},{"value":"purple"},{"value":"deepPurple"},{"value":"indigo"},{"value":"blue"},{"value":"lightBlue"},{"value":"cyan"},{"value":"teal"},{"value":"green"},{"value":"lightGreen"},{"value":"lime"},{"value":"yellow"},{"value":"amber"},{"value":"orange"},{"value":"deepOrange"},{"value":"brown"},{"value":"grey"},{"value":"blueGrey"}]},"index":0},{"key":"node1561","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorShade","propertyComment":"A value from the collection of colors shades","propertyValueVariants":[{"value":"50"},{"value":"100"},{"value":"200"},{"value":"300"},{"value":"400"},{"value":"500"},{"value":"600"},{"value":"700"},{"value":"800"},{"value":"900"},{"value":"A100"},{"value":"A200"},{"value":"A400"},{"value":"A700"}]},"index":1}]},{"key":"node1562","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"color","externalProperties":"usr.common-props.color.ColorTypes"},"index":1,"children":[{"key":"node1563","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorHue","propertyComment":"A value from the collection of colors, i.e. hues","propertyValueVariants":[{"value":"primary.main"},{"value":"secondary.main"},{"value":"error.main"},{"value":"text.primary"},{"value":"text.secondary"},{"value":"text.disabled"},{"value":"text.hint"},{"value":"red"},{"value":"pink"},{"value":"purple"},{"value":"deepPurple"},{"value":"indigo"},{"value":"blue"},{"value":"lightBlue"},{"value":"cyan"},{"value":"teal"},{"value":"green"},{"value":"lightGreen"},{"value":"lime"},{"value":"yellow"},{"value":"amber"},{"value":"orange"},{"value":"deepOrange"},{"value":"brown"},{"value":"grey"},{"value":"blueGrey"}]},"index":0},{"key":"node1564","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorShade","propertyComment":"A value from the collection of colors shades","propertyValueVariants":[{"value":"50"},{"value":"100"},{"value":"200"},{"value":"300"},{"value":"400"},{"value":"500"},{"value":"600"},{"value":"700"},{"value":"800"},{"value":"900"},{"value":"A100"},{"value":"A200"},{"value":"A400"},{"value":"A700"}]},"index":1}]}]},{"key":"node1565","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"positions","propertyComment":"\n Shorthand utilities for quickly configuring the position of an element.\n","externalProperties":"usr.common-props.positions.PositionsTypes"},"index":5,"children":[{"key":"node1566","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"bottom","propertyComment":"\n The bottom CSS property participates in setting the vertical position of a positioned element.\n It has no effect on non-positioned elements.\n"},"index":0},{"key":"node1567","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"left","propertyComment":"\n The left CSS property participates in specifying the horizontal position of a positioned element.\n It has no effect on non-positioned elements.\n"},"index":1},{"key":"node1568","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"position","propertyComment":"\n The position CSS property sets how an element is positioned in a document.\n The top, right, bottom, and left properties determine the final location of positioned elements.\n","propertyValueVariants":[{"value":"static"},{"value":"relative"},{"value":"absolute"},{"value":"sticky"},{"value":"fixed"}]},"index":2},{"key":"node1569","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"right","propertyComment":"\n The right CSS property participates in specifying the horizontal position of a positioned element.\n It has no effect on non-positioned elements.\n"},"index":3},{"key":"node1570","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"top","propertyComment":"\n The top CSS property participates in specifying the vertical position of a positioned element.\n It has no effect on non-positioned elements.\n"},"index":4},{"key":"node1571","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"zIndex","propertyComment":"\n The z-index CSS property sets the z-order of a positioned element and its descendants or flex items.\n Overlapping elements with a larger z-index cover those with a smaller one.\n"},"index":5}]},{"key":"node1572","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"sizing","propertyComment":"\n Easily make an element as wide or as tall (relative to its parent) with the width and height utilities.\n","externalProperties":"usr.common-props.sizing.SizingTypes"},"index":6,"children":[{"key":"node1573","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"height","propertyComment":"\n The height CSS property specifies the height of an element.\n By default, the property defines the height of the content area.\n Use a string value to specify units: 50%\n"},"index":0},{"key":"node1574","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"maxHeight","propertyComment":"\n The max-height CSS property sets the maximum height of an element.\n It prevents the used value of the height property from becoming larger than the value specified for max-height.\n Use a string value to specify units: 50%\n"},"index":1},{"key":"node1575","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"maxWidth","propertyComment":"\n The max-width CSS property sets the maximum width of an element.\n It prevents the used value of the width property from becoming larger than the value specified by max-width.\n Use a string value to specify units: 50%\n"},"index":2},{"key":"node1576","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"minHeight","propertyComment":"\n The min-height CSS property sets the minimum height of an element.\n It prevents the used value of the height property from becoming smaller than the value specified for min-height.\n Use a string value to specify units: 50%\n"},"index":3},{"key":"node1577","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"minWidth","propertyComment":"\n The min-width CSS property sets the minimum width of an element.\n It prevents the used value of the width property from becoming smaller than the value specified for min-width.\n Use a string value to specify units: 50%\n"},"index":4},{"key":"node1578","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"width","propertyComment":"\n The width CSS property sets an element's width. By default, it sets the width of the content area.\n Use a string value to specify units: 50%\n"},"index":5}]},{"key":"node1579","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"spacing","propertyComment":"\n A range of shorthand responsive margin and padding utility classes to modify an element’s appearance.\n","externalProperties":"usr.common-props.spacing.SpacingTypes"},"index":7,"children":[{"key":"node1580","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"marginSpacing","propertyComment":"\n A group of the margin properties\n Depending on the input and the theme configuration, the following transformation is applied:\n (1) number - the property is multiplied by the theme spacing value,\n (2) number - the property is used as the array index in theme spacing array,\n (3) string - the property is passed as raw CSS value\n"},"index":0,"children":[{"key":"node1581","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"margin","propertyComment":"\n The property sets the margin area.\n"},"index":0},{"key":"node1582","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginBottom","propertyComment":"\n The property sets the margin area on the bottom of an element.\n"},"index":1},{"key":"node1583","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginLeft","propertyComment":"\n The property sets the margin area on the left side of an element.\n"},"index":2},{"key":"node1584","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginRight","propertyComment":"\n The property sets the margin area on the right side of an element.\n"},"index":3},{"key":"node1585","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginTop","propertyComment":"\n The property sets the margin area on the top of an element.\n"},"index":4},{"key":"node1586","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginX","propertyComment":"\n The property sets the margin area on the left and right sides of an element.\n"},"index":5},{"key":"node1587","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginY","propertyComment":"\n The property sets the margin area on the top and bottom sides of an element.\n"},"index":6}]},{"key":"node1588","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"paddingSpacing","propertyComment":"\n A group of the padding properties.\n Depending on the input and the theme configuration, the following transformation is applied:\n (1) number - the property is multiplied by the theme spacing value,\n (2) number - the property is used as the array index in theme spacing array,\n (3) string - the property is passed as raw CSS value\n"},"index":1,"children":[{"key":"node1589","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"padding","propertyComment":"\n The property sets the padding area on all four sides of an element.\n"},"index":0},{"key":"node1590","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingBottom","propertyComment":"\n The property sets the padding area on the bottom of an element.\n"},"index":1},{"key":"node1591","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingLeft","propertyComment":"\n The property sets the padding area on the left side of an element.\n"},"index":2},{"key":"node1592","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingRight","propertyComment":"\n The property sets the padding area on the right side of an element.\n"},"index":3},{"key":"node1593","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingTop","propertyComment":"\n The property sets the padding area on the top of an element.\n"},"index":4},{"key":"node1594","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingX","propertyComment":"\n The property sets the padding area on the left and right sides of an element.\n"},"index":5},{"key":"node1595","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingY","propertyComment":"\n The property sets the padding area on the top and bottom sides of an element.\n"},"index":6}]}]},{"key":"node1596","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"typography","propertyComment":"Text utilities to control alignment, wrapping, weight, and more.","externalProperties":"usr.common-props.typography.TypographyTypes"},"index":8,"children":[{"key":"node1597","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"fontSize","propertyComment":"\n The font-size CSS property sets the size of the font.\n"},"index":0},{"key":"node1598","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"fontStyle","propertyComment":"\n The font-style CSS property sets whether a font should be styled with a normal, italic.\n","propertyValueVariants":[{"value":"normal"},{"value":"italic"}]},"index":1},{"key":"node1599","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"fontWeight","propertyComment":"\n Sets the weight (or boldness) of the font according to the application settings.\n","propertyValueVariants":[{"value":"fontWeightLight"},{"value":"fontWeightRegular"},{"value":"fontWeightMedium"},{"value":"fontWeightBold"}]},"index":2},{"key":"node1600","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"letterSpacing","propertyComment":"\n The letter-spacing CSS property sets the spacing behavior between text characters.\n"},"index":3},{"key":"node1601","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"lineHeight","propertyComment":"\n The line-height CSS property sets the height of a line box.\n It's commonly used to set the distance between lines of text.\n On block-level elements, it specifies the minimum height of line boxes within the element.\n"},"index":4},{"key":"node1602","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"textAlign","propertyComment":"\n The text-align CSS property sets the horizontal alignment of a block element or table-cell box.\n","propertyValueVariants":[{"value":"start"},{"value":"end"},{"value":"left"},{"value":"right"},{"value":"center"},{"value":"justify"},{"value":"match-parent"}]},"index":5}]}]}]}]}]}]},{"key":"node1603","type":"COMPONENT_PROPERTY_BOOL_TYPE","props":{"propertyName":"doNotUseInFlows","propertyComment":"\n If true then the component's instance will not be allowed to use in flows,\n and you will not see the instance name in the pages instances list\n","propertyValue":true},"index":1},{"key":"node1604","type":"COMPONENT_PROPERTY_ARRAY_OF_TYPE","props":{"propertyName":"stylesByScreenSize","propertyComment":"\n A list of the styles groups applied to different screen sizes accordingly.\n Reload the entire page to see the changes.\n The changes are not applied immediately due to the JSS nature of the Box component.\n","defaultChildren":[{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{},"children":[{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"breakpoint","propertyComment":"\n A screen size breakpoint id.\n Find the real size value in the application settings in LivePreview.\n","propertyValueVariants":[{"value":"xs"},{"value":"sm"},{"value":"md"},{"value":"lg"},{"value":"xl"}],"propertyValue":"xs"}},{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"styling","propertyComment":"\n A groups of styles that are applied for the selected breakpoint.\n Reload the entire page to see the changes.\n The changes are not applied immediately due to the JSS nature of the Box component.\n"},"children":[{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"borders","propertyComment":"Sets style to element's border","externalProperties":"usr.common-props.borders.BordersTypes"},"children":[{"type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"border","propertyComment":"\n The border-width CSS property sets the width of an element's border.\n When the value is specified, it applies the same width to all four sides.\n","propertyValue":1}},{"type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"borderBottom","propertyComment":"The border-bottom-width CSS property sets the width of the bottom border of an element."}},{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"borderColor","propertyComment":"The border-color CSS property sets the color of an element's border.","externalProperties":"usr.common-props.color.ColorTypes"},"children":[{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorHue","propertyComment":"A value from the collection of colors, i.e. hues","propertyValueVariants":[{"value":"primary.main"},{"value":"secondary.main"},{"value":"error.main"},{"value":"text.primary"},{"value":"text.secondary"},{"value":"text.disabled"},{"value":"text.hint"},{"value":"red"},{"value":"pink"},{"value":"purple"},{"value":"deepPurple"},{"value":"indigo"},{"value":"blue"},{"value":"lightBlue"},{"value":"cyan"},{"value":"teal"},{"value":"green"},{"value":"lightGreen"},{"value":"lime"},{"value":"yellow"},{"value":"amber"},{"value":"orange"},{"value":"deepOrange"},{"value":"brown"},{"value":"grey"},{"value":"blueGrey"}]}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorShade","propertyComment":"A value from the collection of colors shades","propertyValueVariants":[{"value":"50"},{"value":"100"},{"value":"200"},{"value":"300"},{"value":"400"},{"value":"500"},{"value":"600"},{"value":"700"},{"value":"800"},{"value":"900"},{"value":"A100"},{"value":"A200"},{"value":"A400"},{"value":"A700"}]}}]},{"type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"borderLeft","propertyComment":"The border-left-width CSS property sets the width of the left border of an element."}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"borderRadius","propertyComment":"\n The border-radius CSS property rounds the corners of an element's outer border edge.\n You can set a single radius to make circular corners, or two radii to make elliptical corners.\n Use a string value of the border radius to set units: 10% 30% 50% 70%\n"}},{"type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"borderRight","propertyComment":"The border-right-width CSS property sets the width of the right border of an element."}},{"type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"borderTop","propertyComment":"The border-top-width CSS property sets the width of the top border of an element"}}]},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"boxShadow","propertyComment":"\n Shadow depth. It accepts values between 0 and 24 inclusive.\n","propertyValueVariants":[{"value":"0"},{"value":"1"},{"value":"2"},{"value":"3"},{"value":"4"},{"value":"5"},{"value":"6"},{"value":"7"},{"value":"8"},{"value":"9"},{"value":"10"},{"value":"11"},{"value":"12"},{"value":"13"},{"value":"14"},{"value":"15"},{"value":"16"},{"value":"17"},{"value":"18"},{"value":"19"},{"value":"20"},{"value":"21"},{"value":"22"},{"value":"23"},{"value":"24"}]}},{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"display","propertyComment":"Toggle the display value of components","externalProperties":"usr.common-props.display.DisplayTypes"},"children":[{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"display","propertyComment":"\n The display CSS property sets whether an element is treated as\n a block or inline element and the layout used for its children,\n such as flow layout, grid or flex.\n","propertyValueVariants":[{"value":"block"},{"value":"flex"},{"value":"flow"},{"value":"inline"}]}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"overflow","propertyComment":"\n The overflow shorthand CSS property sets what to do when\n an element's content is too big to fit in its block formatting context.\n","propertyValueVariants":[{"value":"auto"},{"value":"hidden"},{"value":"scroll"},{"value":"visible"}]}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"textOverflow","propertyComment":"\n The text-overflow CSS property sets how hidden overflow content is signaled to users.\n","propertyValueVariants":[{"value":"clip"},{"value":"ellipsis"}]}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"visibility","propertyComment":"\n The visibility CSS property shows or hides an element without changing the layout of a document.\n","propertyValueVariants":[{"value":"hidden"},{"value":"visible"},{"value":"collapse"}]}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"whiteSpace","propertyComment":"\n The white-space CSS property sets how white space inside an element is handled.\n","propertyValueVariants":[{"value":"normal"},{"value":"nowrap"},{"value":"pre"},{"value":"pre-wrap"},{"value":"pre-line"},{"value":"break-spaces"}]}}]},{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"flexbox","propertyComment":"\n Manages the layout, alignment, and sizing of grid columns, navigation, components,\n and more with a full suite of responsive Flexbox utilities.\n","externalProperties":"usr.common-props.flexbox.FlexboxTypes"},"children":[{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"alignContent","propertyComment":"\n The CSS align-content property sets the distribution of space between\n and around content items along a flexbox's cross-axis.\n","propertyValueVariants":[{"value":"center"},{"value":"start"},{"value":"end"},{"value":"flex-start"},{"value":"flex-end"},{"value":"baseline"},{"value":"space-between"},{"value":"space-around"},{"value":"space-evenly"},{"value":"normal"},{"value":"stretch"}]}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"alignItems","propertyComment":"\n The CSS align-items property sets the align-self value on all direct children as a group.\n","propertyValueVariants":[{"value":"center"},{"value":"start"},{"value":"end"},{"value":"flex-start"},{"value":"flex-end"},{"value":"baseline"},{"value":"normal"},{"value":"stretch"}]}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"alignSelf","propertyComment":"\n The align-self CSS property overrides a grid or flex item's align-items value.\n In Flexbox, it aligns the item on the cross axis.\n","propertyValueVariants":[{"value":"auto"},{"value":"center"},{"value":"start"},{"value":"end"},{"value":"flex-start"},{"value":"flex-end"},{"value":"baseline"},{"value":"normal"},{"value":"stretch"}]}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"flex","propertyComment":"\n The flex CSS property sets how a flex item will grow or shrink to fit the space available in its flex container.\n It is a shorthand for flex-grow, flex-shrink, and flex-basis.\n"}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"flexDirection","propertyComment":"\n The flex-direction CSS property sets how flex items are placed\n in the flex container defining the main axis and the direction (normal or reversed).\n","propertyValueVariants":[{"value":"row"},{"value":"row-reverse"},{"value":"column"},{"value":"column-reverse"}]}},{"type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"flexGrow","propertyComment":"\n The flex-grow CSS property sets the flex grow factor of a flex item main size.\n It specifies how much of the remaining space in the flex container should be assigned to the item\n (the flex grow factor).\n"}},{"type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"flexShrink","propertyComment":"\n The flex-shrink CSS property sets the flex shrink factor of a flex item.\n If the size of all flex items is larger than the flex container,\n items shrink to fit according to flex-shrink.\n"}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"flexWrap","propertyComment":"\n The flex-wrap CSS property sets whether flex items are forced onto one line or can wrap onto multiple lines.\n","propertyValueVariants":[{"value":"nowrap"},{"value":"wrap"},{"value":"wrap-reverse"}]}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"justifyContent","propertyComment":"\n The CSS justify-content property defines how the browser distributes space between and around content\n items along the main-axis of a flex container, and the inline axis of a container.\n","propertyValueVariants":[{"value":"center"},{"value":"start"},{"value":"end"},{"value":"flex-start"},{"value":"flex-end"},{"value":"left"},{"value":"right"},{"value":"normal"},{"value":"space-between"},{"value":"space-around"},{"value":"space-evenly"},{"value":"stretch"}]}},{"type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"order","propertyComment":"\n The order CSS property sets the order to lay out an item in a flex or grid container.\n Items in a container are sorted by ascending order value and then by their source code order.\n"}}]},{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"palette","propertyComment":"Sets the color of the component"},"children":[{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"backgroundColor","externalProperties":"usr.common-props.color.ColorTypes"},"children":[{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorHue","propertyComment":"A value from the collection of colors, i.e. hues","propertyValueVariants":[{"value":"primary.main"},{"value":"secondary.main"},{"value":"error.main"},{"value":"text.primary"},{"value":"text.secondary"},{"value":"text.disabled"},{"value":"text.hint"},{"value":"red"},{"value":"pink"},{"value":"purple"},{"value":"deepPurple"},{"value":"indigo"},{"value":"blue"},{"value":"lightBlue"},{"value":"cyan"},{"value":"teal"},{"value":"green"},{"value":"lightGreen"},{"value":"lime"},{"value":"yellow"},{"value":"amber"},{"value":"orange"},{"value":"deepOrange"},{"value":"brown"},{"value":"grey"},{"value":"blueGrey"}]}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorShade","propertyComment":"A value from the collection of colors shades","propertyValueVariants":[{"value":"50"},{"value":"100"},{"value":"200"},{"value":"300"},{"value":"400"},{"value":"500"},{"value":"600"},{"value":"700"},{"value":"800"},{"value":"900"},{"value":"A100"},{"value":"A200"},{"value":"A400"},{"value":"A700"}]}}]},{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"color","externalProperties":"usr.common-props.color.ColorTypes"},"children":[{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorHue","propertyComment":"A value from the collection of colors, i.e. hues","propertyValueVariants":[{"value":"primary.main"},{"value":"secondary.main"},{"value":"error.main"},{"value":"text.primary"},{"value":"text.secondary"},{"value":"text.disabled"},{"value":"text.hint"},{"value":"red"},{"value":"pink"},{"value":"purple"},{"value":"deepPurple"},{"value":"indigo"},{"value":"blue"},{"value":"lightBlue"},{"value":"cyan"},{"value":"teal"},{"value":"green"},{"value":"lightGreen"},{"value":"lime"},{"value":"yellow"},{"value":"amber"},{"value":"orange"},{"value":"deepOrange"},{"value":"brown"},{"value":"grey"},{"value":"blueGrey"}]}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorShade","propertyComment":"A value from the collection of colors shades","propertyValueVariants":[{"value":"50"},{"value":"100"},{"value":"200"},{"value":"300"},{"value":"400"},{"value":"500"},{"value":"600"},{"value":"700"},{"value":"800"},{"value":"900"},{"value":"A100"},{"value":"A200"},{"value":"A400"},{"value":"A700"}]}}]}]},{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"positions","propertyComment":"\n Shorthand utilities for quickly configuring the position of an element.\n","externalProperties":"usr.common-props.positions.PositionsTypes"},"children":[{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"bottom","propertyComment":"\n The bottom CSS property participates in setting the vertical position of a positioned element.\n It has no effect on non-positioned elements.\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"left","propertyComment":"\n The left CSS property participates in specifying the horizontal position of a positioned element.\n It has no effect on non-positioned elements.\n"}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"position","propertyComment":"\n The position CSS property sets how an element is positioned in a document.\n The top, right, bottom, and left properties determine the final location of positioned elements.\n","propertyValueVariants":[{"value":"static"},{"value":"relative"},{"value":"absolute"},{"value":"sticky"},{"value":"fixed"}]}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"right","propertyComment":"\n The right CSS property participates in specifying the horizontal position of a positioned element.\n It has no effect on non-positioned elements.\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"top","propertyComment":"\n The top CSS property participates in specifying the vertical position of a positioned element.\n It has no effect on non-positioned elements.\n"}},{"type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"zIndex","propertyComment":"\n The z-index CSS property sets the z-order of a positioned element and its descendants or flex items.\n Overlapping elements with a larger z-index cover those with a smaller one.\n"}}]},{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"sizing","propertyComment":"\n Easily make an element as wide or as tall (relative to its parent) with the width and height utilities.\n","externalProperties":"usr.common-props.sizing.SizingTypes"},"children":[{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"height","propertyComment":"\n The height CSS property specifies the height of an element.\n By default, the property defines the height of the content area.\n Use a string value to specify units: 50%\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"maxHeight","propertyComment":"\n The max-height CSS property sets the maximum height of an element.\n It prevents the used value of the height property from becoming larger than the value specified for max-height.\n Use a string value to specify units: 50%\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"maxWidth","propertyComment":"\n The max-width CSS property sets the maximum width of an element.\n It prevents the used value of the width property from becoming larger than the value specified by max-width.\n Use a string value to specify units: 50%\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"minHeight","propertyComment":"\n The min-height CSS property sets the minimum height of an element.\n It prevents the used value of the height property from becoming smaller than the value specified for min-height.\n Use a string value to specify units: 50%\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"minWidth","propertyComment":"\n The min-width CSS property sets the minimum width of an element.\n It prevents the used value of the width property from becoming smaller than the value specified for min-width.\n Use a string value to specify units: 50%\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"width","propertyComment":"\n The width CSS property sets an element's width. By default, it sets the width of the content area.\n Use a string value to specify units: 50%\n"}}]},{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"spacing","propertyComment":"\n A range of shorthand responsive margin and padding utility classes to modify an element’s appearance.\n","externalProperties":"usr.common-props.spacing.SpacingTypes"},"children":[{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"marginSpacing","propertyComment":"\n A group of the margin properties\n Depending on the input and the theme configuration, the following transformation is applied:\n (1) number - the property is multiplied by the theme spacing value,\n (2) number - the property is used as the array index in theme spacing array,\n (3) string - the property is passed as raw CSS value\n"},"children":[{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"margin","propertyComment":"\n The property sets the margin area.\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginBottom","propertyComment":"\n The property sets the margin area on the bottom of an element.\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginLeft","propertyComment":"\n The property sets the margin area on the left side of an element.\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginRight","propertyComment":"\n The property sets the margin area on the right side of an element.\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginTop","propertyComment":"\n The property sets the margin area on the top of an element.\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginX","propertyComment":"\n The property sets the margin area on the left and right sides of an element.\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginY","propertyComment":"\n The property sets the margin area on the top and bottom sides of an element.\n"}}]},{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"paddingSpacing","propertyComment":"\n A group of the padding properties.\n Depending on the input and the theme configuration, the following transformation is applied:\n (1) number - the property is multiplied by the theme spacing value,\n (2) number - the property is used as the array index in theme spacing array,\n (3) string - the property is passed as raw CSS value\n"},"children":[{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"padding","propertyComment":"\n The property sets the padding area on all four sides of an element.\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingBottom","propertyComment":"\n The property sets the padding area on the bottom of an element.\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingLeft","propertyComment":"\n The property sets the padding area on the left side of an element.\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingRight","propertyComment":"\n The property sets the padding area on the right side of an element.\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingTop","propertyComment":"\n The property sets the padding area on the top of an element.\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingX","propertyComment":"\n The property sets the padding area on the left and right sides of an element.\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingY","propertyComment":"\n The property sets the padding area on the top and bottom sides of an element.\n"}}]}]},{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"typography","propertyComment":"Text utilities to control alignment, wrapping, weight, and more.","externalProperties":"usr.common-props.typography.TypographyTypes"},"children":[{"type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"fontSize","propertyComment":"\n The font-size CSS property sets the size of the font.\n"}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"fontStyle","propertyComment":"\n The font-style CSS property sets whether a font should be styled with a normal, italic.\n","propertyValueVariants":[{"value":"normal"},{"value":"italic"}]}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"fontWeight","propertyComment":"\n Sets the weight (or boldness) of the font according to the application settings.\n","propertyValueVariants":[{"value":"fontWeightLight"},{"value":"fontWeightRegular"},{"value":"fontWeightMedium"},{"value":"fontWeightBold"}]}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"letterSpacing","propertyComment":"\n The letter-spacing CSS property sets the spacing behavior between text characters.\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"lineHeight","propertyComment":"\n The line-height CSS property sets the height of a line box.\n It's commonly used to set the distance between lines of text.\n On block-level elements, it specifies the minimum height of line boxes within the element.\n"}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"textAlign","propertyComment":"\n The text-align CSS property sets the horizontal alignment of a block element or table-cell box.\n","propertyValueVariants":[{"value":"start"},{"value":"end"},{"value":"left"},{"value":"right"},{"value":"center"},{"value":"justify"},{"value":"match-parent"}]}}]}]}]}]},"index":2,"children":[{"key":"node1605","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{},"index":0,"children":[{"key":"node1606","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"breakpoint","propertyComment":"\n A screen size breakpoint id.\n Find the real size value in the application settings in LivePreview.\n","propertyValueVariants":[{"value":"xs"},{"value":"sm"},{"value":"md"},{"value":"lg"},{"value":"xl"}],"propertyValue":"xs"},"index":0},{"key":"node1607","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"styling","propertyComment":"\n A groups of styles that are applied for the selected breakpoint.\n Reload the entire page to see the changes.\n The changes are not applied immediately due to the JSS nature of the Box component.\n"},"index":1,"children":[{"key":"node1608","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"borders","propertyComment":"Sets style to element's border","externalProperties":"usr.common-props.borders.BordersTypes"},"index":0,"children":[{"key":"node1609","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"border","propertyComment":"\n The border-width CSS property sets the width of an element's border.\n When the value is specified, it applies the same width to all four sides.\n"},"index":0},{"key":"node1610","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"borderBottom","propertyComment":"The border-bottom-width CSS property sets the width of the bottom border of an element."},"index":1},{"key":"node1611","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"borderColor","propertyComment":"The border-color CSS property sets the color of an element's border.","externalProperties":"usr.common-props.color.ColorTypes"},"index":2,"children":[{"key":"node1612","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorHue","propertyComment":"A value from the collection of colors, i.e. hues","propertyValueVariants":[{"value":"primary.main"},{"value":"secondary.main"},{"value":"error.main"},{"value":"text.primary"},{"value":"text.secondary"},{"value":"text.disabled"},{"value":"text.hint"},{"value":"red"},{"value":"pink"},{"value":"purple"},{"value":"deepPurple"},{"value":"indigo"},{"value":"blue"},{"value":"lightBlue"},{"value":"cyan"},{"value":"teal"},{"value":"green"},{"value":"lightGreen"},{"value":"lime"},{"value":"yellow"},{"value":"amber"},{"value":"orange"},{"value":"deepOrange"},{"value":"brown"},{"value":"grey"},{"value":"blueGrey"}]},"index":0},{"key":"node1613","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorShade","propertyComment":"A value from the collection of colors shades","propertyValueVariants":[{"value":"50"},{"value":"100"},{"value":"200"},{"value":"300"},{"value":"400"},{"value":"500"},{"value":"600"},{"value":"700"},{"value":"800"},{"value":"900"},{"value":"A100"},{"value":"A200"},{"value":"A400"},{"value":"A700"}]},"index":1}]},{"key":"node1614","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"borderLeft","propertyComment":"The border-left-width CSS property sets the width of the left border of an element."},"index":3},{"key":"node1615","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"borderRadius","propertyComment":"\n The border-radius CSS property rounds the corners of an element's outer border edge.\n You can set a single radius to make circular corners, or two radii to make elliptical corners.\n Use a string value of the border radius to set units: 10% 30% 50% 70%\n"},"index":4},{"key":"node1616","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"borderRight","propertyComment":"The border-right-width CSS property sets the width of the right border of an element."},"index":5},{"key":"node1617","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"borderTop","propertyComment":"The border-top-width CSS property sets the width of the top border of an element"},"index":6}]},{"key":"node1618","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"boxShadow","propertyComment":"\n Shadow depth. It accepts values between 0 and 24 inclusive.\n","propertyValueVariants":[{"value":"0"},{"value":"1"},{"value":"2"},{"value":"3"},{"value":"4"},{"value":"5"},{"value":"6"},{"value":"7"},{"value":"8"},{"value":"9"},{"value":"10"},{"value":"11"},{"value":"12"},{"value":"13"},{"value":"14"},{"value":"15"},{"value":"16"},{"value":"17"},{"value":"18"},{"value":"19"},{"value":"20"},{"value":"21"},{"value":"22"},{"value":"23"},{"value":"24"}]},"index":1},{"key":"node1619","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"display","externalProperties":"usr.common-props.display.DisplayTypes","propertyComment":"Toggle the display value of components"},"index":2,"children":[{"key":"node1620","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"display","propertyComment":"\n The display CSS property sets whether an element is treated as\n a block or inline element and the layout used for its children,\n such as flow layout, grid or flex.\n","propertyValueVariants":[{"value":"block"},{"value":"flex"},{"value":"flow"},{"value":"inline"}],"propertyValue":"flex"},"index":0},{"key":"node1621","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"overflow","propertyComment":"\n The overflow shorthand CSS property sets what to do when\n an element's content is too big to fit in its block formatting context.\n","propertyValueVariants":[{"value":"auto"},{"value":"hidden"},{"value":"scroll"},{"value":"visible"}]},"index":1},{"key":"node1622","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"textOverflow","propertyComment":"\n The text-overflow CSS property sets how hidden overflow content is signaled to users.\n","propertyValueVariants":[{"value":"clip"},{"value":"ellipsis"}]},"index":2},{"key":"node1623","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"visibility","propertyComment":"\n The visibility CSS property shows or hides an element without changing the layout of a document.\n","propertyValueVariants":[{"value":"hidden"},{"value":"visible"},{"value":"collapse"}]},"index":3},{"key":"node1624","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"whiteSpace","propertyComment":"\n The white-space CSS property sets how white space inside an element is handled.\n","propertyValueVariants":[{"value":"normal"},{"value":"nowrap"},{"value":"pre"},{"value":"pre-wrap"},{"value":"pre-line"},{"value":"break-spaces"}]},"index":4}]},{"key":"node1625","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"flexbox","propertyComment":"\n Manages the layout, alignment, and sizing of grid columns, navigation, components,\n and more with a full suite of responsive Flexbox utilities.\n","externalProperties":"usr.common-props.flexbox.FlexboxTypes"},"index":3,"children":[{"key":"node1626","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"alignContent","propertyComment":"\n The CSS align-content property sets the distribution of space between\n and around content items along a flexbox's cross-axis.\n","propertyValueVariants":[{"value":"center"},{"value":"start"},{"value":"end"},{"value":"flex-start"},{"value":"flex-end"},{"value":"baseline"},{"value":"space-between"},{"value":"space-around"},{"value":"space-evenly"},{"value":"normal"},{"value":"stretch"}]},"index":0},{"key":"node1627","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"alignItems","propertyComment":"\n The CSS align-items property sets the align-self value on all direct children as a group.\n","propertyValueVariants":[{"value":"center"},{"value":"start"},{"value":"end"},{"value":"flex-start"},{"value":"flex-end"},{"value":"baseline"},{"value":"normal"},{"value":"stretch"}]},"index":1},{"key":"node1628","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"alignSelf","propertyComment":"\n The align-self CSS property overrides a grid or flex item's align-items value.\n In Flexbox, it aligns the item on the cross axis.\n","propertyValueVariants":[{"value":"auto"},{"value":"center"},{"value":"start"},{"value":"end"},{"value":"flex-start"},{"value":"flex-end"},{"value":"baseline"},{"value":"normal"},{"value":"stretch"}]},"index":2},{"key":"node1629","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"flex","propertyComment":"\n The flex CSS property sets how a flex item will grow or shrink to fit the space available in its flex container.\n It is a shorthand for flex-grow, flex-shrink, and flex-basis.\n"},"index":3},{"key":"node1630","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"flexDirection","propertyComment":"\n The flex-direction CSS property sets how flex items are placed\n in the flex container defining the main axis and the direction (normal or reversed).\n","propertyValueVariants":[{"value":"row"},{"value":"row-reverse"},{"value":"column"},{"value":"column-reverse"}],"propertyValue":"column"},"index":4},{"key":"node1631","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"flexGrow","propertyComment":"\n The flex-grow CSS property sets the flex grow factor of a flex item main size.\n It specifies how much of the remaining space in the flex container should be assigned to the item\n (the flex grow factor).\n"},"index":5},{"key":"node1632","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"flexShrink","propertyComment":"\n The flex-shrink CSS property sets the flex shrink factor of a flex item.\n If the size of all flex items is larger than the flex container,\n items shrink to fit according to flex-shrink.\n"},"index":6},{"key":"node1633","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"flexWrap","propertyComment":"\n The flex-wrap CSS property sets whether flex items are forced onto one line or can wrap onto multiple lines.\n","propertyValueVariants":[{"value":"nowrap"},{"value":"wrap"},{"value":"wrap-reverse"}]},"index":7},{"key":"node1634","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"justifyContent","propertyComment":"\n The CSS justify-content property defines how the browser distributes space between and around content\n items along the main-axis of a flex container, and the inline axis of a container.\n","propertyValue":"space-between","propertyValueVariants":[{"value":"center"},{"value":"start"},{"value":"end"},{"value":"flex-start"},{"value":"flex-end"},{"value":"left"},{"value":"right"},{"value":"normal"},{"value":"space-between"},{"value":"space-around"},{"value":"space-evenly"},{"value":"stretch"}]},"index":8},{"key":"node1635","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"order","propertyComment":"\n The order CSS property sets the order to lay out an item in a flex or grid container.\n Items in a container are sorted by ascending order value and then by their source code order.\n"},"index":9}]},{"key":"node1636","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"palette","propertyComment":"Sets the color of the component"},"index":4,"children":[{"key":"node1637","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"backgroundColor","externalProperties":"usr.common-props.color.ColorTypes"},"index":0,"children":[{"key":"node1638","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorHue","propertyComment":"A value from the collection of colors, i.e. hues","propertyValueVariants":[{"value":"primary.main"},{"value":"secondary.main"},{"value":"error.main"},{"value":"text.primary"},{"value":"text.secondary"},{"value":"text.disabled"},{"value":"text.hint"},{"value":"red"},{"value":"pink"},{"value":"purple"},{"value":"deepPurple"},{"value":"indigo"},{"value":"blue"},{"value":"lightBlue"},{"value":"cyan"},{"value":"teal"},{"value":"green"},{"value":"lightGreen"},{"value":"lime"},{"value":"yellow"},{"value":"amber"},{"value":"orange"},{"value":"deepOrange"},{"value":"brown"},{"value":"grey"},{"value":"blueGrey"}]},"index":0},{"key":"node1639","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorShade","propertyComment":"A value from the collection of colors shades","propertyValueVariants":[{"value":"50"},{"value":"100"},{"value":"200"},{"value":"300"},{"value":"400"},{"value":"500"},{"value":"600"},{"value":"700"},{"value":"800"},{"value":"900"},{"value":"A100"},{"value":"A200"},{"value":"A400"},{"value":"A700"}]},"index":1}]},{"key":"node1640","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"color","externalProperties":"usr.common-props.color.ColorTypes"},"index":1,"children":[{"key":"node1641","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorHue","propertyComment":"A value from the collection of colors, i.e. hues","propertyValueVariants":[{"value":"primary.main"},{"value":"secondary.main"},{"value":"error.main"},{"value":"text.primary"},{"value":"text.secondary"},{"value":"text.disabled"},{"value":"text.hint"},{"value":"red"},{"value":"pink"},{"value":"purple"},{"value":"deepPurple"},{"value":"indigo"},{"value":"blue"},{"value":"lightBlue"},{"value":"cyan"},{"value":"teal"},{"value":"green"},{"value":"lightGreen"},{"value":"lime"},{"value":"yellow"},{"value":"amber"},{"value":"orange"},{"value":"deepOrange"},{"value":"brown"},{"value":"grey"},{"value":"blueGrey"}]},"index":0},{"key":"node1642","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorShade","propertyComment":"A value from the collection of colors shades","propertyValueVariants":[{"value":"50"},{"value":"100"},{"value":"200"},{"value":"300"},{"value":"400"},{"value":"500"},{"value":"600"},{"value":"700"},{"value":"800"},{"value":"900"},{"value":"A100"},{"value":"A200"},{"value":"A400"},{"value":"A700"}]},"index":1}]}]},{"key":"node1643","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"positions","propertyComment":"\n Shorthand utilities for quickly configuring the position of an element.\n","externalProperties":"usr.common-props.positions.PositionsTypes"},"index":5,"children":[{"key":"node1644","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"bottom","propertyComment":"\n The bottom CSS property participates in setting the vertical position of a positioned element.\n It has no effect on non-positioned elements.\n"},"index":0},{"key":"node1645","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"left","propertyComment":"\n The left CSS property participates in specifying the horizontal position of a positioned element.\n It has no effect on non-positioned elements.\n"},"index":1},{"key":"node1646","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"position","propertyComment":"\n The position CSS property sets how an element is positioned in a document.\n The top, right, bottom, and left properties determine the final location of positioned elements.\n","propertyValueVariants":[{"value":"static"},{"value":"relative"},{"value":"absolute"},{"value":"sticky"},{"value":"fixed"}]},"index":2},{"key":"node1647","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"right","propertyComment":"\n The right CSS property participates in specifying the horizontal position of a positioned element.\n It has no effect on non-positioned elements.\n"},"index":3},{"key":"node1648","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"top","propertyComment":"\n The top CSS property participates in specifying the vertical position of a positioned element.\n It has no effect on non-positioned elements.\n"},"index":4},{"key":"node1649","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"zIndex","propertyComment":"\n The z-index CSS property sets the z-order of a positioned element and its descendants or flex items.\n Overlapping elements with a larger z-index cover those with a smaller one.\n"},"index":5}]},{"key":"node1650","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"sizing","propertyComment":"\n Easily make an element as wide or as tall (relative to its parent) with the width and height utilities.\n","externalProperties":"usr.common-props.sizing.SizingTypes"},"index":6,"children":[{"key":"node1651","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"height","propertyComment":"\n The height CSS property specifies the height of an element.\n By default, the property defines the height of the content area.\n Use a string value to specify units: 50%\n"},"index":0},{"key":"node1652","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"maxHeight","propertyComment":"\n The max-height CSS property sets the maximum height of an element.\n It prevents the used value of the height property from becoming larger than the value specified for max-height.\n Use a string value to specify units: 50%\n"},"index":1},{"key":"node1653","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"maxWidth","propertyComment":"\n The max-width CSS property sets the maximum width of an element.\n It prevents the used value of the width property from becoming larger than the value specified by max-width.\n Use a string value to specify units: 50%\n"},"index":2},{"key":"node1654","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"minHeight","propertyComment":"\n The min-height CSS property sets the minimum height of an element.\n It prevents the used value of the height property from becoming smaller than the value specified for min-height.\n Use a string value to specify units: 50%\n"},"index":3},{"key":"node1655","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"minWidth","propertyComment":"\n The min-width CSS property sets the minimum width of an element.\n It prevents the used value of the width property from becoming smaller than the value specified for min-width.\n Use a string value to specify units: 50%\n"},"index":4},{"key":"node1656","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"width","propertyComment":"\n The width CSS property sets an element's width. By default, it sets the width of the content area.\n Use a string value to specify units: 50%\n"},"index":5}]},{"key":"node1657","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"spacing","propertyComment":"\n A range of shorthand responsive margin and padding utility classes to modify an element’s appearance.\n","externalProperties":"usr.common-props.spacing.SpacingTypes"},"index":7,"children":[{"key":"node1658","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"marginSpacing","propertyComment":"\n A group of the margin properties\n Depending on the input and the theme configuration, the following transformation is applied:\n (1) number - the property is multiplied by the theme spacing value,\n (2) number - the property is used as the array index in theme spacing array,\n (3) string - the property is passed as raw CSS value\n"},"index":0,"children":[{"key":"node1659","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"margin","propertyComment":"\n The property sets the margin area.\n"},"index":0},{"key":"node1660","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginBottom","propertyComment":"\n The property sets the margin area on the bottom of an element.\n"},"index":1},{"key":"node1661","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginLeft","propertyComment":"\n The property sets the margin area on the left side of an element.\n"},"index":2},{"key":"node1662","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginRight","propertyComment":"\n The property sets the margin area on the right side of an element.\n"},"index":3},{"key":"node1663","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginTop","propertyComment":"\n The property sets the margin area on the top of an element.\n"},"index":4},{"key":"node1664","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginX","propertyComment":"\n The property sets the margin area on the left and right sides of an element.\n"},"index":5},{"key":"node1665","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginY","propertyComment":"\n The property sets the margin area on the top and bottom sides of an element.\n"},"index":6}]},{"key":"node1666","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"paddingSpacing","propertyComment":"\n A group of the padding properties.\n Depending on the input and the theme configuration, the following transformation is applied:\n (1) number - the property is multiplied by the theme spacing value,\n (2) number - the property is used as the array index in theme spacing array,\n (3) string - the property is passed as raw CSS value\n"},"index":1,"children":[{"key":"node1667","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"padding","propertyComment":"\n The property sets the padding area on all four sides of an element.\n"},"index":0},{"key":"node1668","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingBottom","propertyComment":"\n The property sets the padding area on the bottom of an element.\n"},"index":1},{"key":"node1669","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingLeft","propertyComment":"\n The property sets the padding area on the left side of an element.\n"},"index":2},{"key":"node1670","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingRight","propertyComment":"\n The property sets the padding area on the right side of an element.\n"},"index":3},{"key":"node1671","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingTop","propertyComment":"\n The property sets the padding area on the top of an element.\n"},"index":4},{"key":"node1672","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingX","propertyComment":"\n The property sets the padding area on the left and right sides of an element.\n"},"index":5},{"key":"node1673","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingY","propertyComment":"\n The property sets the padding area on the top and bottom sides of an element.\n"},"index":6}]}]},{"key":"node1674","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"typography","propertyComment":"Text utilities to control alignment, wrapping, weight, and more.","externalProperties":"usr.common-props.typography.TypographyTypes"},"index":8,"children":[{"key":"node1675","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"fontSize","propertyComment":"\n The font-size CSS property sets the size of the font.\n"},"index":0},{"key":"node1676","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"fontStyle","propertyComment":"\n The font-style CSS property sets whether a font should be styled with a normal, italic.\n","propertyValueVariants":[{"value":"normal"},{"value":"italic"}]},"index":1},{"key":"node1677","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"fontWeight","propertyComment":"\n Sets the weight (or boldness) of the font according to the application settings.\n","propertyValueVariants":[{"value":"fontWeightLight"},{"value":"fontWeightRegular"},{"value":"fontWeightMedium"},{"value":"fontWeightBold"}]},"index":2},{"key":"node1678","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"letterSpacing","propertyComment":"\n The letter-spacing CSS property sets the spacing behavior between text characters.\n"},"index":3},{"key":"node1679","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"lineHeight","propertyComment":"\n The line-height CSS property sets the height of a line box.\n It's commonly used to set the distance between lines of text.\n On block-level elements, it specifies the minimum height of line boxes within the element.\n"},"index":4},{"key":"node1680","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"textAlign","propertyComment":"\n The text-align CSS property sets the horizontal alignment of a block element or table-cell box.\n","propertyValueVariants":[{"value":"start"},{"value":"end"},{"value":"left"},{"value":"right"},{"value":"center"},{"value":"justify"},{"value":"match-parent"}]},"index":5}]}]}]}]}]}}