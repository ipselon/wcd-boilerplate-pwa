{"templateName":"box-probe-1","componentsTree":{"key":"node2","type":"PAGE_COMPONENT_TYPE","props":{"componentName":"usr.in-page-components.layouts.Box","componentInstance":"box"},"index":0,"children":[{"key":"node3","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"borders","propertyComment":"Sets style to element's border","externalProperties":"usr.common-props.borders.BordersTypes"},"index":0,"children":[{"key":"node4","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"border","propertyComment":"\n The border-width CSS property sets the width of an element's border.\n When the value is specified, it applies the same width to all four sides.\n"},"index":0},{"key":"node5","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"borderBottom","propertyComment":"The border-bottom-width CSS property sets the width of the bottom border of an element."},"index":1},{"key":"node6","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"borderColor","propertyComment":"The border-color CSS property sets the color of an element's border.","externalProperties":"usr.common-props.color.ColorTypes"},"index":2,"children":[{"key":"node7","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorHue","propertyComment":"A value from the collection of colors, i.e. hues","propertyValueVariants":[{"value":"primary.main"},{"value":"secondary.main"},{"value":"error.main"},{"value":"text.primary"},{"value":"text.secondary"},{"value":"text.disabled"},{"value":"text.hint"},{"value":"red"},{"value":"pink"},{"value":"purple"},{"value":"deepPurple"},{"value":"indigo"},{"value":"blue"},{"value":"lightBlue"},{"value":"cyan"},{"value":"teal"},{"value":"green"},{"value":"lightGreen"},{"value":"lime"},{"value":"yellow"},{"value":"amber"},{"value":"orange"},{"value":"deepOrange"},{"value":"brown"},{"value":"grey"},{"value":"blueGrey"}]},"index":0},{"key":"node8","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorShade","propertyComment":"A value from the collection of colors shades","propertyValueVariants":[{"value":"50"},{"value":"100"},{"value":"200"},{"value":"300"},{"value":"400"},{"value":"500"},{"value":"600"},{"value":"700"},{"value":"800"},{"value":"900"},{"value":"A100"},{"value":"A200"},{"value":"A400"},{"value":"A700"}]},"index":1}]},{"key":"node9","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"borderLeft","propertyComment":"The border-left-width CSS property sets the width of the left border of an element."},"index":3},{"key":"node10","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"borderRadius","propertyComment":"\n The border-radius CSS property rounds the corners of an element's outer border edge.\n You can set a single radius to make circular corners, or two radii to make elliptical corners.\n Use a string value of the border radius to set units: 10% 30% 50% 70%\n"},"index":4},{"key":"node11","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"borderRight","propertyComment":"The border-right-width CSS property sets the width of the right border of an element."},"index":5},{"key":"node12","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"borderTop","propertyComment":"The border-top-width CSS property sets the width of the top border of an element"},"index":6}]},{"key":"node13","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"boxShadow","propertyComment":"\n Shadow depth. It accepts values between 0 and 24 inclusive.\n","propertyValueVariants":[{"value":"0"},{"value":"1"},{"value":"2"},{"value":"3"},{"value":"4"},{"value":"5"},{"value":"6"},{"value":"7"},{"value":"8"},{"value":"9"},{"value":"10"},{"value":"11"},{"value":"12"},{"value":"13"},{"value":"14"},{"value":"15"},{"value":"16"},{"value":"17"},{"value":"18"},{"value":"19"},{"value":"20"},{"value":"21"},{"value":"22"},{"value":"23"},{"value":"24"}]},"index":1},{"key":"node14","type":"COMPONENT_PROPERTY_ARRAY_OF_TYPE","props":{"propertyName":"content","propertyComment":"A list of the components that will be placed inside the Box component. Increase the array to have more items.","defaultChildren":[{"type":"COMPONENT_PROPERTY_ELEMENT_TYPE","props":{"componentName":"__PlaceHolder"}}]},"index":2,"children":[{"key":"node224","type":"PAGE_COMPONENT_TYPE","props":{"componentName":"usr.in-page-components.layouts.Box","componentInstance":"box"},"index":0,"children":[{"key":"node225","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"borders","propertyComment":"Sets style to element's border","externalProperties":"usr.common-props.borders.BordersTypes"},"index":0,"children":[{"key":"node226","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"border","propertyComment":"\n The border-width CSS property sets the width of an element's border.\n When the value is specified, it applies the same width to all four sides.\n"},"index":0},{"key":"node227","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"borderBottom","propertyComment":"The border-bottom-width CSS property sets the width of the bottom border of an element."},"index":1},{"key":"node228","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"borderColor","propertyComment":"The border-color CSS property sets the color of an element's border.","externalProperties":"usr.common-props.color.ColorTypes"},"index":2,"children":[{"key":"node229","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorHue","propertyComment":"A value from the collection of colors, i.e. hues","propertyValueVariants":[{"value":"primary.main"},{"value":"secondary.main"},{"value":"error.main"},{"value":"text.primary"},{"value":"text.secondary"},{"value":"text.disabled"},{"value":"text.hint"},{"value":"red"},{"value":"pink"},{"value":"purple"},{"value":"deepPurple"},{"value":"indigo"},{"value":"blue"},{"value":"lightBlue"},{"value":"cyan"},{"value":"teal"},{"value":"green"},{"value":"lightGreen"},{"value":"lime"},{"value":"yellow"},{"value":"amber"},{"value":"orange"},{"value":"deepOrange"},{"value":"brown"},{"value":"grey"},{"value":"blueGrey"}]},"index":0},{"key":"node230","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorShade","propertyComment":"A value from the collection of colors shades","propertyValueVariants":[{"value":"50"},{"value":"100"},{"value":"200"},{"value":"300"},{"value":"400"},{"value":"500"},{"value":"600"},{"value":"700"},{"value":"800"},{"value":"900"},{"value":"A100"},{"value":"A200"},{"value":"A400"},{"value":"A700"}]},"index":1}]},{"key":"node231","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"borderLeft","propertyComment":"The border-left-width CSS property sets the width of the left border of an element."},"index":3},{"key":"node232","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"borderRadius","propertyComment":"\n The border-radius CSS property rounds the corners of an element's outer border edge.\n You can set a single radius to make circular corners, or two radii to make elliptical corners.\n Use a string value of the border radius to set units: 10% 30% 50% 70%\n"},"index":4},{"key":"node233","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"borderRight","propertyComment":"The border-right-width CSS property sets the width of the right border of an element."},"index":5},{"key":"node234","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"borderTop","propertyComment":"The border-top-width CSS property sets the width of the top border of an element"},"index":6}]},{"key":"node235","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"boxShadow","propertyComment":"\n Shadow depth. It accepts values between 0 and 24 inclusive.\n","propertyValueVariants":[{"value":"0"},{"value":"1"},{"value":"2"},{"value":"3"},{"value":"4"},{"value":"5"},{"value":"6"},{"value":"7"},{"value":"8"},{"value":"9"},{"value":"10"},{"value":"11"},{"value":"12"},{"value":"13"},{"value":"14"},{"value":"15"},{"value":"16"},{"value":"17"},{"value":"18"},{"value":"19"},{"value":"20"},{"value":"21"},{"value":"22"},{"value":"23"},{"value":"24"}]},"index":1},{"key":"node236","type":"COMPONENT_PROPERTY_ARRAY_OF_TYPE","props":{"propertyName":"content","propertyComment":"A list of the components that will be placed inside the Box component. Increase the array to have more items.","defaultChildren":[{"type":"COMPONENT_PROPERTY_ELEMENT_TYPE","props":{"componentName":"__PlaceHolder"}}]},"index":2,"children":[{"key":"node441","type":"PAGE_COMPONENT_TYPE","props":{"componentName":"usr.in-page-components.layouts.Box","componentInstance":"flexBoxRow","isSelected":true},"index":0,"children":[{"key":"node442","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"borders","propertyComment":"Sets style to element's border","externalProperties":"usr.common-props.borders.BordersTypes"},"index":0,"children":[{"key":"node443","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"border","propertyComment":"\n The border-width CSS property sets the width of an element's border.\n When the value is specified, it applies the same width to all four sides.\n"},"index":0},{"key":"node444","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"borderBottom","propertyComment":"The border-bottom-width CSS property sets the width of the bottom border of an element."},"index":1},{"key":"node445","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"borderColor","propertyComment":"The border-color CSS property sets the color of an element's border.","externalProperties":"usr.common-props.color.ColorTypes"},"index":2,"children":[{"key":"node446","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorHue","propertyComment":"A value from the collection of colors, i.e. hues","propertyValueVariants":[{"value":"primary.main"},{"value":"secondary.main"},{"value":"error.main"},{"value":"text.primary"},{"value":"text.secondary"},{"value":"text.disabled"},{"value":"text.hint"},{"value":"red"},{"value":"pink"},{"value":"purple"},{"value":"deepPurple"},{"value":"indigo"},{"value":"blue"},{"value":"lightBlue"},{"value":"cyan"},{"value":"teal"},{"value":"green"},{"value":"lightGreen"},{"value":"lime"},{"value":"yellow"},{"value":"amber"},{"value":"orange"},{"value":"deepOrange"},{"value":"brown"},{"value":"grey"},{"value":"blueGrey"}]},"index":0},{"key":"node447","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorShade","propertyComment":"A value from the collection of colors shades","propertyValueVariants":[{"value":"50"},{"value":"100"},{"value":"200"},{"value":"300"},{"value":"400"},{"value":"500"},{"value":"600"},{"value":"700"},{"value":"800"},{"value":"900"},{"value":"A100"},{"value":"A200"},{"value":"A400"},{"value":"A700"}]},"index":1}]},{"key":"node448","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"borderLeft","propertyComment":"The border-left-width CSS property sets the width of the left border of an element."},"index":3},{"key":"node449","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"borderRadius","propertyComment":"\n The border-radius CSS property rounds the corners of an element's outer border edge.\n You can set a single radius to make circular corners, or two radii to make elliptical corners.\n Use a string value of the border radius to set units: 10% 30% 50% 70%\n"},"index":4},{"key":"node450","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"borderRight","propertyComment":"The border-right-width CSS property sets the width of the right border of an element."},"index":5},{"key":"node451","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"borderTop","propertyComment":"The border-top-width CSS property sets the width of the top border of an element"},"index":6}]},{"key":"node452","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"boxShadow","propertyComment":"\n Shadow depth. It accepts values between 0 and 24 inclusive.\n","propertyValueVariants":[{"value":"0"},{"value":"1"},{"value":"2"},{"value":"3"},{"value":"4"},{"value":"5"},{"value":"6"},{"value":"7"},{"value":"8"},{"value":"9"},{"value":"10"},{"value":"11"},{"value":"12"},{"value":"13"},{"value":"14"},{"value":"15"},{"value":"16"},{"value":"17"},{"value":"18"},{"value":"19"},{"value":"20"},{"value":"21"},{"value":"22"},{"value":"23"},{"value":"24"}]},"index":1},{"key":"node453","type":"COMPONENT_PROPERTY_ARRAY_OF_TYPE","props":{"propertyName":"content","propertyComment":"A list of the components that will be placed inside the Box component. Increase the array to have more items.","defaultChildren":[{"type":"COMPONENT_PROPERTY_ELEMENT_TYPE","props":{"componentName":"__PlaceHolder"}}]},"index":2,"children":[{"key":"node454","type":"PAGE_COMPONENT_TYPE","props":{"componentName":"usr.in-page-components.layouts.Box","componentInstance":"box"},"index":0,"children":[{"key":"node455","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"borders","propertyComment":"Sets style to element's border","externalProperties":"usr.common-props.borders.BordersTypes"},"index":0,"children":[{"key":"node456","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"border","propertyComment":"\n The border-width CSS property sets the width of an element's border.\n When the value is specified, it applies the same width to all four sides.\n"},"index":0},{"key":"node457","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"borderBottom","propertyComment":"The border-bottom-width CSS property sets the width of the bottom border of an element."},"index":1},{"key":"node458","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"borderColor","propertyComment":"The border-color CSS property sets the color of an element's border.","externalProperties":"usr.common-props.color.ColorTypes"},"index":2,"children":[{"key":"node459","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorHue","propertyComment":"A value from the collection of colors, i.e. hues","propertyValueVariants":[{"value":"primary.main"},{"value":"secondary.main"},{"value":"error.main"},{"value":"text.primary"},{"value":"text.secondary"},{"value":"text.disabled"},{"value":"text.hint"},{"value":"red"},{"value":"pink"},{"value":"purple"},{"value":"deepPurple"},{"value":"indigo"},{"value":"blue"},{"value":"lightBlue"},{"value":"cyan"},{"value":"teal"},{"value":"green"},{"value":"lightGreen"},{"value":"lime"},{"value":"yellow"},{"value":"amber"},{"value":"orange"},{"value":"deepOrange"},{"value":"brown"},{"value":"grey"},{"value":"blueGrey"}]},"index":0},{"key":"node460","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorShade","propertyComment":"A value from the collection of colors shades","propertyValueVariants":[{"value":"50"},{"value":"100"},{"value":"200"},{"value":"300"},{"value":"400"},{"value":"500"},{"value":"600"},{"value":"700"},{"value":"800"},{"value":"900"},{"value":"A100"},{"value":"A200"},{"value":"A400"},{"value":"A700"}]},"index":1}]},{"key":"node461","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"borderLeft","propertyComment":"The border-left-width CSS property sets the width of the left border of an element."},"index":3},{"key":"node462","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"borderRadius","propertyComment":"\n The border-radius CSS property rounds the corners of an element's outer border edge.\n You can set a single radius to make circular corners, or two radii to make elliptical corners.\n Use a string value of the border radius to set units: 10% 30% 50% 70%\n"},"index":4},{"key":"node463","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"borderRight","propertyComment":"The border-right-width CSS property sets the width of the right border of an element."},"index":5},{"key":"node464","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"borderTop","propertyComment":"The border-top-width CSS property sets the width of the top border of an element"},"index":6}]},{"key":"node465","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"boxShadow","propertyComment":"\n Shadow depth. It accepts values between 0 and 24 inclusive.\n","propertyValueVariants":[{"value":"0"},{"value":"1"},{"value":"2"},{"value":"3"},{"value":"4"},{"value":"5"},{"value":"6"},{"value":"7"},{"value":"8"},{"value":"9"},{"value":"10"},{"value":"11"},{"value":"12"},{"value":"13"},{"value":"14"},{"value":"15"},{"value":"16"},{"value":"17"},{"value":"18"},{"value":"19"},{"value":"20"},{"value":"21"},{"value":"22"},{"value":"23"},{"value":"24"}]},"index":1},{"key":"node466","type":"COMPONENT_PROPERTY_ARRAY_OF_TYPE","props":{"propertyName":"content","propertyComment":"A list of the components that will be placed inside the Box component. Increase the array to have more items.","defaultChildren":[{"type":"COMPONENT_PROPERTY_ELEMENT_TYPE","props":{"componentName":"__PlaceHolder"}}]},"index":2,"children":[{"key":"node2276","type":"COMPONENT_PROPERTY_ELEMENT_TYPE","props":{"componentName":"__PlaceHolder"},"index":0}]},{"key":"node1861","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"display","propertyComment":"Toggle the display value of components","externalProperties":"usr.common-props.display.DisplayTypes"},"index":3,"children":[{"key":"node1862","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"display","propertyComment":"\n The display CSS property sets whether an element is treated as\n a block or inline element and the layout used for its children,\n such as flow layout, grid or flex.\n","propertyValueVariants":[{"value":"block"},{"value":"flex"},{"value":"flow"},{"value":"inline"}]},"index":0},{"key":"node1863","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"overflow","propertyComment":"\n The overflow shorthand CSS property sets what to do when\n an element's content is too big to fit in its block formatting context.\n","propertyValueVariants":[{"value":"auto"},{"value":"hidden"},{"value":"scroll"},{"value":"visible"}]},"index":1},{"key":"node1864","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"textOverflow","propertyComment":"\n The text-overflow CSS property sets how hidden overflow content is signaled to users.\n","propertyValueVariants":[{"value":"clip"},{"value":"ellipsis"}]},"index":2},{"key":"node1865","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"visibility","propertyComment":"\n The visibility CSS property shows or hides an element without changing the layout of a document.\n","propertyValueVariants":[{"value":"hidden"},{"value":"visible"},{"value":"collapse"}]},"index":3},{"key":"node1866","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"whiteSpace","propertyComment":"\n The white-space CSS property sets how white space inside an element is handled.\n","propertyValueVariants":[{"value":"normal"},{"value":"nowrap"},{"value":"pre"},{"value":"pre-wrap"},{"value":"pre-line"},{"value":"break-spaces"}]},"index":4}]},{"key":"node1867","type":"COMPONENT_PROPERTY_BOOL_TYPE","props":{"propertyName":"doNotUseInFlows","propertyComment":"\n If true then the component's instance will not be allowed to use in flows,\n and you will not see the instance name in the pages instances list\n","propertyValue":true},"index":4},{"key":"node1868","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"flexbox","propertyComment":"\n Manages the layout, alignment, and sizing of grid columns, navigation, components,\n and more with a full suite of responsive Flexbox utilities.\n","externalProperties":"usr.common-props.flexbox.FlexboxTypes"},"index":5,"children":[{"key":"node1869","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"alignContent","propertyComment":"\n The CSS align-content property sets the distribution of space between\n and around content items along a flexbox's cross-axis.\n","propertyValueVariants":[{"value":"center"},{"value":"start"},{"value":"end"},{"value":"flex-start"},{"value":"flex-end"},{"value":"baseline"},{"value":"space-between"},{"value":"space-around"},{"value":"space-evenly"},{"value":"normal"},{"value":"stretch"}]},"index":0},{"key":"node1870","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"alignItems","propertyComment":"\n The CSS align-items property sets the align-self value on all direct children as a group.\n","propertyValueVariants":[{"value":"center"},{"value":"start"},{"value":"end"},{"value":"flex-start"},{"value":"flex-end"},{"value":"baseline"},{"value":"normal"},{"value":"stretch"}]},"index":1},{"key":"node1871","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"alignSelf","propertyComment":"\n The align-self CSS property overrides a grid or flex item's align-items value.\n In Flexbox, it aligns the item on the cross axis.\n","propertyValueVariants":[{"value":"auto"},{"value":"center"},{"value":"start"},{"value":"end"},{"value":"flex-start"},{"value":"flex-end"},{"value":"baseline"},{"value":"normal"},{"value":"stretch"}]},"index":2},{"key":"node1872","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"flex","propertyComment":"\n The flex CSS property sets how a flex item will grow or shrink to fit the space available in its flex container.\n It is a shorthand for flex-grow, flex-shrink, and flex-basis.\n"},"index":3},{"key":"node1873","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"flexDirection","propertyComment":"\n The flex-direction CSS property sets how flex items are placed\n in the flex container defining the main axis and the direction (normal or reversed).\n","propertyValueVariants":[{"value":"row"},{"value":"row-reverse"},{"value":"column"},{"value":"column-reverse"}]},"index":4},{"key":"node1874","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"flexGrow","propertyComment":"\n The flex-grow CSS property sets the flex grow factor of a flex item main size.\n It specifies how much of the remaining space in the flex container should be assigned to the item\n (the flex grow factor).\n","propertyValue":1},"index":5},{"key":"node1875","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"flexShrink","propertyComment":"\n The flex-shrink CSS property sets the flex shrink factor of a flex item.\n If the size of all flex items is larger than the flex container,\n items shrink to fit according to flex-shrink.\n"},"index":6},{"key":"node1876","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"flexWrap","propertyComment":"\n The flex-wrap CSS property sets whether flex items are forced onto one line or can wrap onto multiple lines.\n","propertyValueVariants":[{"value":"nowrap"},{"value":"wrap"},{"value":"wrap-reverse"}]},"index":7},{"key":"node1877","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"justifyContent","propertyComment":"\n The CSS justify-content property defines how the browser distributes space between and around content\n items along the main-axis of a flex container, and the inline axis of a container.\n","propertyValueVariants":[{"value":"center"},{"value":"start"},{"value":"end"},{"value":"flex-start"},{"value":"flex-end"},{"value":"left"},{"value":"right"},{"value":"normal"},{"value":"space-between"},{"value":"space-around"},{"value":"space-evenly"},{"value":"stretch"}]},"index":8},{"key":"node1878","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"order","propertyComment":"\n The order CSS property sets the order to lay out an item in a flex or grid container.\n Items in a container are sorted by ascending order value and then by their source code order.\n"},"index":9}]},{"key":"node1879","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"palette","propertyComment":"Sets the color of the component"},"index":6,"children":[{"key":"node1880","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"backgroundColor","externalProperties":"usr.common-props.color.ColorTypes"},"index":0,"children":[{"key":"node1881","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorHue","propertyComment":"A value from the collection of colors, i.e. hues","propertyValueVariants":[{"value":"primary.main"},{"value":"secondary.main"},{"value":"error.main"},{"value":"text.primary"},{"value":"text.secondary"},{"value":"text.disabled"},{"value":"text.hint"},{"value":"red"},{"value":"pink"},{"value":"purple"},{"value":"deepPurple"},{"value":"indigo"},{"value":"blue"},{"value":"lightBlue"},{"value":"cyan"},{"value":"teal"},{"value":"green"},{"value":"lightGreen"},{"value":"lime"},{"value":"yellow"},{"value":"amber"},{"value":"orange"},{"value":"deepOrange"},{"value":"brown"},{"value":"grey"},{"value":"blueGrey"}]},"index":0},{"key":"node1882","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorShade","propertyComment":"A value from the collection of colors shades","propertyValueVariants":[{"value":"50"},{"value":"100"},{"value":"200"},{"value":"300"},{"value":"400"},{"value":"500"},{"value":"600"},{"value":"700"},{"value":"800"},{"value":"900"},{"value":"A100"},{"value":"A200"},{"value":"A400"},{"value":"A700"}]},"index":1}]},{"key":"node1883","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"color","externalProperties":"usr.common-props.color.ColorTypes"},"index":1,"children":[{"key":"node1884","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorHue","propertyComment":"A value from the collection of colors, i.e. hues","propertyValueVariants":[{"value":"primary.main"},{"value":"secondary.main"},{"value":"error.main"},{"value":"text.primary"},{"value":"text.secondary"},{"value":"text.disabled"},{"value":"text.hint"},{"value":"red"},{"value":"pink"},{"value":"purple"},{"value":"deepPurple"},{"value":"indigo"},{"value":"blue"},{"value":"lightBlue"},{"value":"cyan"},{"value":"teal"},{"value":"green"},{"value":"lightGreen"},{"value":"lime"},{"value":"yellow"},{"value":"amber"},{"value":"orange"},{"value":"deepOrange"},{"value":"brown"},{"value":"grey"},{"value":"blueGrey"}]},"index":0},{"key":"node1885","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorShade","propertyComment":"A value from the collection of colors shades","propertyValueVariants":[{"value":"50"},{"value":"100"},{"value":"200"},{"value":"300"},{"value":"400"},{"value":"500"},{"value":"600"},{"value":"700"},{"value":"800"},{"value":"900"},{"value":"A100"},{"value":"A200"},{"value":"A400"},{"value":"A700"}]},"index":1}]}]},{"key":"node1886","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"positions","propertyComment":"\n Shorthand utilities for quickly configuring the position of an element.\n","externalProperties":"usr.common-props.positions.PositionsTypes"},"index":7,"children":[{"key":"node1887","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"bottom","propertyComment":"\n The bottom CSS property participates in setting the vertical position of a positioned element.\n It has no effect on non-positioned elements.\n"},"index":0},{"key":"node1888","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"left","propertyComment":"\n The left CSS property participates in specifying the horizontal position of a positioned element.\n It has no effect on non-positioned elements.\n"},"index":1},{"key":"node1889","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"position","propertyComment":"\n The position CSS property sets how an element is positioned in a document.\n The top, right, bottom, and left properties determine the final location of positioned elements.\n","propertyValueVariants":[{"value":"static"},{"value":"relative"},{"value":"absolute"},{"value":"sticky"},{"value":"fixed"}]},"index":2},{"key":"node1890","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"right","propertyComment":"\n The right CSS property participates in specifying the horizontal position of a positioned element.\n It has no effect on non-positioned elements.\n"},"index":3},{"key":"node1891","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"top","propertyComment":"\n The top CSS property participates in specifying the vertical position of a positioned element.\n It has no effect on non-positioned elements.\n"},"index":4},{"key":"node1892","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"zIndex","propertyComment":"\n The z-index CSS property sets the z-order of a positioned element and its descendants or flex items.\n Overlapping elements with a larger z-index cover those with a smaller one.\n"},"index":5}]},{"key":"node1893","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"sizing","propertyComment":"\n Easily make an element as wide or as tall (relative to its parent) with the width and height utilities.\n","externalProperties":"usr.common-props.sizing.SizingTypes"},"index":8,"children":[{"key":"node1894","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"height","propertyComment":"\n The height CSS property specifies the height of an element.\n By default, the property defines the height of the content area.\n Use a string value to specify units: 50%\n"},"index":0},{"key":"node1895","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"maxHeight","propertyComment":"\n The max-height CSS property sets the maximum height of an element.\n It prevents the used value of the height property from becoming larger than the value specified for max-height.\n Use a string value to specify units: 50%\n"},"index":1},{"key":"node1896","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"maxWidth","propertyComment":"\n The max-width CSS property sets the maximum width of an element.\n It prevents the used value of the width property from becoming larger than the value specified by max-width.\n Use a string value to specify units: 50%\n"},"index":2},{"key":"node1897","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"minHeight","propertyComment":"\n The min-height CSS property sets the minimum height of an element.\n It prevents the used value of the height property from becoming smaller than the value specified for min-height.\n Use a string value to specify units: 50%\n"},"index":3},{"key":"node1898","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"minWidth","propertyComment":"\n The min-width CSS property sets the minimum width of an element.\n It prevents the used value of the width property from becoming smaller than the value specified for min-width.\n Use a string value to specify units: 50%\n"},"index":4},{"key":"node1899","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"width","propertyComment":"\n The width CSS property sets an element's width. By default, it sets the width of the content area.\n Use a string value to specify units: 50%\n"},"index":5}]},{"key":"node1900","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"spacing","propertyComment":"\n A range of shorthand responsive margin and padding utility classes to modify an element’s appearance.\n","externalProperties":"usr.common-props.spacing.SpacingTypes"},"index":9,"children":[{"key":"node1901","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"marginSpacing","propertyComment":"\n A group of the margin properties\n Depending on the input and the theme configuration, the following transformation is applied:\n (1) number - the property is multiplied by the theme spacing value,\n (2) number - the property is used as the array index in theme spacing array,\n (3) string - the property is passed as raw CSS value\n"},"index":0,"children":[{"key":"node1902","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"margin","propertyComment":"\n The property sets the margin area.\n"},"index":0},{"key":"node1903","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginBottom","propertyComment":"\n The property sets the margin area on the bottom of an element.\n"},"index":1},{"key":"node1904","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginLeft","propertyComment":"\n The property sets the margin area on the left side of an element.\n"},"index":2},{"key":"node1905","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginRight","propertyComment":"\n The property sets the margin area on the right side of an element.\n"},"index":3},{"key":"node1906","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginTop","propertyComment":"\n The property sets the margin area on the top of an element.\n"},"index":4},{"key":"node1907","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginX","propertyComment":"\n The property sets the margin area on the left and right sides of an element.\n"},"index":5},{"key":"node1908","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginY","propertyComment":"\n The property sets the margin area on the top and bottom sides of an element.\n"},"index":6}]},{"key":"node1909","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"paddingSpacing","propertyComment":"\n A group of the padding properties.\n Depending on the input and the theme configuration, the following transformation is applied:\n (1) number - the property is multiplied by the theme spacing value,\n (2) number - the property is used as the array index in theme spacing array,\n (3) string - the property is passed as raw CSS value\n"},"index":1,"children":[{"key":"node1910","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"padding","propertyComment":"\n The property sets the padding area on all four sides of an element.\n"},"index":0},{"key":"node1911","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingBottom","propertyComment":"\n The property sets the padding area on the bottom of an element.\n"},"index":1},{"key":"node1912","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingLeft","propertyComment":"\n The property sets the padding area on the left side of an element.\n"},"index":2},{"key":"node1913","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingRight","propertyComment":"\n The property sets the padding area on the right side of an element.\n"},"index":3},{"key":"node1914","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingTop","propertyComment":"\n The property sets the padding area on the top of an element.\n"},"index":4},{"key":"node1915","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingX","propertyComment":"\n The property sets the padding area on the left and right sides of an element.\n"},"index":5},{"key":"node1916","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingY","propertyComment":"\n The property sets the padding area on the top and bottom sides of an element.\n"},"index":6}]}]},{"key":"node1917","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"typography","propertyComment":"Text utilities to control alignment, wrapping, weight, and more.","externalProperties":"usr.common-props.typography.TypographyTypes"},"index":10,"children":[{"key":"node1918","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"fontSize","propertyComment":"\n The font-size CSS property sets the size of the font.\n"},"index":0},{"key":"node1919","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"fontStyle","propertyComment":"\n The font-style CSS property sets whether a font should be styled with a normal, italic.\n","propertyValueVariants":[{"value":"normal"},{"value":"italic"}]},"index":1},{"key":"node1920","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"fontWeight","propertyComment":"\n Sets the weight (or boldness) of the font according to the application settings.\n","propertyValueVariants":[{"value":"fontWeightLight"},{"value":"fontWeightRegular"},{"value":"fontWeightMedium"},{"value":"fontWeightBold"}]},"index":2},{"key":"node1921","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"letterSpacing","propertyComment":"\n The letter-spacing CSS property sets the spacing behavior between text characters.\n"},"index":3},{"key":"node1922","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"lineHeight","propertyComment":"\n The line-height CSS property sets the height of a line box.\n It's commonly used to set the distance between lines of text.\n On block-level elements, it specifies the minimum height of line boxes within the element.\n"},"index":4},{"key":"node1923","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"textAlign","propertyComment":"\n The text-align CSS property sets the horizontal alignment of a block element or table-cell box.\n","propertyValueVariants":[{"value":"start"},{"value":"end"},{"value":"left"},{"value":"right"},{"value":"center"},{"value":"justify"},{"value":"match-parent"}]},"index":5}]}]},{"key":"node1924","type":"PAGE_COMPONENT_TYPE","props":{"componentName":"usr.in-page-components.layouts.Box","componentInstance":"box"},"index":1,"children":[{"key":"node1925","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"borders","propertyComment":"Sets style to element's border","externalProperties":"usr.common-props.borders.BordersTypes"},"index":0,"children":[{"key":"node1926","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"border","propertyComment":"\n The border-width CSS property sets the width of an element's border.\n When the value is specified, it applies the same width to all four sides.\n"},"index":0},{"key":"node1927","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"borderBottom","propertyComment":"The border-bottom-width CSS property sets the width of the bottom border of an element."},"index":1},{"key":"node1928","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"borderColor","propertyComment":"The border-color CSS property sets the color of an element's border.","externalProperties":"usr.common-props.color.ColorTypes"},"index":2,"children":[{"key":"node1929","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorHue","propertyComment":"A value from the collection of colors, i.e. hues","propertyValueVariants":[{"value":"primary.main"},{"value":"secondary.main"},{"value":"error.main"},{"value":"text.primary"},{"value":"text.secondary"},{"value":"text.disabled"},{"value":"text.hint"},{"value":"red"},{"value":"pink"},{"value":"purple"},{"value":"deepPurple"},{"value":"indigo"},{"value":"blue"},{"value":"lightBlue"},{"value":"cyan"},{"value":"teal"},{"value":"green"},{"value":"lightGreen"},{"value":"lime"},{"value":"yellow"},{"value":"amber"},{"value":"orange"},{"value":"deepOrange"},{"value":"brown"},{"value":"grey"},{"value":"blueGrey"}]},"index":0},{"key":"node1930","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorShade","propertyComment":"A value from the collection of colors shades","propertyValueVariants":[{"value":"50"},{"value":"100"},{"value":"200"},{"value":"300"},{"value":"400"},{"value":"500"},{"value":"600"},{"value":"700"},{"value":"800"},{"value":"900"},{"value":"A100"},{"value":"A200"},{"value":"A400"},{"value":"A700"}]},"index":1}]},{"key":"node1931","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"borderLeft","propertyComment":"The border-left-width CSS property sets the width of the left border of an element."},"index":3},{"key":"node1932","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"borderRadius","propertyComment":"\n The border-radius CSS property rounds the corners of an element's outer border edge.\n You can set a single radius to make circular corners, or two radii to make elliptical corners.\n Use a string value of the border radius to set units: 10% 30% 50% 70%\n"},"index":4},{"key":"node1933","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"borderRight","propertyComment":"The border-right-width CSS property sets the width of the right border of an element."},"index":5},{"key":"node1934","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"borderTop","propertyComment":"The border-top-width CSS property sets the width of the top border of an element"},"index":6}]},{"key":"node1935","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"boxShadow","propertyComment":"\n Shadow depth. It accepts values between 0 and 24 inclusive.\n","propertyValueVariants":[{"value":"0"},{"value":"1"},{"value":"2"},{"value":"3"},{"value":"4"},{"value":"5"},{"value":"6"},{"value":"7"},{"value":"8"},{"value":"9"},{"value":"10"},{"value":"11"},{"value":"12"},{"value":"13"},{"value":"14"},{"value":"15"},{"value":"16"},{"value":"17"},{"value":"18"},{"value":"19"},{"value":"20"},{"value":"21"},{"value":"22"},{"value":"23"},{"value":"24"}]},"index":1},{"key":"node1936","type":"COMPONENT_PROPERTY_ARRAY_OF_TYPE","props":{"propertyName":"content","propertyComment":"A list of the components that will be placed inside the Box component. Increase the array to have more items.","defaultChildren":[{"type":"COMPONENT_PROPERTY_ELEMENT_TYPE","props":{"componentName":"__PlaceHolder"}}]},"index":2,"children":[{"key":"node2277","type":"COMPONENT_PROPERTY_ELEMENT_TYPE","props":{"componentName":"__PlaceHolder"},"index":0}]},{"key":"node1947","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"display","propertyComment":"Toggle the display value of components","externalProperties":"usr.common-props.display.DisplayTypes"},"index":3,"children":[{"key":"node1948","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"display","propertyComment":"\n The display CSS property sets whether an element is treated as\n a block or inline element and the layout used for its children,\n such as flow layout, grid or flex.\n","propertyValueVariants":[{"value":"block"},{"value":"flex"},{"value":"flow"},{"value":"inline"}]},"index":0},{"key":"node1949","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"overflow","propertyComment":"\n The overflow shorthand CSS property sets what to do when\n an element's content is too big to fit in its block formatting context.\n","propertyValueVariants":[{"value":"auto"},{"value":"hidden"},{"value":"scroll"},{"value":"visible"}]},"index":1},{"key":"node1950","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"textOverflow","propertyComment":"\n The text-overflow CSS property sets how hidden overflow content is signaled to users.\n","propertyValueVariants":[{"value":"clip"},{"value":"ellipsis"}]},"index":2},{"key":"node1951","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"visibility","propertyComment":"\n The visibility CSS property shows or hides an element without changing the layout of a document.\n","propertyValueVariants":[{"value":"hidden"},{"value":"visible"},{"value":"collapse"}]},"index":3},{"key":"node1952","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"whiteSpace","propertyComment":"\n The white-space CSS property sets how white space inside an element is handled.\n","propertyValueVariants":[{"value":"normal"},{"value":"nowrap"},{"value":"pre"},{"value":"pre-wrap"},{"value":"pre-line"},{"value":"break-spaces"}]},"index":4}]},{"key":"node1953","type":"COMPONENT_PROPERTY_BOOL_TYPE","props":{"propertyName":"doNotUseInFlows","propertyComment":"\n If true then the component's instance will not be allowed to use in flows,\n and you will not see the instance name in the pages instances list\n","propertyValue":true},"index":4},{"key":"node1954","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"flexbox","propertyComment":"\n Manages the layout, alignment, and sizing of grid columns, navigation, components,\n and more with a full suite of responsive Flexbox utilities.\n","externalProperties":"usr.common-props.flexbox.FlexboxTypes"},"index":5,"children":[{"key":"node1955","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"alignContent","propertyComment":"\n The CSS align-content property sets the distribution of space between\n and around content items along a flexbox's cross-axis.\n","propertyValueVariants":[{"value":"center"},{"value":"start"},{"value":"end"},{"value":"flex-start"},{"value":"flex-end"},{"value":"baseline"},{"value":"space-between"},{"value":"space-around"},{"value":"space-evenly"},{"value":"normal"},{"value":"stretch"}]},"index":0},{"key":"node1956","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"alignItems","propertyComment":"\n The CSS align-items property sets the align-self value on all direct children as a group.\n","propertyValueVariants":[{"value":"center"},{"value":"start"},{"value":"end"},{"value":"flex-start"},{"value":"flex-end"},{"value":"baseline"},{"value":"normal"},{"value":"stretch"}]},"index":1},{"key":"node1957","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"alignSelf","propertyComment":"\n The align-self CSS property overrides a grid or flex item's align-items value.\n In Flexbox, it aligns the item on the cross axis.\n","propertyValueVariants":[{"value":"auto"},{"value":"center"},{"value":"start"},{"value":"end"},{"value":"flex-start"},{"value":"flex-end"},{"value":"baseline"},{"value":"normal"},{"value":"stretch"}]},"index":2},{"key":"node1958","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"flex","propertyComment":"\n The flex CSS property sets how a flex item will grow or shrink to fit the space available in its flex container.\n It is a shorthand for flex-grow, flex-shrink, and flex-basis.\n"},"index":3},{"key":"node1959","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"flexDirection","propertyComment":"\n The flex-direction CSS property sets how flex items are placed\n in the flex container defining the main axis and the direction (normal or reversed).\n","propertyValueVariants":[{"value":"row"},{"value":"row-reverse"},{"value":"column"},{"value":"column-reverse"}]},"index":4},{"key":"node1960","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"flexGrow","propertyComment":"\n The flex-grow CSS property sets the flex grow factor of a flex item main size.\n It specifies how much of the remaining space in the flex container should be assigned to the item\n (the flex grow factor).\n"},"index":5},{"key":"node1961","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"flexShrink","propertyComment":"\n The flex-shrink CSS property sets the flex shrink factor of a flex item.\n If the size of all flex items is larger than the flex container,\n items shrink to fit according to flex-shrink.\n"},"index":6},{"key":"node1962","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"flexWrap","propertyComment":"\n The flex-wrap CSS property sets whether flex items are forced onto one line or can wrap onto multiple lines.\n","propertyValueVariants":[{"value":"nowrap"},{"value":"wrap"},{"value":"wrap-reverse"}]},"index":7},{"key":"node1963","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"justifyContent","propertyComment":"\n The CSS justify-content property defines how the browser distributes space between and around content\n items along the main-axis of a flex container, and the inline axis of a container.\n","propertyValueVariants":[{"value":"center"},{"value":"start"},{"value":"end"},{"value":"flex-start"},{"value":"flex-end"},{"value":"left"},{"value":"right"},{"value":"normal"},{"value":"space-between"},{"value":"space-around"},{"value":"space-evenly"},{"value":"stretch"}]},"index":8},{"key":"node1964","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"order","propertyComment":"\n The order CSS property sets the order to lay out an item in a flex or grid container.\n Items in a container are sorted by ascending order value and then by their source code order.\n"},"index":9}]},{"key":"node1965","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"palette","propertyComment":"Sets the color of the component"},"index":6,"children":[{"key":"node1966","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"backgroundColor","externalProperties":"usr.common-props.color.ColorTypes"},"index":0,"children":[{"key":"node1967","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorHue","propertyComment":"A value from the collection of colors, i.e. hues","propertyValueVariants":[{"value":"primary.main"},{"value":"secondary.main"},{"value":"error.main"},{"value":"text.primary"},{"value":"text.secondary"},{"value":"text.disabled"},{"value":"text.hint"},{"value":"red"},{"value":"pink"},{"value":"purple"},{"value":"deepPurple"},{"value":"indigo"},{"value":"blue"},{"value":"lightBlue"},{"value":"cyan"},{"value":"teal"},{"value":"green"},{"value":"lightGreen"},{"value":"lime"},{"value":"yellow"},{"value":"amber"},{"value":"orange"},{"value":"deepOrange"},{"value":"brown"},{"value":"grey"},{"value":"blueGrey"}]},"index":0},{"key":"node1968","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorShade","propertyComment":"A value from the collection of colors shades","propertyValueVariants":[{"value":"50"},{"value":"100"},{"value":"200"},{"value":"300"},{"value":"400"},{"value":"500"},{"value":"600"},{"value":"700"},{"value":"800"},{"value":"900"},{"value":"A100"},{"value":"A200"},{"value":"A400"},{"value":"A700"}]},"index":1}]},{"key":"node1969","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"color","externalProperties":"usr.common-props.color.ColorTypes"},"index":1,"children":[{"key":"node1970","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorHue","propertyComment":"A value from the collection of colors, i.e. hues","propertyValueVariants":[{"value":"primary.main"},{"value":"secondary.main"},{"value":"error.main"},{"value":"text.primary"},{"value":"text.secondary"},{"value":"text.disabled"},{"value":"text.hint"},{"value":"red"},{"value":"pink"},{"value":"purple"},{"value":"deepPurple"},{"value":"indigo"},{"value":"blue"},{"value":"lightBlue"},{"value":"cyan"},{"value":"teal"},{"value":"green"},{"value":"lightGreen"},{"value":"lime"},{"value":"yellow"},{"value":"amber"},{"value":"orange"},{"value":"deepOrange"},{"value":"brown"},{"value":"grey"},{"value":"blueGrey"}]},"index":0},{"key":"node1971","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorShade","propertyComment":"A value from the collection of colors shades","propertyValueVariants":[{"value":"50"},{"value":"100"},{"value":"200"},{"value":"300"},{"value":"400"},{"value":"500"},{"value":"600"},{"value":"700"},{"value":"800"},{"value":"900"},{"value":"A100"},{"value":"A200"},{"value":"A400"},{"value":"A700"}]},"index":1}]}]},{"key":"node1972","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"positions","propertyComment":"\n Shorthand utilities for quickly configuring the position of an element.\n","externalProperties":"usr.common-props.positions.PositionsTypes"},"index":7,"children":[{"key":"node1973","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"bottom","propertyComment":"\n The bottom CSS property participates in setting the vertical position of a positioned element.\n It has no effect on non-positioned elements.\n"},"index":0},{"key":"node1974","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"left","propertyComment":"\n The left CSS property participates in specifying the horizontal position of a positioned element.\n It has no effect on non-positioned elements.\n"},"index":1},{"key":"node1975","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"position","propertyComment":"\n The position CSS property sets how an element is positioned in a document.\n The top, right, bottom, and left properties determine the final location of positioned elements.\n","propertyValueVariants":[{"value":"static"},{"value":"relative"},{"value":"absolute"},{"value":"sticky"},{"value":"fixed"}]},"index":2},{"key":"node1976","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"right","propertyComment":"\n The right CSS property participates in specifying the horizontal position of a positioned element.\n It has no effect on non-positioned elements.\n"},"index":3},{"key":"node1977","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"top","propertyComment":"\n The top CSS property participates in specifying the vertical position of a positioned element.\n It has no effect on non-positioned elements.\n"},"index":4},{"key":"node1978","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"zIndex","propertyComment":"\n The z-index CSS property sets the z-order of a positioned element and its descendants or flex items.\n Overlapping elements with a larger z-index cover those with a smaller one.\n"},"index":5}]},{"key":"node1979","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"sizing","propertyComment":"\n Easily make an element as wide or as tall (relative to its parent) with the width and height utilities.\n","externalProperties":"usr.common-props.sizing.SizingTypes"},"index":8,"children":[{"key":"node1980","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"height","propertyComment":"\n The height CSS property specifies the height of an element.\n By default, the property defines the height of the content area.\n Use a string value to specify units: 50%\n"},"index":0},{"key":"node1981","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"maxHeight","propertyComment":"\n The max-height CSS property sets the maximum height of an element.\n It prevents the used value of the height property from becoming larger than the value specified for max-height.\n Use a string value to specify units: 50%\n"},"index":1},{"key":"node1982","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"maxWidth","propertyComment":"\n The max-width CSS property sets the maximum width of an element.\n It prevents the used value of the width property from becoming larger than the value specified by max-width.\n Use a string value to specify units: 50%\n"},"index":2},{"key":"node1983","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"minHeight","propertyComment":"\n The min-height CSS property sets the minimum height of an element.\n It prevents the used value of the height property from becoming smaller than the value specified for min-height.\n Use a string value to specify units: 50%\n"},"index":3},{"key":"node1984","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"minWidth","propertyComment":"\n The min-width CSS property sets the minimum width of an element.\n It prevents the used value of the width property from becoming smaller than the value specified for min-width.\n Use a string value to specify units: 50%\n"},"index":4},{"key":"node1985","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"width","propertyComment":"\n The width CSS property sets an element's width. By default, it sets the width of the content area.\n Use a string value to specify units: 50%\n"},"index":5}]},{"key":"node1986","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"spacing","propertyComment":"\n A range of shorthand responsive margin and padding utility classes to modify an element’s appearance.\n","externalProperties":"usr.common-props.spacing.SpacingTypes"},"index":9,"children":[{"key":"node1987","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"marginSpacing","propertyComment":"\n A group of the margin properties\n Depending on the input and the theme configuration, the following transformation is applied:\n (1) number - the property is multiplied by the theme spacing value,\n (2) number - the property is used as the array index in theme spacing array,\n (3) string - the property is passed as raw CSS value\n"},"index":0,"children":[{"key":"node1988","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"margin","propertyComment":"\n The property sets the margin area.\n"},"index":0},{"key":"node1989","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginBottom","propertyComment":"\n The property sets the margin area on the bottom of an element.\n"},"index":1},{"key":"node1990","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginLeft","propertyComment":"\n The property sets the margin area on the left side of an element.\n"},"index":2},{"key":"node1991","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginRight","propertyComment":"\n The property sets the margin area on the right side of an element.\n"},"index":3},{"key":"node1992","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginTop","propertyComment":"\n The property sets the margin area on the top of an element.\n"},"index":4},{"key":"node1993","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginX","propertyComment":"\n The property sets the margin area on the left and right sides of an element.\n"},"index":5},{"key":"node1994","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginY","propertyComment":"\n The property sets the margin area on the top and bottom sides of an element.\n"},"index":6}]},{"key":"node1995","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"paddingSpacing","propertyComment":"\n A group of the padding properties.\n Depending on the input and the theme configuration, the following transformation is applied:\n (1) number - the property is multiplied by the theme spacing value,\n (2) number - the property is used as the array index in theme spacing array,\n (3) string - the property is passed as raw CSS value\n"},"index":1,"children":[{"key":"node1996","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"padding","propertyComment":"\n The property sets the padding area on all four sides of an element.\n"},"index":0},{"key":"node1997","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingBottom","propertyComment":"\n The property sets the padding area on the bottom of an element.\n"},"index":1},{"key":"node1998","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingLeft","propertyComment":"\n The property sets the padding area on the left side of an element.\n"},"index":2},{"key":"node1999","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingRight","propertyComment":"\n The property sets the padding area on the right side of an element.\n"},"index":3},{"key":"node2000","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingTop","propertyComment":"\n The property sets the padding area on the top of an element.\n"},"index":4},{"key":"node2001","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingX","propertyComment":"\n The property sets the padding area on the left and right sides of an element.\n"},"index":5},{"key":"node2002","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingY","propertyComment":"\n The property sets the padding area on the top and bottom sides of an element.\n"},"index":6}]}]},{"key":"node2003","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"typography","propertyComment":"Text utilities to control alignment, wrapping, weight, and more.","externalProperties":"usr.common-props.typography.TypographyTypes"},"index":10,"children":[{"key":"node2004","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"fontSize","propertyComment":"\n The font-size CSS property sets the size of the font.\n"},"index":0},{"key":"node2005","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"fontStyle","propertyComment":"\n The font-style CSS property sets whether a font should be styled with a normal, italic.\n","propertyValueVariants":[{"value":"normal"},{"value":"italic"}]},"index":1},{"key":"node2006","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"fontWeight","propertyComment":"\n Sets the weight (or boldness) of the font according to the application settings.\n","propertyValueVariants":[{"value":"fontWeightLight"},{"value":"fontWeightRegular"},{"value":"fontWeightMedium"},{"value":"fontWeightBold"}]},"index":2},{"key":"node2007","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"letterSpacing","propertyComment":"\n The letter-spacing CSS property sets the spacing behavior between text characters.\n"},"index":3},{"key":"node2008","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"lineHeight","propertyComment":"\n The line-height CSS property sets the height of a line box.\n It's commonly used to set the distance between lines of text.\n On block-level elements, it specifies the minimum height of line boxes within the element.\n"},"index":4},{"key":"node2009","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"textAlign","propertyComment":"\n The text-align CSS property sets the horizontal alignment of a block element or table-cell box.\n","propertyValueVariants":[{"value":"start"},{"value":"end"},{"value":"left"},{"value":"right"},{"value":"center"},{"value":"justify"},{"value":"match-parent"}]},"index":5}]}]}]},{"key":"node2010","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"display","propertyComment":"Toggle the display value of components","externalProperties":"usr.common-props.display.DisplayTypes"},"index":3,"children":[{"key":"node2011","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"display","propertyComment":"\n The display CSS property sets whether an element is treated as\n a block or inline element and the layout used for its children,\n such as flow layout, grid or flex.\n","propertyValueVariants":[{"value":"block"},{"value":"flex"},{"value":"flow"},{"value":"inline"}],"propertyValue":"flex"},"index":0},{"key":"node2012","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"overflow","propertyComment":"\n The overflow shorthand CSS property sets what to do when\n an element's content is too big to fit in its block formatting context.\n","propertyValueVariants":[{"value":"auto"},{"value":"hidden"},{"value":"scroll"},{"value":"visible"}]},"index":1},{"key":"node2013","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"textOverflow","propertyComment":"\n The text-overflow CSS property sets how hidden overflow content is signaled to users.\n","propertyValueVariants":[{"value":"clip"},{"value":"ellipsis"}]},"index":2},{"key":"node2014","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"visibility","propertyComment":"\n The visibility CSS property shows or hides an element without changing the layout of a document.\n","propertyValueVariants":[{"value":"hidden"},{"value":"visible"},{"value":"collapse"}]},"index":3},{"key":"node2015","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"whiteSpace","propertyComment":"\n The white-space CSS property sets how white space inside an element is handled.\n","propertyValueVariants":[{"value":"normal"},{"value":"nowrap"},{"value":"pre"},{"value":"pre-wrap"},{"value":"pre-line"},{"value":"break-spaces"}]},"index":4}]},{"key":"node2016","type":"COMPONENT_PROPERTY_BOOL_TYPE","props":{"propertyName":"doNotUseInFlows","propertyComment":"\n If true then the component's instance will not be allowed to use in flows,\n and you will not see the instance name in the pages instances list\n","propertyValue":true},"index":4},{"key":"node2017","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"flexbox","propertyComment":"\n Manages the layout, alignment, and sizing of grid columns, navigation, components,\n and more with a full suite of responsive Flexbox utilities.\n","externalProperties":"usr.common-props.flexbox.FlexboxTypes"},"index":5,"children":[{"key":"node2018","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"alignContent","propertyComment":"\n The CSS align-content property sets the distribution of space between\n and around content items along a flexbox's cross-axis.\n","propertyValueVariants":[{"value":"center"},{"value":"start"},{"value":"end"},{"value":"flex-start"},{"value":"flex-end"},{"value":"baseline"},{"value":"space-between"},{"value":"space-around"},{"value":"space-evenly"},{"value":"normal"},{"value":"stretch"}]},"index":0},{"key":"node2019","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"alignItems","propertyComment":"\n The CSS align-items property sets the align-self value on all direct children as a group.\n","propertyValueVariants":[{"value":"center"},{"value":"start"},{"value":"end"},{"value":"flex-start"},{"value":"flex-end"},{"value":"baseline"},{"value":"normal"},{"value":"stretch"}],"propertyValue":"center"},"index":1},{"key":"node2020","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"alignSelf","propertyComment":"\n The align-self CSS property overrides a grid or flex item's align-items value.\n In Flexbox, it aligns the item on the cross axis.\n","propertyValueVariants":[{"value":"auto"},{"value":"center"},{"value":"start"},{"value":"end"},{"value":"flex-start"},{"value":"flex-end"},{"value":"baseline"},{"value":"normal"},{"value":"stretch"}]},"index":2},{"key":"node2021","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"flex","propertyComment":"\n The flex CSS property sets how a flex item will grow or shrink to fit the space available in its flex container.\n It is a shorthand for flex-grow, flex-shrink, and flex-basis.\n"},"index":3},{"key":"node2022","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"flexDirection","propertyComment":"\n The flex-direction CSS property sets how flex items are placed\n in the flex container defining the main axis and the direction (normal or reversed).\n","propertyValueVariants":[{"value":"row"},{"value":"row-reverse"},{"value":"column"},{"value":"column-reverse"}],"propertyValue":"row"},"index":4},{"key":"node2023","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"flexGrow","propertyComment":"\n The flex-grow CSS property sets the flex grow factor of a flex item main size.\n It specifies how much of the remaining space in the flex container should be assigned to the item\n (the flex grow factor).\n"},"index":5},{"key":"node2024","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"flexShrink","propertyComment":"\n The flex-shrink CSS property sets the flex shrink factor of a flex item.\n If the size of all flex items is larger than the flex container,\n items shrink to fit according to flex-shrink.\n"},"index":6},{"key":"node2025","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"flexWrap","propertyComment":"\n The flex-wrap CSS property sets whether flex items are forced onto one line or can wrap onto multiple lines.\n","propertyValueVariants":[{"value":"nowrap"},{"value":"wrap"},{"value":"wrap-reverse"}]},"index":7},{"key":"node2026","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"justifyContent","propertyComment":"\n The CSS justify-content property defines how the browser distributes space between and around content\n items along the main-axis of a flex container, and the inline axis of a container.\n","propertyValueVariants":[{"value":"center"},{"value":"start"},{"value":"end"},{"value":"flex-start"},{"value":"flex-end"},{"value":"left"},{"value":"right"},{"value":"normal"},{"value":"space-between"},{"value":"space-around"},{"value":"space-evenly"},{"value":"stretch"}]},"index":8},{"key":"node2027","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"order","propertyComment":"\n The order CSS property sets the order to lay out an item in a flex or grid container.\n Items in a container are sorted by ascending order value and then by their source code order.\n"},"index":9}]},{"key":"node2028","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"palette","propertyComment":"Sets the color of the component"},"index":6,"children":[{"key":"node2029","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"backgroundColor","externalProperties":"usr.common-props.color.ColorTypes"},"index":0,"children":[{"key":"node2030","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorHue","propertyComment":"A value from the collection of colors, i.e. hues","propertyValueVariants":[{"value":"primary.main"},{"value":"secondary.main"},{"value":"error.main"},{"value":"text.primary"},{"value":"text.secondary"},{"value":"text.disabled"},{"value":"text.hint"},{"value":"red"},{"value":"pink"},{"value":"purple"},{"value":"deepPurple"},{"value":"indigo"},{"value":"blue"},{"value":"lightBlue"},{"value":"cyan"},{"value":"teal"},{"value":"green"},{"value":"lightGreen"},{"value":"lime"},{"value":"yellow"},{"value":"amber"},{"value":"orange"},{"value":"deepOrange"},{"value":"brown"},{"value":"grey"},{"value":"blueGrey"}]},"index":0},{"key":"node2031","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorShade","propertyComment":"A value from the collection of colors shades","propertyValueVariants":[{"value":"50"},{"value":"100"},{"value":"200"},{"value":"300"},{"value":"400"},{"value":"500"},{"value":"600"},{"value":"700"},{"value":"800"},{"value":"900"},{"value":"A100"},{"value":"A200"},{"value":"A400"},{"value":"A700"}]},"index":1}]},{"key":"node2032","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"color","externalProperties":"usr.common-props.color.ColorTypes"},"index":1,"children":[{"key":"node2033","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorHue","propertyComment":"A value from the collection of colors, i.e. hues","propertyValueVariants":[{"value":"primary.main"},{"value":"secondary.main"},{"value":"error.main"},{"value":"text.primary"},{"value":"text.secondary"},{"value":"text.disabled"},{"value":"text.hint"},{"value":"red"},{"value":"pink"},{"value":"purple"},{"value":"deepPurple"},{"value":"indigo"},{"value":"blue"},{"value":"lightBlue"},{"value":"cyan"},{"value":"teal"},{"value":"green"},{"value":"lightGreen"},{"value":"lime"},{"value":"yellow"},{"value":"amber"},{"value":"orange"},{"value":"deepOrange"},{"value":"brown"},{"value":"grey"},{"value":"blueGrey"}]},"index":0},{"key":"node2034","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorShade","propertyComment":"A value from the collection of colors shades","propertyValueVariants":[{"value":"50"},{"value":"100"},{"value":"200"},{"value":"300"},{"value":"400"},{"value":"500"},{"value":"600"},{"value":"700"},{"value":"800"},{"value":"900"},{"value":"A100"},{"value":"A200"},{"value":"A400"},{"value":"A700"}]},"index":1}]}]},{"key":"node2035","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"positions","propertyComment":"\n Shorthand utilities for quickly configuring the position of an element.\n","externalProperties":"usr.common-props.positions.PositionsTypes"},"index":7,"children":[{"key":"node2036","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"bottom","propertyComment":"\n The bottom CSS property participates in setting the vertical position of a positioned element.\n It has no effect on non-positioned elements.\n"},"index":0},{"key":"node2037","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"left","propertyComment":"\n The left CSS property participates in specifying the horizontal position of a positioned element.\n It has no effect on non-positioned elements.\n"},"index":1},{"key":"node2038","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"position","propertyComment":"\n The position CSS property sets how an element is positioned in a document.\n The top, right, bottom, and left properties determine the final location of positioned elements.\n","propertyValueVariants":[{"value":"static"},{"value":"relative"},{"value":"absolute"},{"value":"sticky"},{"value":"fixed"}],"propertyValue":"relative"},"index":2},{"key":"node2039","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"right","propertyComment":"\n The right CSS property participates in specifying the horizontal position of a positioned element.\n It has no effect on non-positioned elements.\n"},"index":3},{"key":"node2040","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"top","propertyComment":"\n The top CSS property participates in specifying the vertical position of a positioned element.\n It has no effect on non-positioned elements.\n"},"index":4},{"key":"node2041","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"zIndex","propertyComment":"\n The z-index CSS property sets the z-order of a positioned element and its descendants or flex items.\n Overlapping elements with a larger z-index cover those with a smaller one.\n"},"index":5}]},{"key":"node2042","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"sizing","propertyComment":"\n Easily make an element as wide or as tall (relative to its parent) with the width and height utilities.\n","externalProperties":"usr.common-props.sizing.SizingTypes"},"index":8,"children":[{"key":"node2043","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"height","propertyComment":"\n The height CSS property specifies the height of an element.\n By default, the property defines the height of the content area.\n Use a string value to specify units: 50%\n"},"index":0},{"key":"node2044","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"maxHeight","propertyComment":"\n The max-height CSS property sets the maximum height of an element.\n It prevents the used value of the height property from becoming larger than the value specified for max-height.\n Use a string value to specify units: 50%\n"},"index":1},{"key":"node2045","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"maxWidth","propertyComment":"\n The max-width CSS property sets the maximum width of an element.\n It prevents the used value of the width property from becoming larger than the value specified by max-width.\n Use a string value to specify units: 50%\n"},"index":2},{"key":"node2046","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"minHeight","propertyComment":"\n The min-height CSS property sets the minimum height of an element.\n It prevents the used value of the height property from becoming smaller than the value specified for min-height.\n Use a string value to specify units: 50%\n"},"index":3},{"key":"node2047","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"minWidth","propertyComment":"\n The min-width CSS property sets the minimum width of an element.\n It prevents the used value of the width property from becoming smaller than the value specified for min-width.\n Use a string value to specify units: 50%\n"},"index":4},{"key":"node2048","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"width","propertyComment":"\n The width CSS property sets an element's width. By default, it sets the width of the content area.\n Use a string value to specify units: 50%\n","propertyValue":"100%"},"index":5}]},{"key":"node2049","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"spacing","propertyComment":"\n A range of shorthand responsive margin and padding utility classes to modify an element’s appearance.\n","externalProperties":"usr.common-props.spacing.SpacingTypes"},"index":9,"children":[{"key":"node2050","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"marginSpacing","propertyComment":"\n A group of the margin properties\n Depending on the input and the theme configuration, the following transformation is applied:\n (1) number - the property is multiplied by the theme spacing value,\n (2) number - the property is used as the array index in theme spacing array,\n (3) string - the property is passed as raw CSS value\n"},"index":0,"children":[{"key":"node2051","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"margin","propertyComment":"\n The property sets the margin area.\n"},"index":0},{"key":"node2052","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginBottom","propertyComment":"\n The property sets the margin area on the bottom of an element.\n"},"index":1},{"key":"node2053","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginLeft","propertyComment":"\n The property sets the margin area on the left side of an element.\n"},"index":2},{"key":"node2054","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginRight","propertyComment":"\n The property sets the margin area on the right side of an element.\n"},"index":3},{"key":"node2055","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginTop","propertyComment":"\n The property sets the margin area on the top of an element.\n"},"index":4},{"key":"node2056","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginX","propertyComment":"\n The property sets the margin area on the left and right sides of an element.\n"},"index":5},{"key":"node2057","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginY","propertyComment":"\n The property sets the margin area on the top and bottom sides of an element.\n"},"index":6}]},{"key":"node2058","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"paddingSpacing","propertyComment":"\n A group of the padding properties.\n Depending on the input and the theme configuration, the following transformation is applied:\n (1) number - the property is multiplied by the theme spacing value,\n (2) number - the property is used as the array index in theme spacing array,\n (3) string - the property is passed as raw CSS value\n"},"index":1,"children":[{"key":"node2059","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"padding","propertyComment":"\n The property sets the padding area on all four sides of an element.\n"},"index":0},{"key":"node2060","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingBottom","propertyComment":"\n The property sets the padding area on the bottom of an element.\n"},"index":1},{"key":"node2061","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingLeft","propertyComment":"\n The property sets the padding area on the left side of an element.\n"},"index":2},{"key":"node2062","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingRight","propertyComment":"\n The property sets the padding area on the right side of an element.\n"},"index":3},{"key":"node2063","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingTop","propertyComment":"\n The property sets the padding area on the top of an element.\n"},"index":4},{"key":"node2064","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingX","propertyComment":"\n The property sets the padding area on the left and right sides of an element.\n"},"index":5},{"key":"node2065","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingY","propertyComment":"\n The property sets the padding area on the top and bottom sides of an element.\n"},"index":6}]}]},{"key":"node2066","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"typography","propertyComment":"Text utilities to control alignment, wrapping, weight, and more.","externalProperties":"usr.common-props.typography.TypographyTypes"},"index":10,"children":[{"key":"node2067","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"fontSize","propertyComment":"\n The font-size CSS property sets the size of the font.\n"},"index":0},{"key":"node2068","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"fontStyle","propertyComment":"\n The font-style CSS property sets whether a font should be styled with a normal, italic.\n","propertyValueVariants":[{"value":"normal"},{"value":"italic"}]},"index":1},{"key":"node2069","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"fontWeight","propertyComment":"\n Sets the weight (or boldness) of the font according to the application settings.\n","propertyValueVariants":[{"value":"fontWeightLight"},{"value":"fontWeightRegular"},{"value":"fontWeightMedium"},{"value":"fontWeightBold"}]},"index":2},{"key":"node2070","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"letterSpacing","propertyComment":"\n The letter-spacing CSS property sets the spacing behavior between text characters.\n"},"index":3},{"key":"node2071","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"lineHeight","propertyComment":"\n The line-height CSS property sets the height of a line box.\n It's commonly used to set the distance between lines of text.\n On block-level elements, it specifies the minimum height of line boxes within the element.\n"},"index":4},{"key":"node2072","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"textAlign","propertyComment":"\n The text-align CSS property sets the horizontal alignment of a block element or table-cell box.\n","propertyValueVariants":[{"value":"start"},{"value":"end"},{"value":"left"},{"value":"right"},{"value":"center"},{"value":"justify"},{"value":"match-parent"}]},"index":5}]}]}]},{"key":"node2073","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"display","propertyComment":"Toggle the display value of components","externalProperties":"usr.common-props.display.DisplayTypes"},"index":3,"children":[{"key":"node2074","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"display","propertyComment":"\n The display CSS property sets whether an element is treated as\n a block or inline element and the layout used for its children,\n such as flow layout, grid or flex.\n","propertyValueVariants":[{"value":"block"},{"value":"flex"},{"value":"flow"},{"value":"inline"}]},"index":0},{"key":"node2075","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"overflow","propertyComment":"\n The overflow shorthand CSS property sets what to do when\n an element's content is too big to fit in its block formatting context.\n","propertyValueVariants":[{"value":"auto"},{"value":"hidden"},{"value":"scroll"},{"value":"visible"}]},"index":1},{"key":"node2076","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"textOverflow","propertyComment":"\n The text-overflow CSS property sets how hidden overflow content is signaled to users.\n","propertyValueVariants":[{"value":"clip"},{"value":"ellipsis"}]},"index":2},{"key":"node2077","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"visibility","propertyComment":"\n The visibility CSS property shows or hides an element without changing the layout of a document.\n","propertyValueVariants":[{"value":"hidden"},{"value":"visible"},{"value":"collapse"}]},"index":3},{"key":"node2078","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"whiteSpace","propertyComment":"\n The white-space CSS property sets how white space inside an element is handled.\n","propertyValueVariants":[{"value":"normal"},{"value":"nowrap"},{"value":"pre"},{"value":"pre-wrap"},{"value":"pre-line"},{"value":"break-spaces"}]},"index":4}]},{"key":"node2079","type":"COMPONENT_PROPERTY_BOOL_TYPE","props":{"propertyName":"doNotUseInFlows","propertyComment":"\n If true then the component's instance will not be allowed to use in flows,\n and you will not see the instance name in the pages instances list\n","propertyValue":true},"index":4},{"key":"node2080","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"flexbox","propertyComment":"\n Manages the layout, alignment, and sizing of grid columns, navigation, components,\n and more with a full suite of responsive Flexbox utilities.\n","externalProperties":"usr.common-props.flexbox.FlexboxTypes"},"index":5,"children":[{"key":"node2081","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"alignContent","propertyComment":"\n The CSS align-content property sets the distribution of space between\n and around content items along a flexbox's cross-axis.\n","propertyValueVariants":[{"value":"center"},{"value":"start"},{"value":"end"},{"value":"flex-start"},{"value":"flex-end"},{"value":"baseline"},{"value":"space-between"},{"value":"space-around"},{"value":"space-evenly"},{"value":"normal"},{"value":"stretch"}]},"index":0},{"key":"node2082","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"alignItems","propertyComment":"\n The CSS align-items property sets the align-self value on all direct children as a group.\n","propertyValueVariants":[{"value":"center"},{"value":"start"},{"value":"end"},{"value":"flex-start"},{"value":"flex-end"},{"value":"baseline"},{"value":"normal"},{"value":"stretch"}]},"index":1},{"key":"node2083","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"alignSelf","propertyComment":"\n The align-self CSS property overrides a grid or flex item's align-items value.\n In Flexbox, it aligns the item on the cross axis.\n","propertyValueVariants":[{"value":"auto"},{"value":"center"},{"value":"start"},{"value":"end"},{"value":"flex-start"},{"value":"flex-end"},{"value":"baseline"},{"value":"normal"},{"value":"stretch"}]},"index":2},{"key":"node2084","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"flex","propertyComment":"\n The flex CSS property sets how a flex item will grow or shrink to fit the space available in its flex container.\n It is a shorthand for flex-grow, flex-shrink, and flex-basis.\n"},"index":3},{"key":"node2085","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"flexDirection","propertyComment":"\n The flex-direction CSS property sets how flex items are placed\n in the flex container defining the main axis and the direction (normal or reversed).\n","propertyValueVariants":[{"value":"row"},{"value":"row-reverse"},{"value":"column"},{"value":"column-reverse"}]},"index":4},{"key":"node2086","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"flexGrow","propertyComment":"\n The flex-grow CSS property sets the flex grow factor of a flex item main size.\n It specifies how much of the remaining space in the flex container should be assigned to the item\n (the flex grow factor).\n"},"index":5},{"key":"node2087","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"flexShrink","propertyComment":"\n The flex-shrink CSS property sets the flex shrink factor of a flex item.\n If the size of all flex items is larger than the flex container,\n items shrink to fit according to flex-shrink.\n"},"index":6},{"key":"node2088","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"flexWrap","propertyComment":"\n The flex-wrap CSS property sets whether flex items are forced onto one line or can wrap onto multiple lines.\n","propertyValueVariants":[{"value":"nowrap"},{"value":"wrap"},{"value":"wrap-reverse"}]},"index":7},{"key":"node2089","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"justifyContent","propertyComment":"\n The CSS justify-content property defines how the browser distributes space between and around content\n items along the main-axis of a flex container, and the inline axis of a container.\n","propertyValueVariants":[{"value":"center"},{"value":"start"},{"value":"end"},{"value":"flex-start"},{"value":"flex-end"},{"value":"left"},{"value":"right"},{"value":"normal"},{"value":"space-between"},{"value":"space-around"},{"value":"space-evenly"},{"value":"stretch"}]},"index":8},{"key":"node2090","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"order","propertyComment":"\n The order CSS property sets the order to lay out an item in a flex or grid container.\n Items in a container are sorted by ascending order value and then by their source code order.\n"},"index":9}]},{"key":"node2091","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"palette","propertyComment":"Sets the color of the component"},"index":6,"children":[{"key":"node2092","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"backgroundColor","externalProperties":"usr.common-props.color.ColorTypes"},"index":0,"children":[{"key":"node2093","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorHue","propertyComment":"A value from the collection of colors, i.e. hues","propertyValueVariants":[{"value":"primary.main"},{"value":"secondary.main"},{"value":"error.main"},{"value":"text.primary"},{"value":"text.secondary"},{"value":"text.disabled"},{"value":"text.hint"},{"value":"red"},{"value":"pink"},{"value":"purple"},{"value":"deepPurple"},{"value":"indigo"},{"value":"blue"},{"value":"lightBlue"},{"value":"cyan"},{"value":"teal"},{"value":"green"},{"value":"lightGreen"},{"value":"lime"},{"value":"yellow"},{"value":"amber"},{"value":"orange"},{"value":"deepOrange"},{"value":"brown"},{"value":"grey"},{"value":"blueGrey"}]},"index":0},{"key":"node2094","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorShade","propertyComment":"A value from the collection of colors shades","propertyValueVariants":[{"value":"50"},{"value":"100"},{"value":"200"},{"value":"300"},{"value":"400"},{"value":"500"},{"value":"600"},{"value":"700"},{"value":"800"},{"value":"900"},{"value":"A100"},{"value":"A200"},{"value":"A400"},{"value":"A700"}]},"index":1}]},{"key":"node2095","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"color","externalProperties":"usr.common-props.color.ColorTypes"},"index":1,"children":[{"key":"node2096","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorHue","propertyComment":"A value from the collection of colors, i.e. hues","propertyValueVariants":[{"value":"primary.main"},{"value":"secondary.main"},{"value":"error.main"},{"value":"text.primary"},{"value":"text.secondary"},{"value":"text.disabled"},{"value":"text.hint"},{"value":"red"},{"value":"pink"},{"value":"purple"},{"value":"deepPurple"},{"value":"indigo"},{"value":"blue"},{"value":"lightBlue"},{"value":"cyan"},{"value":"teal"},{"value":"green"},{"value":"lightGreen"},{"value":"lime"},{"value":"yellow"},{"value":"amber"},{"value":"orange"},{"value":"deepOrange"},{"value":"brown"},{"value":"grey"},{"value":"blueGrey"}]},"index":0},{"key":"node2097","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorShade","propertyComment":"A value from the collection of colors shades","propertyValueVariants":[{"value":"50"},{"value":"100"},{"value":"200"},{"value":"300"},{"value":"400"},{"value":"500"},{"value":"600"},{"value":"700"},{"value":"800"},{"value":"900"},{"value":"A100"},{"value":"A200"},{"value":"A400"},{"value":"A700"}]},"index":1}]}]},{"key":"node2098","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"positions","propertyComment":"\n Shorthand utilities for quickly configuring the position of an element.\n","externalProperties":"usr.common-props.positions.PositionsTypes"},"index":7,"children":[{"key":"node2099","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"bottom","propertyComment":"\n The bottom CSS property participates in setting the vertical position of a positioned element.\n It has no effect on non-positioned elements.\n"},"index":0},{"key":"node2100","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"left","propertyComment":"\n The left CSS property participates in specifying the horizontal position of a positioned element.\n It has no effect on non-positioned elements.\n"},"index":1},{"key":"node2101","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"position","propertyComment":"\n The position CSS property sets how an element is positioned in a document.\n The top, right, bottom, and left properties determine the final location of positioned elements.\n","propertyValueVariants":[{"value":"static"},{"value":"relative"},{"value":"absolute"},{"value":"sticky"},{"value":"fixed"}]},"index":2},{"key":"node2102","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"right","propertyComment":"\n The right CSS property participates in specifying the horizontal position of a positioned element.\n It has no effect on non-positioned elements.\n"},"index":3},{"key":"node2103","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"top","propertyComment":"\n The top CSS property participates in specifying the vertical position of a positioned element.\n It has no effect on non-positioned elements.\n"},"index":4},{"key":"node2104","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"zIndex","propertyComment":"\n The z-index CSS property sets the z-order of a positioned element and its descendants or flex items.\n Overlapping elements with a larger z-index cover those with a smaller one.\n"},"index":5}]},{"key":"node2105","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"sizing","propertyComment":"\n Easily make an element as wide or as tall (relative to its parent) with the width and height utilities.\n","externalProperties":"usr.common-props.sizing.SizingTypes"},"index":8,"children":[{"key":"node2106","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"height","propertyComment":"\n The height CSS property specifies the height of an element.\n By default, the property defines the height of the content area.\n Use a string value to specify units: 50%\n"},"index":0},{"key":"node2107","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"maxHeight","propertyComment":"\n The max-height CSS property sets the maximum height of an element.\n It prevents the used value of the height property from becoming larger than the value specified for max-height.\n Use a string value to specify units: 50%\n"},"index":1},{"key":"node2108","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"maxWidth","propertyComment":"\n The max-width CSS property sets the maximum width of an element.\n It prevents the used value of the width property from becoming larger than the value specified by max-width.\n Use a string value to specify units: 50%\n"},"index":2},{"key":"node2109","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"minHeight","propertyComment":"\n The min-height CSS property sets the minimum height of an element.\n It prevents the used value of the height property from becoming smaller than the value specified for min-height.\n Use a string value to specify units: 50%\n"},"index":3},{"key":"node2110","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"minWidth","propertyComment":"\n The min-width CSS property sets the minimum width of an element.\n It prevents the used value of the width property from becoming smaller than the value specified for min-width.\n Use a string value to specify units: 50%\n"},"index":4},{"key":"node2111","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"width","propertyComment":"\n The width CSS property sets an element's width. By default, it sets the width of the content area.\n Use a string value to specify units: 50%\n"},"index":5}]},{"key":"node2112","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"spacing","propertyComment":"\n A range of shorthand responsive margin and padding utility classes to modify an element’s appearance.\n","externalProperties":"usr.common-props.spacing.SpacingTypes"},"index":9,"children":[{"key":"node2113","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"marginSpacing","propertyComment":"\n A group of the margin properties\n Depending on the input and the theme configuration, the following transformation is applied:\n (1) number - the property is multiplied by the theme spacing value,\n (2) number - the property is used as the array index in theme spacing array,\n (3) string - the property is passed as raw CSS value\n"},"index":0,"children":[{"key":"node2114","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"margin","propertyComment":"\n The property sets the margin area.\n"},"index":0},{"key":"node2115","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginBottom","propertyComment":"\n The property sets the margin area on the bottom of an element.\n"},"index":1},{"key":"node2116","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginLeft","propertyComment":"\n The property sets the margin area on the left side of an element.\n"},"index":2},{"key":"node2117","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginRight","propertyComment":"\n The property sets the margin area on the right side of an element.\n"},"index":3},{"key":"node2118","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginTop","propertyComment":"\n The property sets the margin area on the top of an element.\n"},"index":4},{"key":"node2119","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginX","propertyComment":"\n The property sets the margin area on the left and right sides of an element.\n"},"index":5},{"key":"node2120","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginY","propertyComment":"\n The property sets the margin area on the top and bottom sides of an element.\n"},"index":6}]},{"key":"node2121","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"paddingSpacing","propertyComment":"\n A group of the padding properties.\n Depending on the input and the theme configuration, the following transformation is applied:\n (1) number - the property is multiplied by the theme spacing value,\n (2) number - the property is used as the array index in theme spacing array,\n (3) string - the property is passed as raw CSS value\n"},"index":1,"children":[{"key":"node2122","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"padding","propertyComment":"\n The property sets the padding area on all four sides of an element.\n"},"index":0},{"key":"node2123","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingBottom","propertyComment":"\n The property sets the padding area on the bottom of an element.\n"},"index":1},{"key":"node2124","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingLeft","propertyComment":"\n The property sets the padding area on the left side of an element.\n"},"index":2},{"key":"node2125","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingRight","propertyComment":"\n The property sets the padding area on the right side of an element.\n"},"index":3},{"key":"node2126","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingTop","propertyComment":"\n The property sets the padding area on the top of an element.\n"},"index":4},{"key":"node2127","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingX","propertyComment":"\n The property sets the padding area on the left and right sides of an element.\n"},"index":5},{"key":"node2128","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingY","propertyComment":"\n The property sets the padding area on the top and bottom sides of an element.\n"},"index":6}]}]},{"key":"node2129","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"typography","propertyComment":"Text utilities to control alignment, wrapping, weight, and more.","externalProperties":"usr.common-props.typography.TypographyTypes"},"index":10,"children":[{"key":"node2130","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"fontSize","propertyComment":"\n The font-size CSS property sets the size of the font.\n"},"index":0},{"key":"node2131","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"fontStyle","propertyComment":"\n The font-style CSS property sets whether a font should be styled with a normal, italic.\n","propertyValueVariants":[{"value":"normal"},{"value":"italic"}]},"index":1},{"key":"node2132","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"fontWeight","propertyComment":"\n Sets the weight (or boldness) of the font according to the application settings.\n","propertyValueVariants":[{"value":"fontWeightLight"},{"value":"fontWeightRegular"},{"value":"fontWeightMedium"},{"value":"fontWeightBold"}]},"index":2},{"key":"node2133","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"letterSpacing","propertyComment":"\n The letter-spacing CSS property sets the spacing behavior between text characters.\n"},"index":3},{"key":"node2134","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"lineHeight","propertyComment":"\n The line-height CSS property sets the height of a line box.\n It's commonly used to set the distance between lines of text.\n On block-level elements, it specifies the minimum height of line boxes within the element.\n"},"index":4},{"key":"node2135","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"textAlign","propertyComment":"\n The text-align CSS property sets the horizontal alignment of a block element or table-cell box.\n","propertyValueVariants":[{"value":"start"},{"value":"end"},{"value":"left"},{"value":"right"},{"value":"center"},{"value":"justify"},{"value":"match-parent"}]},"index":5}]}]},{"key":"node2136","type":"PAGE_COMPONENT_TYPE","props":{"componentName":"usr.in-page-components.layouts.Box","componentInstance":"box"},"index":1,"children":[{"key":"node2137","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"borders","propertyComment":"Sets style to element's border","externalProperties":"usr.common-props.borders.BordersTypes"},"index":0,"children":[{"key":"node2138","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"border","propertyComment":"\n The border-width CSS property sets the width of an element's border.\n When the value is specified, it applies the same width to all four sides.\n"},"index":0},{"key":"node2139","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"borderBottom","propertyComment":"The border-bottom-width CSS property sets the width of the bottom border of an element."},"index":1},{"key":"node2140","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"borderColor","propertyComment":"The border-color CSS property sets the color of an element's border.","externalProperties":"usr.common-props.color.ColorTypes"},"index":2,"children":[{"key":"node2141","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorHue","propertyComment":"A value from the collection of colors, i.e. hues","propertyValueVariants":[{"value":"primary.main"},{"value":"secondary.main"},{"value":"error.main"},{"value":"text.primary"},{"value":"text.secondary"},{"value":"text.disabled"},{"value":"text.hint"},{"value":"red"},{"value":"pink"},{"value":"purple"},{"value":"deepPurple"},{"value":"indigo"},{"value":"blue"},{"value":"lightBlue"},{"value":"cyan"},{"value":"teal"},{"value":"green"},{"value":"lightGreen"},{"value":"lime"},{"value":"yellow"},{"value":"amber"},{"value":"orange"},{"value":"deepOrange"},{"value":"brown"},{"value":"grey"},{"value":"blueGrey"}]},"index":0},{"key":"node2142","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorShade","propertyComment":"A value from the collection of colors shades","propertyValueVariants":[{"value":"50"},{"value":"100"},{"value":"200"},{"value":"300"},{"value":"400"},{"value":"500"},{"value":"600"},{"value":"700"},{"value":"800"},{"value":"900"},{"value":"A100"},{"value":"A200"},{"value":"A400"},{"value":"A700"}]},"index":1}]},{"key":"node2143","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"borderLeft","propertyComment":"The border-left-width CSS property sets the width of the left border of an element."},"index":3},{"key":"node2144","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"borderRadius","propertyComment":"\n The border-radius CSS property rounds the corners of an element's outer border edge.\n You can set a single radius to make circular corners, or two radii to make elliptical corners.\n Use a string value of the border radius to set units: 10% 30% 50% 70%\n"},"index":4},{"key":"node2145","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"borderRight","propertyComment":"The border-right-width CSS property sets the width of the right border of an element."},"index":5},{"key":"node2146","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"borderTop","propertyComment":"The border-top-width CSS property sets the width of the top border of an element"},"index":6}]},{"key":"node2147","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"boxShadow","propertyComment":"\n Shadow depth. It accepts values between 0 and 24 inclusive.\n","propertyValueVariants":[{"value":"0"},{"value":"1"},{"value":"2"},{"value":"3"},{"value":"4"},{"value":"5"},{"value":"6"},{"value":"7"},{"value":"8"},{"value":"9"},{"value":"10"},{"value":"11"},{"value":"12"},{"value":"13"},{"value":"14"},{"value":"15"},{"value":"16"},{"value":"17"},{"value":"18"},{"value":"19"},{"value":"20"},{"value":"21"},{"value":"22"},{"value":"23"},{"value":"24"}]},"index":1},{"key":"node2148","type":"COMPONENT_PROPERTY_ARRAY_OF_TYPE","props":{"propertyName":"content","propertyComment":"A list of the components that will be placed inside the Box component. Increase the array to have more items.","defaultChildren":[{"type":"COMPONENT_PROPERTY_ELEMENT_TYPE","props":{"componentName":"__PlaceHolder"}}]},"index":2,"children":[{"key":"node2149","type":"COMPONENT_PROPERTY_ELEMENT_TYPE","props":{"componentName":"__PlaceHolder"},"index":0}]},{"key":"node2150","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"display","propertyComment":"Toggle the display value of components","externalProperties":"usr.common-props.display.DisplayTypes"},"index":3,"children":[{"key":"node2151","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"display","propertyComment":"\n The display CSS property sets whether an element is treated as\n a block or inline element and the layout used for its children,\n such as flow layout, grid or flex.\n","propertyValueVariants":[{"value":"block"},{"value":"flex"},{"value":"flow"},{"value":"inline"}]},"index":0},{"key":"node2152","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"overflow","propertyComment":"\n The overflow shorthand CSS property sets what to do when\n an element's content is too big to fit in its block formatting context.\n","propertyValueVariants":[{"value":"auto"},{"value":"hidden"},{"value":"scroll"},{"value":"visible"}]},"index":1},{"key":"node2153","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"textOverflow","propertyComment":"\n The text-overflow CSS property sets how hidden overflow content is signaled to users.\n","propertyValueVariants":[{"value":"clip"},{"value":"ellipsis"}]},"index":2},{"key":"node2154","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"visibility","propertyComment":"\n The visibility CSS property shows or hides an element without changing the layout of a document.\n","propertyValueVariants":[{"value":"hidden"},{"value":"visible"},{"value":"collapse"}]},"index":3},{"key":"node2155","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"whiteSpace","propertyComment":"\n The white-space CSS property sets how white space inside an element is handled.\n","propertyValueVariants":[{"value":"normal"},{"value":"nowrap"},{"value":"pre"},{"value":"pre-wrap"},{"value":"pre-line"},{"value":"break-spaces"}]},"index":4}]},{"key":"node2156","type":"COMPONENT_PROPERTY_BOOL_TYPE","props":{"propertyName":"doNotUseInFlows","propertyComment":"\n If true then the component's instance will not be allowed to use in flows,\n and you will not see the instance name in the pages instances list\n","propertyValue":true},"index":4},{"key":"node2157","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"flexbox","propertyComment":"\n Manages the layout, alignment, and sizing of grid columns, navigation, components,\n and more with a full suite of responsive Flexbox utilities.\n","externalProperties":"usr.common-props.flexbox.FlexboxTypes"},"index":5,"children":[{"key":"node2158","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"alignContent","propertyComment":"\n The CSS align-content property sets the distribution of space between\n and around content items along a flexbox's cross-axis.\n","propertyValueVariants":[{"value":"center"},{"value":"start"},{"value":"end"},{"value":"flex-start"},{"value":"flex-end"},{"value":"baseline"},{"value":"space-between"},{"value":"space-around"},{"value":"space-evenly"},{"value":"normal"},{"value":"stretch"}]},"index":0},{"key":"node2159","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"alignItems","propertyComment":"\n The CSS align-items property sets the align-self value on all direct children as a group.\n","propertyValueVariants":[{"value":"center"},{"value":"start"},{"value":"end"},{"value":"flex-start"},{"value":"flex-end"},{"value":"baseline"},{"value":"normal"},{"value":"stretch"}]},"index":1},{"key":"node2160","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"alignSelf","propertyComment":"\n The align-self CSS property overrides a grid or flex item's align-items value.\n In Flexbox, it aligns the item on the cross axis.\n","propertyValueVariants":[{"value":"auto"},{"value":"center"},{"value":"start"},{"value":"end"},{"value":"flex-start"},{"value":"flex-end"},{"value":"baseline"},{"value":"normal"},{"value":"stretch"}]},"index":2},{"key":"node2161","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"flex","propertyComment":"\n The flex CSS property sets how a flex item will grow or shrink to fit the space available in its flex container.\n It is a shorthand for flex-grow, flex-shrink, and flex-basis.\n"},"index":3},{"key":"node2162","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"flexDirection","propertyComment":"\n The flex-direction CSS property sets how flex items are placed\n in the flex container defining the main axis and the direction (normal or reversed).\n","propertyValueVariants":[{"value":"row"},{"value":"row-reverse"},{"value":"column"},{"value":"column-reverse"}]},"index":4},{"key":"node2163","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"flexGrow","propertyComment":"\n The flex-grow CSS property sets the flex grow factor of a flex item main size.\n It specifies how much of the remaining space in the flex container should be assigned to the item\n (the flex grow factor).\n"},"index":5},{"key":"node2164","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"flexShrink","propertyComment":"\n The flex-shrink CSS property sets the flex shrink factor of a flex item.\n If the size of all flex items is larger than the flex container,\n items shrink to fit according to flex-shrink.\n"},"index":6},{"key":"node2165","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"flexWrap","propertyComment":"\n The flex-wrap CSS property sets whether flex items are forced onto one line or can wrap onto multiple lines.\n","propertyValueVariants":[{"value":"nowrap"},{"value":"wrap"},{"value":"wrap-reverse"}]},"index":7},{"key":"node2166","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"justifyContent","propertyComment":"\n The CSS justify-content property defines how the browser distributes space between and around content\n items along the main-axis of a flex container, and the inline axis of a container.\n","propertyValueVariants":[{"value":"center"},{"value":"start"},{"value":"end"},{"value":"flex-start"},{"value":"flex-end"},{"value":"left"},{"value":"right"},{"value":"normal"},{"value":"space-between"},{"value":"space-around"},{"value":"space-evenly"},{"value":"stretch"}]},"index":8},{"key":"node2167","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"order","propertyComment":"\n The order CSS property sets the order to lay out an item in a flex or grid container.\n Items in a container are sorted by ascending order value and then by their source code order.\n"},"index":9}]},{"key":"node2168","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"palette","propertyComment":"Sets the color of the component"},"index":6,"children":[{"key":"node2169","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"backgroundColor","externalProperties":"usr.common-props.color.ColorTypes"},"index":0,"children":[{"key":"node2170","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorHue","propertyComment":"A value from the collection of colors, i.e. hues","propertyValueVariants":[{"value":"primary.main"},{"value":"secondary.main"},{"value":"error.main"},{"value":"text.primary"},{"value":"text.secondary"},{"value":"text.disabled"},{"value":"text.hint"},{"value":"red"},{"value":"pink"},{"value":"purple"},{"value":"deepPurple"},{"value":"indigo"},{"value":"blue"},{"value":"lightBlue"},{"value":"cyan"},{"value":"teal"},{"value":"green"},{"value":"lightGreen"},{"value":"lime"},{"value":"yellow"},{"value":"amber"},{"value":"orange"},{"value":"deepOrange"},{"value":"brown"},{"value":"grey"},{"value":"blueGrey"}]},"index":0},{"key":"node2171","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorShade","propertyComment":"A value from the collection of colors shades","propertyValueVariants":[{"value":"50"},{"value":"100"},{"value":"200"},{"value":"300"},{"value":"400"},{"value":"500"},{"value":"600"},{"value":"700"},{"value":"800"},{"value":"900"},{"value":"A100"},{"value":"A200"},{"value":"A400"},{"value":"A700"}]},"index":1}]},{"key":"node2172","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"color","externalProperties":"usr.common-props.color.ColorTypes"},"index":1,"children":[{"key":"node2173","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorHue","propertyComment":"A value from the collection of colors, i.e. hues","propertyValueVariants":[{"value":"primary.main"},{"value":"secondary.main"},{"value":"error.main"},{"value":"text.primary"},{"value":"text.secondary"},{"value":"text.disabled"},{"value":"text.hint"},{"value":"red"},{"value":"pink"},{"value":"purple"},{"value":"deepPurple"},{"value":"indigo"},{"value":"blue"},{"value":"lightBlue"},{"value":"cyan"},{"value":"teal"},{"value":"green"},{"value":"lightGreen"},{"value":"lime"},{"value":"yellow"},{"value":"amber"},{"value":"orange"},{"value":"deepOrange"},{"value":"brown"},{"value":"grey"},{"value":"blueGrey"}]},"index":0},{"key":"node2174","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorShade","propertyComment":"A value from the collection of colors shades","propertyValueVariants":[{"value":"50"},{"value":"100"},{"value":"200"},{"value":"300"},{"value":"400"},{"value":"500"},{"value":"600"},{"value":"700"},{"value":"800"},{"value":"900"},{"value":"A100"},{"value":"A200"},{"value":"A400"},{"value":"A700"}]},"index":1}]}]},{"key":"node2175","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"positions","propertyComment":"\n Shorthand utilities for quickly configuring the position of an element.\n","externalProperties":"usr.common-props.positions.PositionsTypes"},"index":7,"children":[{"key":"node2176","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"bottom","propertyComment":"\n The bottom CSS property participates in setting the vertical position of a positioned element.\n It has no effect on non-positioned elements.\n"},"index":0},{"key":"node2177","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"left","propertyComment":"\n The left CSS property participates in specifying the horizontal position of a positioned element.\n It has no effect on non-positioned elements.\n"},"index":1},{"key":"node2178","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"position","propertyComment":"\n The position CSS property sets how an element is positioned in a document.\n The top, right, bottom, and left properties determine the final location of positioned elements.\n","propertyValueVariants":[{"value":"static"},{"value":"relative"},{"value":"absolute"},{"value":"sticky"},{"value":"fixed"}]},"index":2},{"key":"node2179","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"right","propertyComment":"\n The right CSS property participates in specifying the horizontal position of a positioned element.\n It has no effect on non-positioned elements.\n"},"index":3},{"key":"node2180","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"top","propertyComment":"\n The top CSS property participates in specifying the vertical position of a positioned element.\n It has no effect on non-positioned elements.\n"},"index":4},{"key":"node2181","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"zIndex","propertyComment":"\n The z-index CSS property sets the z-order of a positioned element and its descendants or flex items.\n Overlapping elements with a larger z-index cover those with a smaller one.\n"},"index":5}]},{"key":"node2182","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"sizing","propertyComment":"\n Easily make an element as wide or as tall (relative to its parent) with the width and height utilities.\n","externalProperties":"usr.common-props.sizing.SizingTypes"},"index":8,"children":[{"key":"node2183","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"height","propertyComment":"\n The height CSS property specifies the height of an element.\n By default, the property defines the height of the content area.\n Use a string value to specify units: 50%\n"},"index":0},{"key":"node2184","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"maxHeight","propertyComment":"\n The max-height CSS property sets the maximum height of an element.\n It prevents the used value of the height property from becoming larger than the value specified for max-height.\n Use a string value to specify units: 50%\n"},"index":1},{"key":"node2185","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"maxWidth","propertyComment":"\n The max-width CSS property sets the maximum width of an element.\n It prevents the used value of the width property from becoming larger than the value specified by max-width.\n Use a string value to specify units: 50%\n"},"index":2},{"key":"node2186","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"minHeight","propertyComment":"\n The min-height CSS property sets the minimum height of an element.\n It prevents the used value of the height property from becoming smaller than the value specified for min-height.\n Use a string value to specify units: 50%\n"},"index":3},{"key":"node2187","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"minWidth","propertyComment":"\n The min-width CSS property sets the minimum width of an element.\n It prevents the used value of the width property from becoming smaller than the value specified for min-width.\n Use a string value to specify units: 50%\n"},"index":4},{"key":"node2188","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"width","propertyComment":"\n The width CSS property sets an element's width. By default, it sets the width of the content area.\n Use a string value to specify units: 50%\n"},"index":5}]},{"key":"node2189","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"spacing","propertyComment":"\n A range of shorthand responsive margin and padding utility classes to modify an element’s appearance.\n","externalProperties":"usr.common-props.spacing.SpacingTypes"},"index":9,"children":[{"key":"node2190","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"marginSpacing","propertyComment":"\n A group of the margin properties\n Depending on the input and the theme configuration, the following transformation is applied:\n (1) number - the property is multiplied by the theme spacing value,\n (2) number - the property is used as the array index in theme spacing array,\n (3) string - the property is passed as raw CSS value\n"},"index":0,"children":[{"key":"node2191","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"margin","propertyComment":"\n The property sets the margin area.\n"},"index":0},{"key":"node2192","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginBottom","propertyComment":"\n The property sets the margin area on the bottom of an element.\n"},"index":1},{"key":"node2193","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginLeft","propertyComment":"\n The property sets the margin area on the left side of an element.\n"},"index":2},{"key":"node2194","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginRight","propertyComment":"\n The property sets the margin area on the right side of an element.\n"},"index":3},{"key":"node2195","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginTop","propertyComment":"\n The property sets the margin area on the top of an element.\n"},"index":4},{"key":"node2196","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginX","propertyComment":"\n The property sets the margin area on the left and right sides of an element.\n"},"index":5},{"key":"node2197","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginY","propertyComment":"\n The property sets the margin area on the top and bottom sides of an element.\n"},"index":6}]},{"key":"node2198","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"paddingSpacing","propertyComment":"\n A group of the padding properties.\n Depending on the input and the theme configuration, the following transformation is applied:\n (1) number - the property is multiplied by the theme spacing value,\n (2) number - the property is used as the array index in theme spacing array,\n (3) string - the property is passed as raw CSS value\n"},"index":1,"children":[{"key":"node2199","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"padding","propertyComment":"\n The property sets the padding area on all four sides of an element.\n"},"index":0},{"key":"node2200","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingBottom","propertyComment":"\n The property sets the padding area on the bottom of an element.\n"},"index":1},{"key":"node2201","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingLeft","propertyComment":"\n The property sets the padding area on the left side of an element.\n"},"index":2},{"key":"node2202","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingRight","propertyComment":"\n The property sets the padding area on the right side of an element.\n"},"index":3},{"key":"node2203","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingTop","propertyComment":"\n The property sets the padding area on the top of an element.\n"},"index":4},{"key":"node2204","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingX","propertyComment":"\n The property sets the padding area on the left and right sides of an element.\n"},"index":5},{"key":"node2205","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingY","propertyComment":"\n The property sets the padding area on the top and bottom sides of an element.\n"},"index":6}]}]},{"key":"node2206","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"typography","propertyComment":"Text utilities to control alignment, wrapping, weight, and more.","externalProperties":"usr.common-props.typography.TypographyTypes"},"index":10,"children":[{"key":"node2207","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"fontSize","propertyComment":"\n The font-size CSS property sets the size of the font.\n"},"index":0},{"key":"node2208","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"fontStyle","propertyComment":"\n The font-style CSS property sets whether a font should be styled with a normal, italic.\n","propertyValueVariants":[{"value":"normal"},{"value":"italic"}]},"index":1},{"key":"node2209","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"fontWeight","propertyComment":"\n Sets the weight (or boldness) of the font according to the application settings.\n","propertyValueVariants":[{"value":"fontWeightLight"},{"value":"fontWeightRegular"},{"value":"fontWeightMedium"},{"value":"fontWeightBold"}]},"index":2},{"key":"node2210","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"letterSpacing","propertyComment":"\n The letter-spacing CSS property sets the spacing behavior between text characters.\n"},"index":3},{"key":"node2211","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"lineHeight","propertyComment":"\n The line-height CSS property sets the height of a line box.\n It's commonly used to set the distance between lines of text.\n On block-level elements, it specifies the minimum height of line boxes within the element.\n"},"index":4},{"key":"node2212","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"textAlign","propertyComment":"\n The text-align CSS property sets the horizontal alignment of a block element or table-cell box.\n","propertyValueVariants":[{"value":"start"},{"value":"end"},{"value":"left"},{"value":"right"},{"value":"center"},{"value":"justify"},{"value":"match-parent"}]},"index":5}]}]}]},{"key":"node2213","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"display","propertyComment":"Toggle the display value of components","externalProperties":"usr.common-props.display.DisplayTypes"},"index":3,"children":[{"key":"node2214","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"display","propertyComment":"\n The display CSS property sets whether an element is treated as\n a block or inline element and the layout used for its children,\n such as flow layout, grid or flex.\n","propertyValueVariants":[{"value":"block"},{"value":"flex"},{"value":"flow"},{"value":"inline"}],"propertyValue":"flex"},"index":0},{"key":"node2215","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"overflow","propertyComment":"\n The overflow shorthand CSS property sets what to do when\n an element's content is too big to fit in its block formatting context.\n","propertyValueVariants":[{"value":"auto"},{"value":"hidden"},{"value":"scroll"},{"value":"visible"}]},"index":1},{"key":"node2216","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"textOverflow","propertyComment":"\n The text-overflow CSS property sets how hidden overflow content is signaled to users.\n","propertyValueVariants":[{"value":"clip"},{"value":"ellipsis"}]},"index":2},{"key":"node2217","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"visibility","propertyComment":"\n The visibility CSS property shows or hides an element without changing the layout of a document.\n","propertyValueVariants":[{"value":"hidden"},{"value":"visible"},{"value":"collapse"}]},"index":3},{"key":"node2218","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"whiteSpace","propertyComment":"\n The white-space CSS property sets how white space inside an element is handled.\n","propertyValueVariants":[{"value":"normal"},{"value":"nowrap"},{"value":"pre"},{"value":"pre-wrap"},{"value":"pre-line"},{"value":"break-spaces"}]},"index":4}]},{"key":"node2219","type":"COMPONENT_PROPERTY_BOOL_TYPE","props":{"propertyName":"doNotUseInFlows","propertyComment":"\n If true then the component's instance will not be allowed to use in flows,\n and you will not see the instance name in the pages instances list\n","propertyValue":true},"index":4},{"key":"node2220","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"flexbox","propertyComment":"\n Manages the layout, alignment, and sizing of grid columns, navigation, components,\n and more with a full suite of responsive Flexbox utilities.\n","externalProperties":"usr.common-props.flexbox.FlexboxTypes"},"index":5,"children":[{"key":"node2221","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"alignContent","propertyComment":"\n The CSS align-content property sets the distribution of space between\n and around content items along a flexbox's cross-axis.\n","propertyValueVariants":[{"value":"center"},{"value":"start"},{"value":"end"},{"value":"flex-start"},{"value":"flex-end"},{"value":"baseline"},{"value":"space-between"},{"value":"space-around"},{"value":"space-evenly"},{"value":"normal"},{"value":"stretch"}]},"index":0},{"key":"node2222","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"alignItems","propertyComment":"\n The CSS align-items property sets the align-self value on all direct children as a group.\n","propertyValueVariants":[{"value":"center"},{"value":"start"},{"value":"end"},{"value":"flex-start"},{"value":"flex-end"},{"value":"baseline"},{"value":"normal"},{"value":"stretch"}]},"index":1},{"key":"node2223","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"alignSelf","propertyComment":"\n The align-self CSS property overrides a grid or flex item's align-items value.\n In Flexbox, it aligns the item on the cross axis.\n","propertyValueVariants":[{"value":"auto"},{"value":"center"},{"value":"start"},{"value":"end"},{"value":"flex-start"},{"value":"flex-end"},{"value":"baseline"},{"value":"normal"},{"value":"stretch"}]},"index":2},{"key":"node2224","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"flex","propertyComment":"\n The flex CSS property sets how a flex item will grow or shrink to fit the space available in its flex container.\n It is a shorthand for flex-grow, flex-shrink, and flex-basis.\n"},"index":3},{"key":"node2225","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"flexDirection","propertyComment":"\n The flex-direction CSS property sets how flex items are placed\n in the flex container defining the main axis and the direction (normal or reversed).\n","propertyValueVariants":[{"value":"row"},{"value":"row-reverse"},{"value":"column"},{"value":"column-reverse"}],"propertyValue":"column"},"index":4},{"key":"node2226","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"flexGrow","propertyComment":"\n The flex-grow CSS property sets the flex grow factor of a flex item main size.\n It specifies how much of the remaining space in the flex container should be assigned to the item\n (the flex grow factor).\n"},"index":5},{"key":"node2227","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"flexShrink","propertyComment":"\n The flex-shrink CSS property sets the flex shrink factor of a flex item.\n If the size of all flex items is larger than the flex container,\n items shrink to fit according to flex-shrink.\n"},"index":6},{"key":"node2228","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"flexWrap","propertyComment":"\n The flex-wrap CSS property sets whether flex items are forced onto one line or can wrap onto multiple lines.\n","propertyValueVariants":[{"value":"nowrap"},{"value":"wrap"},{"value":"wrap-reverse"}]},"index":7},{"key":"node2229","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"justifyContent","propertyComment":"\n The CSS justify-content property defines how the browser distributes space between and around content\n items along the main-axis of a flex container, and the inline axis of a container.\n","propertyValueVariants":[{"value":"center"},{"value":"start"},{"value":"end"},{"value":"flex-start"},{"value":"flex-end"},{"value":"left"},{"value":"right"},{"value":"normal"},{"value":"space-between"},{"value":"space-around"},{"value":"space-evenly"},{"value":"stretch"}]},"index":8},{"key":"node2230","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"order","propertyComment":"\n The order CSS property sets the order to lay out an item in a flex or grid container.\n Items in a container are sorted by ascending order value and then by their source code order.\n"},"index":9}]},{"key":"node2231","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"palette","propertyComment":"Sets the color of the component"},"index":6,"children":[{"key":"node2232","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"backgroundColor","externalProperties":"usr.common-props.color.ColorTypes"},"index":0,"children":[{"key":"node2233","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorHue","propertyComment":"A value from the collection of colors, i.e. hues","propertyValueVariants":[{"value":"primary.main"},{"value":"secondary.main"},{"value":"error.main"},{"value":"text.primary"},{"value":"text.secondary"},{"value":"text.disabled"},{"value":"text.hint"},{"value":"red"},{"value":"pink"},{"value":"purple"},{"value":"deepPurple"},{"value":"indigo"},{"value":"blue"},{"value":"lightBlue"},{"value":"cyan"},{"value":"teal"},{"value":"green"},{"value":"lightGreen"},{"value":"lime"},{"value":"yellow"},{"value":"amber"},{"value":"orange"},{"value":"deepOrange"},{"value":"brown"},{"value":"grey"},{"value":"blueGrey"}]},"index":0},{"key":"node2234","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorShade","propertyComment":"A value from the collection of colors shades","propertyValueVariants":[{"value":"50"},{"value":"100"},{"value":"200"},{"value":"300"},{"value":"400"},{"value":"500"},{"value":"600"},{"value":"700"},{"value":"800"},{"value":"900"},{"value":"A100"},{"value":"A200"},{"value":"A400"},{"value":"A700"}]},"index":1}]},{"key":"node2235","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"color","externalProperties":"usr.common-props.color.ColorTypes"},"index":1,"children":[{"key":"node2236","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorHue","propertyComment":"A value from the collection of colors, i.e. hues","propertyValueVariants":[{"value":"primary.main"},{"value":"secondary.main"},{"value":"error.main"},{"value":"text.primary"},{"value":"text.secondary"},{"value":"text.disabled"},{"value":"text.hint"},{"value":"red"},{"value":"pink"},{"value":"purple"},{"value":"deepPurple"},{"value":"indigo"},{"value":"blue"},{"value":"lightBlue"},{"value":"cyan"},{"value":"teal"},{"value":"green"},{"value":"lightGreen"},{"value":"lime"},{"value":"yellow"},{"value":"amber"},{"value":"orange"},{"value":"deepOrange"},{"value":"brown"},{"value":"grey"},{"value":"blueGrey"}]},"index":0},{"key":"node2237","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorShade","propertyComment":"A value from the collection of colors shades","propertyValueVariants":[{"value":"50"},{"value":"100"},{"value":"200"},{"value":"300"},{"value":"400"},{"value":"500"},{"value":"600"},{"value":"700"},{"value":"800"},{"value":"900"},{"value":"A100"},{"value":"A200"},{"value":"A400"},{"value":"A700"}]},"index":1}]}]},{"key":"node2238","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"positions","propertyComment":"\n Shorthand utilities for quickly configuring the position of an element.\n","externalProperties":"usr.common-props.positions.PositionsTypes"},"index":7,"children":[{"key":"node2239","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"bottom","propertyComment":"\n The bottom CSS property participates in setting the vertical position of a positioned element.\n It has no effect on non-positioned elements.\n"},"index":0},{"key":"node2240","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"left","propertyComment":"\n The left CSS property participates in specifying the horizontal position of a positioned element.\n It has no effect on non-positioned elements.\n"},"index":1},{"key":"node2241","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"position","propertyComment":"\n The position CSS property sets how an element is positioned in a document.\n The top, right, bottom, and left properties determine the final location of positioned elements.\n","propertyValueVariants":[{"value":"static"},{"value":"relative"},{"value":"absolute"},{"value":"sticky"},{"value":"fixed"}],"propertyValue":"relative"},"index":2},{"key":"node2242","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"right","propertyComment":"\n The right CSS property participates in specifying the horizontal position of a positioned element.\n It has no effect on non-positioned elements.\n"},"index":3},{"key":"node2243","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"top","propertyComment":"\n The top CSS property participates in specifying the vertical position of a positioned element.\n It has no effect on non-positioned elements.\n"},"index":4},{"key":"node2244","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"zIndex","propertyComment":"\n The z-index CSS property sets the z-order of a positioned element and its descendants or flex items.\n Overlapping elements with a larger z-index cover those with a smaller one.\n"},"index":5}]},{"key":"node2245","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"sizing","propertyComment":"\n Easily make an element as wide or as tall (relative to its parent) with the width and height utilities.\n","externalProperties":"usr.common-props.sizing.SizingTypes"},"index":8,"children":[{"key":"node2246","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"height","propertyComment":"\n The height CSS property specifies the height of an element.\n By default, the property defines the height of the content area.\n Use a string value to specify units: 50%\n","propertyValue":"100%"},"index":0},{"key":"node2247","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"maxHeight","propertyComment":"\n The max-height CSS property sets the maximum height of an element.\n It prevents the used value of the height property from becoming larger than the value specified for max-height.\n Use a string value to specify units: 50%\n"},"index":1},{"key":"node2248","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"maxWidth","propertyComment":"\n The max-width CSS property sets the maximum width of an element.\n It prevents the used value of the width property from becoming larger than the value specified by max-width.\n Use a string value to specify units: 50%\n"},"index":2},{"key":"node2249","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"minHeight","propertyComment":"\n The min-height CSS property sets the minimum height of an element.\n It prevents the used value of the height property from becoming smaller than the value specified for min-height.\n Use a string value to specify units: 50%\n"},"index":3},{"key":"node2250","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"minWidth","propertyComment":"\n The min-width CSS property sets the minimum width of an element.\n It prevents the used value of the width property from becoming smaller than the value specified for min-width.\n Use a string value to specify units: 50%\n"},"index":4},{"key":"node2251","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"width","propertyComment":"\n The width CSS property sets an element's width. By default, it sets the width of the content area.\n Use a string value to specify units: 50%\n"},"index":5}]},{"key":"node2252","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"spacing","propertyComment":"\n A range of shorthand responsive margin and padding utility classes to modify an element’s appearance.\n","externalProperties":"usr.common-props.spacing.SpacingTypes"},"index":9,"children":[{"key":"node2253","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"marginSpacing","propertyComment":"\n A group of the margin properties\n Depending on the input and the theme configuration, the following transformation is applied:\n (1) number - the property is multiplied by the theme spacing value,\n (2) number - the property is used as the array index in theme spacing array,\n (3) string - the property is passed as raw CSS value\n"},"index":0,"children":[{"key":"node2254","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"margin","propertyComment":"\n The property sets the margin area.\n"},"index":0},{"key":"node2255","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginBottom","propertyComment":"\n The property sets the margin area on the bottom of an element.\n"},"index":1},{"key":"node2256","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginLeft","propertyComment":"\n The property sets the margin area on the left side of an element.\n"},"index":2},{"key":"node2257","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginRight","propertyComment":"\n The property sets the margin area on the right side of an element.\n"},"index":3},{"key":"node2258","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginTop","propertyComment":"\n The property sets the margin area on the top of an element.\n"},"index":4},{"key":"node2259","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginX","propertyComment":"\n The property sets the margin area on the left and right sides of an element.\n"},"index":5},{"key":"node2260","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginY","propertyComment":"\n The property sets the margin area on the top and bottom sides of an element.\n"},"index":6}]},{"key":"node2261","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"paddingSpacing","propertyComment":"\n A group of the padding properties.\n Depending on the input and the theme configuration, the following transformation is applied:\n (1) number - the property is multiplied by the theme spacing value,\n (2) number - the property is used as the array index in theme spacing array,\n (3) string - the property is passed as raw CSS value\n"},"index":1,"children":[{"key":"node2262","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"padding","propertyComment":"\n The property sets the padding area on all four sides of an element.\n"},"index":0},{"key":"node2263","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingBottom","propertyComment":"\n The property sets the padding area on the bottom of an element.\n"},"index":1},{"key":"node2264","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingLeft","propertyComment":"\n The property sets the padding area on the left side of an element.\n"},"index":2},{"key":"node2265","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingRight","propertyComment":"\n The property sets the padding area on the right side of an element.\n"},"index":3},{"key":"node2266","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingTop","propertyComment":"\n The property sets the padding area on the top of an element.\n"},"index":4},{"key":"node2267","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingX","propertyComment":"\n The property sets the padding area on the left and right sides of an element.\n"},"index":5},{"key":"node2268","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingY","propertyComment":"\n The property sets the padding area on the top and bottom sides of an element.\n"},"index":6}]}]},{"key":"node2269","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"typography","propertyComment":"Text utilities to control alignment, wrapping, weight, and more.","externalProperties":"usr.common-props.typography.TypographyTypes"},"index":10,"children":[{"key":"node2270","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"fontSize","propertyComment":"\n The font-size CSS property sets the size of the font.\n"},"index":0},{"key":"node2271","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"fontStyle","propertyComment":"\n The font-style CSS property sets whether a font should be styled with a normal, italic.\n","propertyValueVariants":[{"value":"normal"},{"value":"italic"}]},"index":1},{"key":"node2272","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"fontWeight","propertyComment":"\n Sets the weight (or boldness) of the font according to the application settings.\n","propertyValueVariants":[{"value":"fontWeightLight"},{"value":"fontWeightRegular"},{"value":"fontWeightMedium"},{"value":"fontWeightBold"}]},"index":2},{"key":"node2273","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"letterSpacing","propertyComment":"\n The letter-spacing CSS property sets the spacing behavior between text characters.\n"},"index":3},{"key":"node2274","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"lineHeight","propertyComment":"\n The line-height CSS property sets the height of a line box.\n It's commonly used to set the distance between lines of text.\n On block-level elements, it specifies the minimum height of line boxes within the element.\n"},"index":4},{"key":"node2275","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"textAlign","propertyComment":"\n The text-align CSS property sets the horizontal alignment of a block element or table-cell box.\n","propertyValueVariants":[{"value":"start"},{"value":"end"},{"value":"left"},{"value":"right"},{"value":"center"},{"value":"justify"},{"value":"match-parent"}]},"index":5}]}]}}