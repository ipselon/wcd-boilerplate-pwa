{"templateName":"box-probe-2","componentsTree":{"key":"node1","type":"PAGE_COMPONENT_TYPE","props":{"componentName":"usr.in-page-components.layouts.Box","componentInstance":"box"},"index":0,"children":[{"key":"node2","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"borders","propertyComment":"Sets style to element's border","externalProperties":"usr.common-props.borders.BordersTypes"},"index":0,"children":[{"key":"node3","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"border","propertyComment":"\n The border-width CSS property sets the width of an element's border.\n When the value is specified, it applies the same width to all four sides.\n","propertyValue":1},"index":0},{"key":"node4","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"borderBottom","propertyComment":"The border-bottom-width CSS property sets the width of the bottom border of an element."},"index":1},{"key":"node5","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"borderColor","propertyComment":"The border-color CSS property sets the color of an element's border.","externalProperties":"usr.common-props.color.ColorTypes"},"index":2,"children":[{"key":"node6","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorHue","propertyComment":"A value from the collection of colors, i.e. hues","propertyValueVariants":[{"value":"primary.main"},{"value":"secondary.main"},{"value":"error.main"},{"value":"text.primary"},{"value":"text.secondary"},{"value":"text.disabled"},{"value":"text.hint"},{"value":"red"},{"value":"pink"},{"value":"purple"},{"value":"deepPurple"},{"value":"indigo"},{"value":"blue"},{"value":"lightBlue"},{"value":"cyan"},{"value":"teal"},{"value":"green"},{"value":"lightGreen"},{"value":"lime"},{"value":"yellow"},{"value":"amber"},{"value":"orange"},{"value":"deepOrange"},{"value":"brown"},{"value":"grey"},{"value":"blueGrey"}]},"index":0},{"key":"node7","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorShade","propertyComment":"A value from the collection of colors shades","propertyValueVariants":[{"value":"50"},{"value":"100"},{"value":"200"},{"value":"300"},{"value":"400"},{"value":"500"},{"value":"600"},{"value":"700"},{"value":"800"},{"value":"900"},{"value":"A100"},{"value":"A200"},{"value":"A400"},{"value":"A700"}]},"index":1}]},{"key":"node8","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"borderLeft","propertyComment":"The border-left-width CSS property sets the width of the left border of an element."},"index":3},{"key":"node9","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"borderRadius","propertyComment":"\n The border-radius CSS property rounds the corners of an element's outer border edge.\n You can set a single radius to make circular corners, or two radii to make elliptical corners.\n Use a string value of the border radius to set units: 10% 30% 50% 70%\n"},"index":4},{"key":"node10","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"borderRight","propertyComment":"The border-right-width CSS property sets the width of the right border of an element."},"index":5},{"key":"node11","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"borderTop","propertyComment":"The border-top-width CSS property sets the width of the top border of an element"},"index":6}]},{"key":"node12","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"boxShadow","propertyComment":"\n Shadow depth. It accepts values between 0 and 24 inclusive.\n","propertyValueVariants":[{"value":"0"},{"value":"1"},{"value":"2"},{"value":"3"},{"value":"4"},{"value":"5"},{"value":"6"},{"value":"7"},{"value":"8"},{"value":"9"},{"value":"10"},{"value":"11"},{"value":"12"},{"value":"13"},{"value":"14"},{"value":"15"},{"value":"16"},{"value":"17"},{"value":"18"},{"value":"19"},{"value":"20"},{"value":"21"},{"value":"22"},{"value":"23"},{"value":"24"}]},"index":1},{"key":"node13","type":"COMPONENT_PROPERTY_ARRAY_OF_TYPE","props":{"propertyName":"content","propertyComment":"A list of the components that will be placed inside the Box component. Increase the array to have more items.","defaultChildren":[{"type":"COMPONENT_PROPERTY_ELEMENT_TYPE","props":{"componentName":"__PlaceHolder"}}]},"index":2,"children":[{"key":"node14","type":"COMPONENT_PROPERTY_ELEMENT_TYPE","props":{"componentName":"__PlaceHolder"},"index":0}]},{"key":"node15","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"display","propertyComment":"Toggle the display value of components","externalProperties":"usr.common-props.display.DisplayTypes"},"index":3,"children":[{"key":"node16","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"display","propertyComment":"\n The display CSS property sets whether an element is treated as\n a block or inline element and the layout used for its children,\n such as flow layout, grid or flex.\n","propertyValueVariants":[{"value":"block"},{"value":"flex"},{"value":"flow"},{"value":"inline"}]},"index":0},{"key":"node17","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"overflow","propertyComment":"\n The overflow shorthand CSS property sets what to do when\n an element's content is too big to fit in its block formatting context.\n","propertyValueVariants":[{"value":"auto"},{"value":"hidden"},{"value":"scroll"},{"value":"visible"}]},"index":1},{"key":"node18","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"textOverflow","propertyComment":"\n The text-overflow CSS property sets how hidden overflow content is signaled to users.\n","propertyValueVariants":[{"value":"clip"},{"value":"ellipsis"}]},"index":2},{"key":"node19","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"visibility","propertyComment":"\n The visibility CSS property shows or hides an element without changing the layout of a document.\n","propertyValueVariants":[{"value":"hidden"},{"value":"visible"},{"value":"collapse"}]},"index":3},{"key":"node20","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"whiteSpace","propertyComment":"\n The white-space CSS property sets how white space inside an element is handled.\n","propertyValueVariants":[{"value":"normal"},{"value":"nowrap"},{"value":"pre"},{"value":"pre-wrap"},{"value":"pre-line"},{"value":"break-spaces"}]},"index":4}]},{"key":"node21","type":"COMPONENT_PROPERTY_BOOL_TYPE","props":{"propertyName":"doNotUseInFlows","propertyComment":"\n If true then the component's instance will not be allowed to use in flows,\n and you will not see the instance name in the pages instances list\n","propertyValue":true},"index":4},{"key":"node22","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"flexbox","propertyComment":"\n Manages the layout, alignment, and sizing of grid columns, navigation, components,\n and more with a full suite of responsive Flexbox utilities.\n","externalProperties":"usr.common-props.flexbox.FlexboxTypes"},"index":5,"children":[{"key":"node23","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"alignContent","propertyComment":"\n The CSS align-content property sets the distribution of space between\n and around content items along a flexbox's cross-axis.\n","propertyValueVariants":[{"value":"center"},{"value":"start"},{"value":"end"},{"value":"flex-start"},{"value":"flex-end"},{"value":"baseline"},{"value":"space-between"},{"value":"space-around"},{"value":"space-evenly"},{"value":"normal"},{"value":"stretch"}]},"index":0},{"key":"node24","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"alignItems","propertyComment":"\n The CSS align-items property sets the align-self value on all direct children as a group.\n","propertyValueVariants":[{"value":"center"},{"value":"start"},{"value":"end"},{"value":"flex-start"},{"value":"flex-end"},{"value":"baseline"},{"value":"normal"},{"value":"stretch"}]},"index":1},{"key":"node25","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"alignSelf","propertyComment":"\n The align-self CSS property overrides a grid or flex item's align-items value.\n In Flexbox, it aligns the item on the cross axis.\n","propertyValueVariants":[{"value":"auto"},{"value":"center"},{"value":"start"},{"value":"end"},{"value":"flex-start"},{"value":"flex-end"},{"value":"baseline"},{"value":"normal"},{"value":"stretch"}]},"index":2},{"key":"node26","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"flex","propertyComment":"\n The flex CSS property sets how a flex item will grow or shrink to fit the space available in its flex container.\n It is a shorthand for flex-grow, flex-shrink, and flex-basis.\n"},"index":3},{"key":"node27","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"flexDirection","propertyComment":"\n The flex-direction CSS property sets how flex items are placed\n in the flex container defining the main axis and the direction (normal or reversed).\n","propertyValueVariants":[{"value":"row"},{"value":"row-reverse"},{"value":"column"},{"value":"column-reverse"}]},"index":4},{"key":"node28","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"flexGrow","propertyComment":"\n The flex-grow CSS property sets the flex grow factor of a flex item main size.\n It specifies how much of the remaining space in the flex container should be assigned to the item\n (the flex grow factor).\n"},"index":5},{"key":"node29","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"flexShrink","propertyComment":"\n The flex-shrink CSS property sets the flex shrink factor of a flex item.\n If the size of all flex items is larger than the flex container,\n items shrink to fit according to flex-shrink.\n"},"index":6},{"key":"node30","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"flexWrap","propertyComment":"\n The flex-wrap CSS property sets whether flex items are forced onto one line or can wrap onto multiple lines.\n","propertyValueVariants":[{"value":"nowrap"},{"value":"wrap"},{"value":"wrap-reverse"}]},"index":7},{"key":"node31","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"justifyContent","propertyComment":"\n The CSS justify-content property defines how the browser distributes space between and around content\n items along the main-axis of a flex container, and the inline axis of a container.\n","propertyValueVariants":[{"value":"center"},{"value":"start"},{"value":"end"},{"value":"flex-start"},{"value":"flex-end"},{"value":"left"},{"value":"right"},{"value":"normal"},{"value":"space-between"},{"value":"space-around"},{"value":"space-evenly"},{"value":"stretch"}]},"index":8},{"key":"node32","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"order","propertyComment":"\n The order CSS property sets the order to lay out an item in a flex or grid container.\n Items in a container are sorted by ascending order value and then by their source code order.\n"},"index":9}]},{"key":"node33","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"palette","propertyComment":"Sets the color of the component"},"index":6,"children":[{"key":"node34","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"backgroundColor","externalProperties":"usr.common-props.color.ColorTypes"},"index":0,"children":[{"key":"node35","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorHue","propertyComment":"A value from the collection of colors, i.e. hues","propertyValue":"red","propertyValueVariants":[{"value":"primary.main"},{"value":"secondary.main"},{"value":"error.main"},{"value":"text.primary"},{"value":"text.secondary"},{"value":"text.disabled"},{"value":"text.hint"},{"value":"red"},{"value":"pink"},{"value":"purple"},{"value":"deepPurple"},{"value":"indigo"},{"value":"blue"},{"value":"lightBlue"},{"value":"cyan"},{"value":"teal"},{"value":"green"},{"value":"lightGreen"},{"value":"lime"},{"value":"yellow"},{"value":"amber"},{"value":"orange"},{"value":"deepOrange"},{"value":"brown"},{"value":"grey"},{"value":"blueGrey"}]},"index":0},{"key":"node36","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorShade","propertyComment":"A value from the collection of colors shades","propertyValue":"300","propertyValueVariants":[{"value":"50"},{"value":"100"},{"value":"200"},{"value":"300"},{"value":"400"},{"value":"500"},{"value":"600"},{"value":"700"},{"value":"800"},{"value":"900"},{"value":"A100"},{"value":"A200"},{"value":"A400"},{"value":"A700"}]},"index":1}]},{"key":"node37","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"color","externalProperties":"usr.common-props.color.ColorTypes"},"index":1,"children":[{"key":"node38","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorHue","propertyComment":"A value from the collection of colors, i.e. hues","propertyValueVariants":[{"value":"primary.main"},{"value":"secondary.main"},{"value":"error.main"},{"value":"text.primary"},{"value":"text.secondary"},{"value":"text.disabled"},{"value":"text.hint"},{"value":"red"},{"value":"pink"},{"value":"purple"},{"value":"deepPurple"},{"value":"indigo"},{"value":"blue"},{"value":"lightBlue"},{"value":"cyan"},{"value":"teal"},{"value":"green"},{"value":"lightGreen"},{"value":"lime"},{"value":"yellow"},{"value":"amber"},{"value":"orange"},{"value":"deepOrange"},{"value":"brown"},{"value":"grey"},{"value":"blueGrey"}]},"index":0},{"key":"node39","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorShade","propertyComment":"A value from the collection of colors shades","propertyValueVariants":[{"value":"50"},{"value":"100"},{"value":"200"},{"value":"300"},{"value":"400"},{"value":"500"},{"value":"600"},{"value":"700"},{"value":"800"},{"value":"900"},{"value":"A100"},{"value":"A200"},{"value":"A400"},{"value":"A700"}]},"index":1}]}]},{"key":"node40","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"positions","propertyComment":"\n Shorthand utilities for quickly configuring the position of an element.\n","externalProperties":"usr.common-props.positions.PositionsTypes"},"index":7,"children":[{"key":"node41","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"bottom","propertyComment":"\n The bottom CSS property participates in setting the vertical position of a positioned element.\n It has no effect on non-positioned elements.\n"},"index":0},{"key":"node42","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"left","propertyComment":"\n The left CSS property participates in specifying the horizontal position of a positioned element.\n It has no effect on non-positioned elements.\n"},"index":1},{"key":"node43","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"position","propertyComment":"\n The position CSS property sets how an element is positioned in a document.\n The top, right, bottom, and left properties determine the final location of positioned elements.\n","propertyValueVariants":[{"value":"static"},{"value":"relative"},{"value":"absolute"},{"value":"sticky"},{"value":"fixed"}]},"index":2},{"key":"node44","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"right","propertyComment":"\n The right CSS property participates in specifying the horizontal position of a positioned element.\n It has no effect on non-positioned elements.\n"},"index":3},{"key":"node45","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"top","propertyComment":"\n The top CSS property participates in specifying the vertical position of a positioned element.\n It has no effect on non-positioned elements.\n"},"index":4},{"key":"node46","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"zIndex","propertyComment":"\n The z-index CSS property sets the z-order of a positioned element and its descendants or flex items.\n Overlapping elements with a larger z-index cover those with a smaller one.\n"},"index":5}]},{"key":"node47","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"sizing","propertyComment":"\n Easily make an element as wide or as tall (relative to its parent) with the width and height utilities.\n","externalProperties":"usr.common-props.sizing.SizingTypes"},"index":8,"children":[{"key":"node48","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"height","propertyComment":"\n The height CSS property specifies the height of an element.\n By default, the property defines the height of the content area.\n Use a string value to specify units: 50%\n"},"index":0},{"key":"node49","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"maxHeight","propertyComment":"\n The max-height CSS property sets the maximum height of an element.\n It prevents the used value of the height property from becoming larger than the value specified for max-height.\n Use a string value to specify units: 50%\n"},"index":1},{"key":"node50","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"maxWidth","propertyComment":"\n The max-width CSS property sets the maximum width of an element.\n It prevents the used value of the width property from becoming larger than the value specified by max-width.\n Use a string value to specify units: 50%\n"},"index":2},{"key":"node51","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"minHeight","propertyComment":"\n The min-height CSS property sets the minimum height of an element.\n It prevents the used value of the height property from becoming smaller than the value specified for min-height.\n Use a string value to specify units: 50%\n"},"index":3},{"key":"node52","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"minWidth","propertyComment":"\n The min-width CSS property sets the minimum width of an element.\n It prevents the used value of the width property from becoming smaller than the value specified for min-width.\n Use a string value to specify units: 50%\n"},"index":4},{"key":"node53","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"width","propertyComment":"\n The width CSS property sets an element's width. By default, it sets the width of the content area.\n Use a string value to specify units: 50%\n"},"index":5}]},{"key":"node54","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"spacing","propertyComment":"\n A range of shorthand responsive margin and padding utility classes to modify an element’s appearance.\n","externalProperties":"usr.common-props.spacing.SpacingTypes"},"index":9,"children":[{"key":"node55","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"marginSpacing","propertyComment":"\n A group of the margin properties\n Depending on the input and the theme configuration, the following transformation is applied:\n (1) number - the property is multiplied by the theme spacing value,\n (2) number - the property is used as the array index in theme spacing array,\n (3) string - the property is passed as raw CSS value\n"},"index":0,"children":[{"key":"node56","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"margin","propertyComment":"\n The property sets the margin area.\n"},"index":0},{"key":"node57","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginBottom","propertyComment":"\n The property sets the margin area on the bottom of an element.\n"},"index":1},{"key":"node58","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginLeft","propertyComment":"\n The property sets the margin area on the left side of an element.\n"},"index":2},{"key":"node59","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginRight","propertyComment":"\n The property sets the margin area on the right side of an element.\n"},"index":3},{"key":"node60","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginTop","propertyComment":"\n The property sets the margin area on the top of an element.\n"},"index":4},{"key":"node61","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginX","propertyComment":"\n The property sets the margin area on the left and right sides of an element.\n"},"index":5},{"key":"node62","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginY","propertyComment":"\n The property sets the margin area on the top and bottom sides of an element.\n"},"index":6}]},{"key":"node63","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"paddingSpacing","propertyComment":"\n A group of the padding properties.\n Depending on the input and the theme configuration, the following transformation is applied:\n (1) number - the property is multiplied by the theme spacing value,\n (2) number - the property is used as the array index in theme spacing array,\n (3) string - the property is passed as raw CSS value\n"},"index":1,"children":[{"key":"node64","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"padding","propertyComment":"\n The property sets the padding area on all four sides of an element.\n"},"index":0},{"key":"node65","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingBottom","propertyComment":"\n The property sets the padding area on the bottom of an element.\n"},"index":1},{"key":"node66","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingLeft","propertyComment":"\n The property sets the padding area on the left side of an element.\n"},"index":2},{"key":"node67","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingRight","propertyComment":"\n The property sets the padding area on the right side of an element.\n"},"index":3},{"key":"node68","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingTop","propertyComment":"\n The property sets the padding area on the top of an element.\n"},"index":4},{"key":"node69","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingX","propertyComment":"\n The property sets the padding area on the left and right sides of an element.\n"},"index":5},{"key":"node70","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingY","propertyComment":"\n The property sets the padding area on the top and bottom sides of an element.\n"},"index":6}]}]},{"key":"node71","type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"typography","propertyComment":"Text utilities to control alignment, wrapping, weight, and more.","externalProperties":"usr.common-props.typography.TypographyTypes"},"index":10,"children":[{"key":"node72","type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"fontSize","propertyComment":"\n The font-size CSS property sets the size of the font.\n"},"index":0},{"key":"node73","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"fontStyle","propertyComment":"\n The font-style CSS property sets whether a font should be styled with a normal, italic.\n","propertyValueVariants":[{"value":"normal"},{"value":"italic"}]},"index":1},{"key":"node74","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"fontWeight","propertyComment":"\n Sets the weight (or boldness) of the font according to the application settings.\n","propertyValueVariants":[{"value":"fontWeightLight"},{"value":"fontWeightRegular"},{"value":"fontWeightMedium"},{"value":"fontWeightBold"}]},"index":2},{"key":"node75","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"letterSpacing","propertyComment":"\n The letter-spacing CSS property sets the spacing behavior between text characters.\n"},"index":3},{"key":"node76","type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"lineHeight","propertyComment":"\n The line-height CSS property sets the height of a line box.\n It's commonly used to set the distance between lines of text.\n On block-level elements, it specifies the minimum height of line boxes within the element.\n"},"index":4},{"key":"node77","type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"textAlign","propertyComment":"\n The text-align CSS property sets the horizontal alignment of a block element or table-cell box.\n","propertyValueVariants":[{"value":"start"},{"value":"end"},{"value":"left"},{"value":"right"},{"value":"center"},{"value":"justify"},{"value":"match-parent"}]},"index":5}]}]}}